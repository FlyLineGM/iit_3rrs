(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    380524,       7386]
NotebookOptionsPosition[    378440,       7316]
NotebookOutlinePosition[    378826,       7333]
CellTagsIndexPosition[    378783,       7330]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[" 3-RRS: Inverse Kinematics", "Title",
 CellChangeTimes->{
  3.6672870941344056`*^9, {3.674905629068396*^9, 3.6749056422172284`*^9}}],

Cell["\<\
Convensions:
lcr - crank length;
lst - strut length;
rb - base radius;
ra - top platform radius;
{\[Theta]1, \[Theta]2, \[Theta]3} - active variables;
{\[Phi]1, \[Phi]2, \[Phi]3} - passive variables;
p1, p2, p3 are the three corners of the top triangle;
b1, b2, b3 are the three base points
pc is the centre of the top platform\
\>", "Text",
 CellChangeTimes->{{3.67422155715113*^9, 3.674221579520019*^9}, {
  3.6742216640201097`*^9, 3.674221666397827*^9}, {3.674224146945496*^9, 
  3.6742241661582613`*^9}, {3.690946732005769*^9, 3.690946733093367*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"solveRRdyad", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x1_", ",", " ", "y1_"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x2_", ",", " ", "y2_"}], "}"}], ",", "l1_", ",", " ", "l2_", 
      ",", " ", "\[Theta]1_", ",", "\[Theta]2_"}], "]"}], " ", ":=", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "a", ",", " ", "b", ",", " ", "c", ",", " ", "sol\[Theta]2", ",", " ", 
        "sol\[Theta]1", ",", " ", "sol\[Theta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "find", " ", "the", " ", "solutions", " ", "for", " ", "\[Theta]2", 
        " ", "first"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", " ", "=", " ", 
        RowBox[{"2", "*", "l2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "x1"}], "+", "x2"}], ")"}]}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"b", " ", "=", " ", 
        RowBox[{"2", "*", "l2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "y1"}], "+", "y2"}], ")"}]}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"c", " ", "=", " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"l1", "^", "2"}]}], "+", 
         RowBox[{"l2", "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x1", "-", "x2"}], ")"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y1", "-", "y2"}], ")"}], "^", "2"}]}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"sol\[Theta]2", " ", "=", " ", 
        RowBox[{"solveLinTrig1", "[", 
         RowBox[{"a", ",", " ", "b", ",", " ", "c", ",", " ", "\[Theta]2"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"sol\[Theta]1", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"\[Theta]1", "\[Rule]", 
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "x1"}], "+", "x2", "+", 
               RowBox[{"l2", "*", 
                RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]}], ")"}], "/", 
             "l1"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "y1"}], "+", "y2", "+", 
               RowBox[{"l2", "*", 
                RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}], "/", 
             "l1"}]}], "]"}]}], "}"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"sol\[Theta]", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Union", "[", 
           RowBox[{
            RowBox[{"sol\[Theta]1", "/.", "#"}], ",", " ", "#"}], "]"}], 
          "&"}], " ", "/@", " ", "sol\[Theta]2"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "find", " ", "solution", " ", "for", " ", "\[Theta]1", " ", "in", " ",
          "terms", " ", "of", " ", "\[Theta]2"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "sol\[Theta]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "  "}]], "Input",
 CellChangeTimes->{{3.674299150425844*^9, 3.674299233445882*^9}, {
   3.6742993257505198`*^9, 3.674299358330688*^9}, {3.6742994227371283`*^9, 
   3.674299428019876*^9}, {3.6742998327957134`*^9, 3.67429985157083*^9}, {
   3.6743009839786015`*^9, 3.67430098854082*^9}, {3.6743010844830456`*^9, 
   3.674301088869773*^9}, {3.6743011687638407`*^9, 3.674301236044646*^9}, {
   3.6743012723134394`*^9, 3.674301275166463*^9}, {3.67430149163142*^9, 
   3.674301496572934*^9}, {3.6743015405341744`*^9, 3.67430154325611*^9}, {
   3.67430944545799*^9, 3.6743094488813972`*^9}, {3.674309495594614*^9, 
   3.6743095283569307`*^9}, {3.6743097317996044`*^9, 
   3.6743097611624904`*^9}, {3.674310783897921*^9, 3.6743107862646017`*^9}, {
   3.674310828166382*^9, 3.6743108296634502`*^9}, 3.6749095131438165`*^9, {
   3.674910366959041*^9, 3.6749103715489655`*^9}, {3.6749114207898016`*^9, 
   3.6749114607079115`*^9}, {3.6749118189299707`*^9, 
   3.6749118316910286`*^9}, {3.675002777434388*^9, 3.6750028166493373`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solveLinTrig1", "[", 
    RowBox[{"a_", ",", " ", "b_", ",", " ", "c_", ",", " ", "\[Theta]_"}], 
    "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[CapitalDelta]", ",", " ", "sqrt\[CapitalDelta]", ",", " ", 
       "onebydenominator", ",", " ", "t", ",", " ", "solt"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalDelta]", " ", "=", "  ", 
       RowBox[{
        RowBox[{"a", "^", "2"}], " ", "+", " ", 
        RowBox[{"b", "^", "2"}], " ", "-", " ", 
        RowBox[{"c", "^", "2"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{
        "if", " ", "\[CapitalDelta]", " ", "is", " ", "available", " ", "as", 
         " ", "a", " ", "number"}], ",", " ", 
        RowBox[{
         RowBox[{
         "check", " ", "if", " ", "it", " ", "is", " ", "positive", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"NumericQ", "[", "\[CapitalDelta]", "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"N", "[", "\[CapitalDelta]", "]"}], " ", "<", " ", 
                "0"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Print", "[", 
                 RowBox[{
                 "\"\<solveLinTrig1::warning: the given coefficients do not \
lead to real values of \>\"", ",", " ", "\[Theta]"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}]}], ";"}]}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"sqrt\[CapitalDelta]", " ", "=", " ", 
       RowBox[{"Sqrt", "[", "\[CapitalDelta]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"onebydenominator", " ", "=", " ", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"a", " ", "-", " ", "c"}], ")"}]}]}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"TODO", ":", " ", 
        RowBox[{
        "add", " ", "check", " ", "for", " ", "the", " ", "vanishing", " ", 
         "denominator", " ", "following", " ", "the", " ", "above", " ", 
         "example"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"solt", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", "-", " ", "sqrt\[CapitalDelta]"}], ")"}], "*", " ", 
            "onebydenominator"}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
         " ", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"b", "+", "  ", "sqrt\[CapitalDelta]"}], ")"}], "*", " ",
             "onebydenominator"}]}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Theta]", "\[Rule]", " ", 
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{"t", "^", "2"}]}], ",", " ", 
            RowBox[{"2", "*", "t"}]}], "]"}]}], "}"}], "/.", "solt"}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.674309400834235*^9, 3.674309430323227*^9}, 
   3.674309537753614*^9, {3.674309570215698*^9, 3.6743095766892967`*^9}, {
   3.674309659763358*^9, 3.674309691314808*^9}, 3.6743097369532638`*^9, 
   3.6743105244263935`*^9, {3.6743105628867397`*^9, 3.674310570421114*^9}, {
   3.6743106838197384`*^9, 3.674310690867771*^9}, {3.674310727220601*^9, 
   3.6743107536323977`*^9}, 3.6749095380306215`*^9, {3.674918761735388*^9, 
   3.674918784199128*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solveRRdyad", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "0.4", ",", "1.4", ",", "\[Theta]", 
    ",", "\[Phi]"}], "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.674909345641897*^9, 3.6749093937233853`*^9}, {
  3.6749095452221165`*^9, 3.6749095511536756`*^9}, {3.6749095832093353`*^9, 
  3.674909606429684*^9}, {3.674909706535984*^9, 3.674909873781166*^9}, {
  3.674990145944957*^9, 3.6749901465076637`*^9}, {3.675002824360046*^9, 
  3.6750028264893703`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]", "\[Rule]", 
      RowBox[{"-", "0.6076875625523366`"}]}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"-", "2.0711349732453646`"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]", "\[Rule]", "2.178483889347233`"}], ",", 
     RowBox[{"\[Phi]", "\[Rule]", 
      RowBox[{"-", "2.641254007139325`"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.675248177856789*^9, 3.675253980107421*^9, 
  3.675403217604452*^9, 3.6754038602538586`*^9, 3.67933576939954*^9, 
  3.67933841066125*^9, 3.6793541516946955`*^9, 3.687748732720763*^9, 
  3.687749725219049*^9, 3.690944028711268*^9, 3.690946524232174*^9, 
  3.6909466698799763`*^9, 3.6909467398919077`*^9, 3.6917401442235727`*^9, 
  3.700557772292622*^9, 3.708654506611969*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"k\[Phi]", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"c1", " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
         RowBox[{"Tan", "[", 
          RowBox[{"\[Phi]", "/", "2"}], "]"}]}]}], ",", " ", 
       RowBox[{"c2", "\[Rule]", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
         RowBox[{"Tan", "[", 
          RowBox[{"\[Phi]", "/", "2"}], "]"}]}]}]}], "}"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{"Not", " ", 
      RowBox[{"used", "!!"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"rotation", " ", "matrix"}], ",", " ", 
      RowBox[{
       RowBox[{"Rodrigue", "'"}], "s", " ", "parameters"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Rc", "[", 
      RowBox[{"c1_", ",", "c2_", ",", "c3_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["c1", "2"], "+", 
          SuperscriptBox["c2", "2"], "+", 
          SuperscriptBox["c3", "2"]}], ")"}]}], ")"}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           SuperscriptBox["c1", "2"], "-", 
           SuperscriptBox["c2", "2"], "-", 
           SuperscriptBox["c3", "2"], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"2", "*", "c1", "*", "c2"}], "-", 
           RowBox[{"2", "*", "c3"}]}], ",", 
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{"c2", "+", 
             RowBox[{"c1", "*", "c3"}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", "*", "c2"}], "+", "c3"}], ")"}]}], ",", 
          RowBox[{"1", "-", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "-", 
           SuperscriptBox["c3", "2"]}], ",", 
          RowBox[{
           RowBox[{"-", "2"}], "*", 
           RowBox[{"(", 
            RowBox[{"c1", "-", 
             RowBox[{"c2", "*", "c3"}]}], ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", "*", "c3"}], "-", "c2"}], ")"}]}], ",", 
          RowBox[{"2", "*", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", "*", "c3"}]}], ")"}]}], ",", 
          RowBox[{"1", "-", 
           SuperscriptBox["c1", "2"], "-", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]}], "}"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Rotation", " ", "matrix"}], ",", " ", 
     RowBox[{"Tait", "-", 
      RowBox[{"Brian", " ", "convension"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rtb", "[", 
      RowBox[{"\[Alpha]_", ",", "\[Beta]_", ",", "\[Gamma]_"}], "]"}], ":=", 
     " ", 
     RowBox[{
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Alpha]", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Beta]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
      RowBox[{"RotationMatrix", "[", 
       RowBox[{"\[Gamma]", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Rotation", " ", "about", " ", "z", " ", "axis"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Rz", "[", "\[Theta]_", "]"}], ":=", " ", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.674221583871128*^9, 3.6742215970634956`*^9}, 
   3.6742217383559704`*^9, 3.6745245669605026`*^9, {3.6749073478705645`*^9, 
   3.674907362102073*^9}, {3.674989705277382*^9, 3.674989724778031*^9}, 
   3.674989868437978*^9, {3.6752475227003775`*^9, 3.675247537828149*^9}, {
   3.675247595393035*^9, 3.675247659064231*^9}, 3.6752490830271497`*^9, 
   3.675253916650606*^9, {3.7086574150725183`*^9, 3.7086574220073137`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"centre", " ", "of", " ", "top", " ", "platform"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pc", "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "corner", " ", "points", " ", "of", " ", "the", " ", "top", " ", 
     "platform"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1a", "=", " ", 
     RowBox[{"pc", " ", "+", 
      RowBox[{
       RowBox[{"Rtb", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"ra", ",", "0", ",", "0"}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2a", "=", " ", 
     RowBox[{"pc", " ", "+", 
      RowBox[{
       RowBox[{"Rtb", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ".", 
       RowBox[{"Rz", "[", 
        RowBox[{"2", 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"ra", ",", "0", ",", "0"}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3a", "=", " ", 
     RowBox[{"pc", " ", "+", 
      RowBox[{
       RowBox[{"Rtb", "[", 
        RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ".", 
       RowBox[{"Rz", "[", 
        RowBox[{"4", 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"ra", ",", "0", ",", "0"}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"solving", " ", "for", " ", "x"}], ",", 
     RowBox[{
     "y", " ", "and", " ", "c3", " ", "from", " ", "planarity", " ", 
      "condition"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"solxyc3", "=", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1a", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rz", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], 
                 RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "p2a"}], ")"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rz", "[", 
                RowBox[{
                 RowBox[{"-", "4"}], 
                 RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "p3a"}], ")"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Gamma]", "]"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Gamma]", "]"}], "^", "2"}], "-", "1"}]}],
            "}"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"Cos", "[", "\[Gamma]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Gamma]", "]"}]}], "}"}]}], "]"}], "]"}], 
      "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.681113771319147*^9, 3.6811138865492783`*^9}, {
  3.681113936450778*^9, 3.681113962048524*^9}, {3.681113997960662*^9, 
  3.681114004836801*^9}, {3.687749257162417*^9, 3.687749283721572*^9}}],

Cell[CellGroupData[{

Cell[BoxData["solxyc3"], "Input",
 CellChangeTimes->{{3.708654934531514*^9, 3.7086549367258883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["c1", "2"], "-", 
        SuperscriptBox["c2", "2"]}], ")"}], " ", "ra"}], 
     RowBox[{"1", "+", 
      SuperscriptBox["c1", "2"], "+", 
      SuperscriptBox["c2", "2"]}]]}], ",", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "c1", " ", "c2", " ", "ra"}], 
      RowBox[{"1", "+", 
       SuperscriptBox["c1", "2"], "+", 
       SuperscriptBox["c2", "2"]}]]}]}], ",", 
   RowBox[{"c3", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.708654937231933*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1b", "=", " ", 
   RowBox[{
    RowBox[{"p1a", "/.", "solxyc3"}], "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2b", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "p2a"}], "/.", "solxyc3"}],
     "//", "Simplify"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3b", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{
        RowBox[{"-", "4"}], 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "p3a"}], "/.", "solxyc3"}],
     "//", "Simplify"}]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.681114038325151*^9, 3.681114173398657*^9}, {
  3.687749056655808*^9, 3.687749063814105*^9}}],

Cell[CellGroupData[{

Cell["Spherical joint wedge vectors wrt base frame", "Subsection",
 CellChangeTimes->{{3.708657346598381*^9, 3.708657367597118*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "del0", " ", "wedge", " ", "angle", " ", "of", " ", "the", " ", 
    "spherical", " ", "joint", "\[IndentingNewLine]", "Rotation", " ", 
    "about"}], " ", "-", 
   RowBox[{"y", " ", "axis", " ", "in", " ", "each", " ", "plane"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.7086566005548553`*^9, 3.7086566144188747`*^9}, {
  3.708657052591428*^9, 3.708657065447858*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"v1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "del0", "]"}]}], ",", "0", ",", 
     RowBox[{"Cos", "[", "del0", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2", "=", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "v1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v3", "=", 
   RowBox[{
    RowBox[{"Rz", "[", 
     RowBox[{"4", 
      RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "v1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dc1", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Rtb", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ".", 
      "v1"}], "/.", "solxyc3"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dc2", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Rtb", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ".", 
      "v2"}], "/.", "solxyc3"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dc3", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Rtb", "[", 
       RowBox[{"\[Alpha]", ",", "\[Beta]", ",", "\[Gamma]"}], "]"}], ".", 
      "v3"}], "/.", "solxyc3"}], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.681117318748725*^9, 3.6811175786838093`*^9}, {
   3.681117611118437*^9, 3.6811176622616034`*^9}, 3.6811178192238493`*^9, {
   3.681119045719099*^9, 3.6811190630181637`*^9}, {3.681122308183696*^9, 
   3.6811223125832*^9}, {3.6811224500006447`*^9, 3.681122468750738*^9}, {
   3.681122645249486*^9, 3.6811226551883793`*^9}, 3.681125677279626*^9, {
   3.681172350211711*^9, 3.6811723888480864`*^9}, {3.687749108377284*^9, 
   3.687749109359399*^9}, {3.687749156519122*^9, 3.687749156679357*^9}, {
   3.708657124276671*^9, 3.7086571320604887`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CForm", "[", 
   RowBox[{"dc3", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Alpha]", "\[Rule]", "alpha"}], ",", " ", 
    RowBox[{"\[Beta]", "\[Rule]", "beta"}], ",", 
    RowBox[{"Cos", "\[Rule]", "cos"}], ",", 
    RowBox[{"Sin", "\[Rule]", "sin"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.681117734932588*^9, 3.681117787849568*^9}, {
  3.681117841151042*^9, 3.6811179380876637`*^9}, {3.681118120782864*^9, 
  3.681118132894104*^9}, {3.681118837373201*^9, 3.6811188767331257`*^9}, {
  3.681119231084387*^9, 3.681119266577655*^9}, {3.6811256809249363`*^9, 
  3.681125781533516*^9}}],

Cell["\<\
cos(alpha)*cos(beta)*cos(del0) + ((-((cos(alpha)*(cos(alpha) + \
cos(beta))*sin(beta))/
           Sqrt(Power(1 + cos(alpha)*cos(beta),2))) - 
        (Power(sin(alpha),2)*sin(beta))/Sqrt(Power(1 + \
cos(alpha)*cos(beta),2)))*sin(del0))/2.\\
    + (Sqrt(3)*(((cos(alpha) + cos(beta))*sin(alpha))/
         Sqrt(Power(1 + cos(alpha)*cos(beta),2)) - 
        (cos(alpha)*sin(alpha)*Power(sin(beta),2))/Sqrt(Power(1 + \
cos(alpha)*cos(beta),2)))*
      sin(del0))/2.\
\>", "Output",
 CellChangeTimes->{{3.681117741670184*^9, 3.681117792640727*^9}, {
   3.681117856804879*^9, 3.681117870849098*^9}, {3.681117907984932*^9, 
   3.681117939585372*^9}, {3.681118121718251*^9, 3.681118133234769*^9}, {
   3.6811188408233023`*^9, 3.681118877935296*^9}, {3.681119234930222*^9, 
   3.6811192673498697`*^9}, {3.681125687720883*^9, 3.681125781909524*^9}, 
   3.687748666538672*^9, {3.687748701685629*^9, 3.687748733352809*^9}, 
   3.68774932511911*^9, 3.687749364516304*^9, 3.687749727177446*^9, 
   3.6909440307169647`*^9, 3.690946527154011*^9, 3.690946672193619*^9, 
   3.690946742702025*^9, 3.691740146212845*^9, 3.7005577759644003`*^9, 
   3.7086545107107058`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Passive angles \[Phi] for comparison with wedge angle", "Subsection",
 CellChangeTimes->{{3.7086573257442408`*^9, 3.708657340144655*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", "gam", "]"}], ",", "0", ",", 
    RowBox[{"Sin", "[", "gam", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"a2", "=", 
  RowBox[{
   RowBox[{"Rz", "[", 
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
   "a1"}]}], "\[IndentingNewLine]", 
 RowBox[{"a3", " ", "=", " ", 
  RowBox[{
   RowBox[{"Rz", "[", 
    RowBox[{"4", 
     RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "a1"}]}]}], "Input",
 CellChangeTimes->{{3.681132786309381*^9, 3.681132842978706*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", "gam", "]"}], ",", "0", ",", 
   RowBox[{"Sin", "[", "gam", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.681132810028414*^9, 3.681132843519953*^9}, {
   3.687748721687542*^9, 3.687748733515339*^9}, 3.6877497272182007`*^9, 
   3.687749868140608*^9, 3.690944030778263*^9, 3.6909465272365303`*^9, 
   3.690946672275642*^9, 3.690946742753562*^9, 3.691740146282734*^9, 
   3.700557776252276*^9, 3.7086545107291813`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Cos", "[", "gam", "]"}], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    SqrtBox["3"], " ", 
    RowBox[{"Cos", "[", "gam", "]"}]}], ",", 
   RowBox[{"Sin", "[", "gam", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.681132810028414*^9, 3.681132843519953*^9}, {
   3.687748721687542*^9, 3.687748733515339*^9}, 3.6877497272182007`*^9, 
   3.687749868140608*^9, 3.690944030778263*^9, 3.6909465272365303`*^9, 
   3.690946672275642*^9, 3.690946742753562*^9, 3.691740146282734*^9, 
   3.700557776252276*^9, 3.708654510730304*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Cos", "[", "gam", "]"}], "2"]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", 
    SqrtBox["3"], " ", 
    RowBox[{"Cos", "[", "gam", "]"}]}], ",", 
   RowBox[{"Sin", "[", "gam", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.681132810028414*^9, 3.681132843519953*^9}, {
   3.687748721687542*^9, 3.687748733515339*^9}, 3.6877497272182007`*^9, 
   3.687749868140608*^9, 3.690944030778263*^9, 3.6909465272365303`*^9, 
   3.690946672275642*^9, 3.690946742753562*^9, 3.691740146282734*^9, 
   3.700557776252276*^9, 3.708654510736822*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Singularity functions", "Subsection",
 CellChangeTimes->{{3.7086573860747843`*^9, 3.708657392087803*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"centre", " ", "of", " ", "top", " ", "platform"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pc", "=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "corner", " ", "points", " ", "of", " ", "the", " ", "top", " ", 
     "platform"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1a", "=", " ", 
     RowBox[{"pc", " ", "+", 
      RowBox[{
       RowBox[{"Rc", "[", 
        RowBox[{"c1", ",", "c2", ",", "c3"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"ra", ",", "0", ",", "0"}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2a", "=", " ", 
     RowBox[{"pc", " ", "+", 
      RowBox[{
       RowBox[{"Rc", "[", 
        RowBox[{"c1", ",", "c2", ",", "c3"}], "]"}], ".", 
       RowBox[{"Rz", "[", 
        RowBox[{"2", 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"ra", ",", "0", ",", "0"}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3a", "=", " ", 
     RowBox[{"pc", " ", "+", 
      RowBox[{
       RowBox[{"Rc", "[", 
        RowBox[{"c1", ",", "c2", ",", "c3"}], "]"}], ".", 
       RowBox[{"Rz", "[", 
        RowBox[{"4", 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"ra", ",", "0", ",", "0"}], "}"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"solving", " ", "for", " ", "x"}], ",", 
     RowBox[{
     "y", " ", "and", " ", "c3", " ", "from", " ", "planarity", " ", 
      "condition"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"solxyc3", "=", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1a", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rz", "[", 
                RowBox[{
                 RowBox[{"-", "2"}], 
                 RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "p2a"}], ")"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Rz", "[", 
                RowBox[{
                 RowBox[{"-", "4"}], 
                 RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "p3a"}], ")"}], 
             "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "\[Equal]", "0"}], ",", 
         
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "c3"}], "}"}]}], "]"}], "]"}], "//", 
      "Flatten"}]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"inverse", " ", "kinematics"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"lendata", "=", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"rb", "\[Rule]", "300"}], ",", 
       RowBox[{"lcr", " ", "\[Rule]", " ", "283"}], ",", 
       RowBox[{"lst", "\[Rule]", "531"}], ",", " ", 
       RowBox[{"ra", " ", "\[Rule]", " ", "507"}], ",", 
       RowBox[{"del0", "\[Rule]", 
        RowBox[{"0", "*", 
         RowBox[{"\[Pi]", "/", "180"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "corner", " ", "points", " ", "of", " ", "top", " ", "platform"}], " ", 
     "-", " ", 
     RowBox[{"transformed", " ", "on", " ", "to", " ", "x"}], "-", 
     RowBox[{"z", " ", "plane"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1b", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"p1a", "/.", "solxyc3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2b", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"p2a", "/.", "solxyc3"}], ")"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3b", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Rz", "[", 
        RowBox[{
         RowBox[{"-", "4"}], 
         RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
       RowBox[{"(", 
        RowBox[{"p3a", "/.", "solxyc3"}], ")"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.67422438046904*^9, 3.674224390604741*^9}, {
   3.674224528005597*^9, 3.6742245455061946`*^9}, {3.674224600560028*^9, 
   3.67422471068185*^9}, {3.674224900868565*^9, 3.6742249952919564`*^9}, {
   3.674225027786433*^9, 3.674225032529357*^9}, 3.6742251197698984`*^9, 
   3.6742252785134907`*^9, {3.674225393518672*^9, 3.674225396674021*^9}, {
   3.674297205780652*^9, 3.674297212078131*^9}, {3.6745245279107556`*^9, 
   3.6745245534048834`*^9}, 3.67498965082631*^9, {3.6752477076497116`*^9, 
   3.6752477753489246`*^9}, 3.6752483448380747`*^9, 3.675249911904986*^9, 
   3.675249982754817*^9, {3.675250038010062*^9, 3.6752500846091604`*^9}, {
   3.6752501220791664`*^9, 3.6752501630052357`*^9}, {3.6752539030355015`*^9, 
   3.675253910885021*^9}, {3.675339016529753*^9, 3.675339026645938*^9}, {
   3.67533906350912*^9, 3.6753390998629627`*^9}, {3.675339709900071*^9, 
   3.675339747783985*^9}, {3.681117686876199*^9, 3.681117687636133*^9}, {
   3.687752280808669*^9, 3.687752337499055*^9}, {3.6909441012211323`*^9, 
   3.690944106540524*^9}, {3.690946547331028*^9, 3.690946557058114*^9}, {
   3.690946613694024*^9, 3.69094663319907*^9}, {3.6917410153895273`*^9, 
   3.691741026192513*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"base", " ", "coordinates"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"b1", "=", 
     RowBox[{"{", 
      RowBox[{"rb", ",", "0", ",", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", "=", 
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"rb", ",", "0", ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b3", "=", 
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{"4", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
      RowBox[{"{", 
       RowBox[{"rb", ",", "0", ",", "0"}], "}"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6742970158205795`*^9, 3.6742970405391464`*^9}, {
   3.674301819294403*^9, 3.6743018226948156`*^9}, {3.6744405051993737`*^9, 
   3.6744405134474173`*^9}, {3.6749063877157974`*^9, 
   3.6749064087202005`*^9}, {3.6749064421443367`*^9, 
   3.6749064713274517`*^9}, {3.6749065161189566`*^9, 3.674906589694132*^9}, 
   3.6749124207905254`*^9, {3.6749898004522505`*^9, 3.6749898482540607`*^9}, {
   3.6749898790802546`*^9, 3.674989943300764*^9}, {3.6749900387284136`*^9, 
   3.674990088694251*^9}, {3.674990164768718*^9, 3.674990223768199*^9}, {
   3.6751691625707483`*^9, 3.6751691671320148`*^9}, {3.6751694690461135`*^9, 
   3.6751694736874084`*^9}, {3.6752478994884186`*^9, 3.6752479282818694`*^9}, 
   3.675248004086647*^9, {3.675249687762908*^9, 3.675249766388774*^9}, 
   3.675249832132322*^9, {3.6752503301799717`*^9, 3.6752503776867137`*^9}, 
   3.6752541042786837`*^9, {3.6752552060012217`*^9, 3.6752552069511576`*^9}, {
   3.675255319240713*^9, 3.6752553270196905`*^9}, {3.675258942694021*^9, 
   3.6752589566077614`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "coordinates", " ", "of", " ", "passive", " ", "joint", " ", "locations"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"c1a", "=", 
     RowBox[{"(", 
      RowBox[{"b1", "+", 
       RowBox[{"lcr", "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]1", "]"}], ",", "0", ",", 
          RowBox[{"Sin", "[", "\[Theta]1", "]"}]}], "}"}]}]}], ")"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2a", "=", 
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"b1", "+", 
        RowBox[{"lcr", "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]2", "]"}], ",", "0", ",", 
           RowBox[{"Sin", "[", "\[Theta]2", "]"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c3a", "=", 
     RowBox[{
      RowBox[{"Rz", "[", 
       RowBox[{"4", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", 
      RowBox[{"(", 
       RowBox[{"b1", "+", 
        RowBox[{"lcr", "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]3", "]"}], ",", "0", ",", 
           RowBox[{"Sin", "[", "\[Theta]3", "]"}]}], "}"}]}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "coordinates", " ", "of", " ", "passive", " ", "joint", " ", "locations", 
     " ", "transformed", " ", "on", " ", "to", " ", "xz", " ", "plane"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c1b", "=", "c1a"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2b", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "c2a"}], ")"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c3b", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Rz", "[", 
         RowBox[{
          RowBox[{"-", "4"}], 
          RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "c3a"}], ")"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6742970158205795`*^9, 3.6742970405391464`*^9}, {
   3.674301819294403*^9, 3.6743018226948156`*^9}, {3.6744405051993737`*^9, 
   3.6744405134474173`*^9}, {3.6749063877157974`*^9, 
   3.6749064087202005`*^9}, {3.6749064421443367`*^9, 
   3.6749064713274517`*^9}, {3.6749065161189566`*^9, 3.674906589694132*^9}, 
   3.6749124207905254`*^9, {3.6749898004522505`*^9, 3.6749898482540607`*^9}, {
   3.6749898790802546`*^9, 3.674989943300764*^9}, {3.6749900387284136`*^9, 
   3.674990088694251*^9}, {3.674990164768718*^9, 3.674990223768199*^9}, {
   3.6751691625707483`*^9, 3.6751691671320148`*^9}, {3.6751694690461135`*^9, 
   3.6751694736874084`*^9}, {3.6752478994884186`*^9, 3.6752479282818694`*^9}, 
   3.675248004086647*^9, {3.675249687762908*^9, 3.675249766388774*^9}, 
   3.675249832132322*^9, {3.6752503301799717`*^9, 3.6752503776867137`*^9}, 
   3.6752541042786837`*^9, {3.675255149856335*^9, 3.6752551523649015`*^9}, {
   3.6752552252987156`*^9, 3.675255293662053*^9}, {3.675255377273868*^9, 
   3.6752553818323445`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", "S2", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Eta]1", " ", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c1b", " ", "-", " ", "p1b"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"c1b", " ", "-", " ", "p1b"}], ")"}]}], "-", 
       SuperscriptBox["lst", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]2", " ", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c2b", " ", "-", " ", "p2b"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"c2b", " ", "-", " ", "p2b"}], ")"}]}], "-", 
       SuperscriptBox["lst", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Eta]3", " ", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"c3b", " ", "-", " ", "p3b"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"c3b", " ", "-", " ", "p3b"}], ")"}]}], "-", 
       SuperscriptBox["lst", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J\[Eta]x", "=", 
     RowBox[{"Simplify", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[Eta]1", ",", "\[Eta]2", ",", "\[Eta]3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"c1", ",", "c2", ",", "z"}], "}"}], "}"}]}], "]"}], "]"}]}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6749107749986725`*^9, 3.6749108158609276`*^9}, {
   3.6749109084193883`*^9, 3.6749109914486036`*^9}, {3.674911886350709*^9, 
   3.674911898293279*^9}, 3.6749124122940197`*^9, 3.6749179997362485`*^9, {
   3.675002655317751*^9, 3.675002667457945*^9}, 3.6750045302798653`*^9, {
   3.6752484912070355`*^9, 3.675248502845316*^9}, {3.6752485723561563`*^9, 
   3.6752485798474503`*^9}, {3.6752486632296734`*^9, 
   3.6752488272834806`*^9}, {3.675249154722041*^9, 3.675249158777916*^9}, {
   3.675249782635291*^9, 3.6752497865909815`*^9}, {3.675255352625395*^9, 
   3.675255612237052*^9}, {3.6752557081970253`*^9, 3.6752557275727024`*^9}, {
   3.687750074038166*^9, 3.687750074581428*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s2", "=", 
   RowBox[{"Det", "[", "J\[Eta]x", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.687750066693441*^9, 3.687750067640087*^9}, {
  3.68775138616189*^9, 3.6877514123751183`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Plotting", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"b1a", "=", 
     RowBox[{"b1", "/.", "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2a", "=", 
     RowBox[{"b2", "/.", "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b3a", "=", 
     RowBox[{"b3", "/.", "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c1c", "=", 
     RowBox[{"c1a", "/.", "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c2c", "=", 
     RowBox[{"c2a", "/.", "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c3c", "=", 
     RowBox[{"c3a", "/.", "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1c", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"p1a", "/.", "solxyc3"}], "/.", "k\[Phi]"}], "/.", 
      "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2c", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"p2a", "/.", "solxyc3"}], "/.", "k\[Phi]"}], "/.", 
      "lendata"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3c", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"p3a", "/.", "solxyc3"}], "/.", "k\[Phi]"}], "/.", 
      "lendata"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"arrowlength", "=", "300"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xaxis", " ", "=", " ", 
     RowBox[{"Arrow", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pc", ",", 
           RowBox[{"pc", "+", 
            RowBox[{"arrowlength", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Rc", "[", 
                 RowBox[{"c1", ",", "c2", ",", "c3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}]}]}]}], "}"}], "/.", 
         "solxyc3"}], "/.", "k\[Phi]"}], "/.", "lendata"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yaxis", " ", "=", " ", 
     RowBox[{"Arrow", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pc", ",", 
           RowBox[{"pc", "+", 
            RowBox[{"arrowlength", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Rc", "[", 
                 RowBox[{"c1", ",", "c2", ",", "c3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ")"}]}]}]}], "}"}], "/.", 
         "solxyc3"}], "/.", "k\[Phi]"}], "/.", "lendata"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zaxis", " ", "=", " ", 
     RowBox[{"Arrow", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"pc", ",", 
           RowBox[{"pc", "+", 
            RowBox[{"arrowlength", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"Rc", "[", 
                 RowBox[{"c1", ",", "c2", ",", "c3"}], "]"}], "]"}], "[", 
               RowBox[{"[", "3", "]"}], "]"}], ")"}]}]}]}], "}"}], "/.", 
         "solxyc3"}], "/.", "k\[Phi]"}], "/.", "lendata"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"for", " ", "rrDyad"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1d", "=", 
     RowBox[{
      RowBox[{"p1b", "/.", "k\[Phi]"}], "/.", "lendata"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2d", "=", 
     RowBox[{
      RowBox[{"p2b", "/.", "k\[Phi]"}], "/.", "lendata"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3d", "=", 
     RowBox[{
      RowBox[{"p3b", "/.", "k\[Phi]"}], "/.", "lendata"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6752491751735797`*^9, 3.675249175769985*^9}, {
   3.6752492680898466`*^9, 3.6752492763297253`*^9}, {3.675255739759517*^9, 
   3.6752557477624345`*^9}, 3.67525582288594*^9, 3.6752567601430454`*^9, {
   3.6752568090518804`*^9, 3.6752568183399343`*^9}, {3.6752568920564804`*^9, 
   3.67525693261055*^9}, {3.6752570697016745`*^9, 3.6752570723596163`*^9}, {
   3.675257135282693*^9, 3.6752571617312174`*^9}, {3.675257221580039*^9, 
   3.6752572558863163`*^9}, 3.675257287742185*^9, {3.6752573446334577`*^9, 
   3.6752573575412407`*^9}, {3.6752575085667257`*^9, 3.675257536211035*^9}, {
   3.675257572023817*^9, 3.675257689784711*^9}, 3.675258948080263*^9, {
   3.675259118429796*^9, 3.6752591370155067`*^9}, {3.6752592308229895`*^9, 
   3.675259316134122*^9}, {3.675263188486281*^9, 3.67526319729364*^9}, {
   3.6752633718837967`*^9, 3.675263402893538*^9}, {3.6752635240965014`*^9, 
   3.675263530565386*^9}, {3.6752635997126217`*^9, 3.675263614781836*^9}, 
   3.675263721908305*^9, {3.675341041428211*^9, 3.67534108381619*^9}, {
   3.675341351313302*^9, 3.67534136312469*^9}, {3.6753414598864465`*^9, 
   3.67534152809387*^9}, {3.6753415765513077`*^9, 3.675341597985533*^9}, {
   3.675341761829424*^9, 3.675341763619695*^9}, {3.675341811297559*^9, 
   3.6753418401120043`*^9}, {3.675341917329856*^9, 3.6753419334393115`*^9}, {
   3.6753419758244157`*^9, 3.675341992342147*^9}, 3.675342041492056*^9, {
   3.6753422717257366`*^9, 3.6753422972198715`*^9}, {3.675342342190813*^9, 
   3.6753423564289255`*^9}, {3.6753423893352766`*^9, 3.675342396769578*^9}, {
   3.675342518636097*^9, 3.6753425330663457`*^9}, {3.675342863839518*^9, 
   3.675342879049347*^9}, {3.687749654947124*^9, 3.687749670468752*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"s2sub", "=", 
   RowBox[{
    RowBox[{"s2", "/.", "lendata"}], "/.", "k\[Phi]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6653242284736876`*^9, 3.6653242326226916`*^9}, {
   3.665324299810627*^9, 3.6653243402365932`*^9}, {3.6653243813935623`*^9, 
   3.6653244808104734`*^9}, {3.66532451798244*^9, 3.665324556566409*^9}, {
   3.6653246142273607`*^9, 3.6653246280783477`*^9}, {3.665324690264295*^9, 
   3.6653247063612795`*^9}, {3.6653247437952523`*^9, 
   3.6653248230061827`*^9}, {3.665324855690154*^9, 3.6653249092831087`*^9}, {
   3.665324956781066*^9, 3.6653249992440357`*^9}, {3.665325033790003*^9, 
   3.665325066381973*^9}, {3.665325104090942*^9, 3.6653251056399393`*^9}, {
   3.6653251362189136`*^9, 3.6653251538959007`*^9}, {3.665325218271844*^9, 
   3.66532523519783*^9}, {3.665325300506773*^9, 3.665325368822715*^9}, {
   3.6653255015106087`*^9, 3.6653256204415016`*^9}, {3.665326887067423*^9, 
   3.665326892561422*^9}, {3.665327381754998*^9, 3.665327384918994*^9}, {
   3.665410339857134*^9, 3.6654103884110904`*^9}, {3.665410422066063*^9, 
   3.6654104790520134`*^9}, {3.6654108860646744`*^9, 
   3.6654109503016186`*^9}, {3.665411133460455*^9, 3.665411167767426*^9}, {
   3.665507412599758*^9, 3.665507473306747*^9}, {3.665507748468198*^9, 
   3.6655077585301943`*^9}, {3.665507802459687*^9, 3.6655078569846783`*^9}, {
   3.6655111076516285`*^9, 3.6655111230706253`*^9}, {3.665511233153603*^9, 
   3.6655112654125986`*^9}, {3.665511318761589*^9, 3.665511319014593*^9}, {
   3.6655113590315866`*^9, 3.6655114378645744`*^9}, {3.6655115044865556`*^9, 
   3.6655115418505507`*^9}, {3.6655116850865326`*^9, 
   3.6655116870185256`*^9}, {3.665512952444309*^9, 3.665512992110303*^9}, 
   3.66551305689229*^9, {3.665513125631287*^9, 3.6655131259952803`*^9}, {
   3.6655132120292664`*^9, 3.66551323992426*^9}, {3.6655132817242527`*^9, 
   3.6655132832572575`*^9}, 3.6655134087442307`*^9, {3.6655134693622203`*^9, 
   3.665513496716214*^9}, 3.6655347538632097`*^9, {3.665534915995179*^9, 
   3.66553491621918*^9}, {3.6655373419177732`*^9, 3.665537344754764*^9}, {
   3.665629993941908*^9, 3.6656299944039087`*^9}, {3.6656301185441046`*^9, 
   3.6656301368981285`*^9}, {3.6656315770673404`*^9, 
   3.6656315777833405`*^9}, {3.665631676252493*^9, 3.665631696149522*^9}, 
   3.6656322970384464`*^9, {3.665634315277053*^9, 3.665634318964052*^9}, {
   3.6656344406042433`*^9, 3.665634444415245*^9}, {3.665634639204543*^9, 
   3.665634649553559*^9}, {3.6656346863036213`*^9, 3.6656347103886557`*^9}, {
   3.6656347870757756`*^9, 3.6656347955767913`*^9}, {3.665634861358885*^9, 
   3.6656349367310085`*^9}, {3.6656351760763702`*^9, 
   3.6656351894483943`*^9}, {3.6656353415686283`*^9, 3.665635342303624*^9}, {
   3.665644222681265*^9, 3.665644224015272*^9}, 3.665646453409691*^9, {
   3.665656420111004*^9, 3.6656564389470277`*^9}, {3.6656571672521477`*^9, 
   3.665657167636155*^9}, {3.66565723137225*^9, 3.665657232334253*^9}, {
   3.665675481039277*^9, 3.6656754875472913`*^9}, {3.665675527514349*^9, 
   3.6656755311243534`*^9}, {3.665675571701421*^9, 3.6656756444875355`*^9}, {
   3.6656757266716585`*^9, 3.6656757309626603`*^9}, {3.6656771602748604`*^9, 
   3.665677164432867*^9}, {3.665677369825184*^9, 3.665677381259201*^9}, {
   3.665678528002963*^9, 3.665678529390958*^9}, {3.6656786392751336`*^9, 
   3.6656786570731606`*^9}, {3.66567893009558*^9, 3.6656789550356183`*^9}, {
   3.6656790124487066`*^9, 3.6656790327327337`*^9}, {3.6656791587579308`*^9, 
   3.6656791662659426`*^9}, {3.665679200011994*^9, 3.6656792142040157`*^9}, {
   3.6656811702375164`*^9, 3.6656812313231077`*^9}, {3.6656817066518393`*^9, 
   3.665681722941865*^9}, {3.6656817721449385`*^9, 3.665681808348996*^9}, {
   3.6656830973304763`*^9, 3.665683128148029*^9}, {3.665683172868596*^9, 
   3.665683175737095*^9}, {3.665683214584155*^9, 3.6656832316196814`*^9}, {
   3.66568342563548*^9, 3.665683435529498*^9}, {3.6656834918450804`*^9, 
   3.665683534050152*^9}, {3.665683711474924*^9, 3.6656838041400633`*^9}, {
   3.665683870856663*^9, 3.665684008059375*^9}, {3.665684043338428*^9, 
   3.6656840636794643`*^9}, 3.6656841676861205`*^9, {3.665684199838669*^9, 
   3.665684235990223*^9}, {3.6656842822103014`*^9, 3.665684335412381*^9}, {
   3.6656843694599295`*^9, 3.6656845037731347`*^9}, {3.665684594001774*^9, 
   3.665684601458786*^9}, {3.6656888844843693`*^9, 3.665688917033914*^9}, {
   3.6656889731064997`*^9, 3.665688989627026*^9}, {3.6656890434411077`*^9, 
   3.665689124904239*^9}, {3.665689156736288*^9, 3.6656891794193196`*^9}, {
   3.665689234766907*^9, 3.665689270594467*^9}, {3.665689315285533*^9, 
   3.6656893154275274`*^9}, {3.6656894953248014`*^9, 
   3.6656894972158103`*^9}, {3.6657054145797596`*^9, 3.665705425591777*^9}, {
   3.665705470156847*^9, 3.6657054735828447`*^9}, {3.665939942942177*^9, 
   3.6659399585122104`*^9}, 3.6659407090473657`*^9, {3.665940754776436*^9, 
   3.6659407595094395`*^9}, {3.6659410489223757`*^9, 
   3.6659410521823792`*^9}, {3.6659411246104913`*^9, 
   3.6659411266004953`*^9}, {3.665941255739193*^9, 3.6659414063859262`*^9}, {
   3.6659414514595013`*^9, 3.6659414521505003`*^9}, 3.665941612712249*^9, {
   3.665942028562389*^9, 3.6659420520964165`*^9}, {3.6659420827499633`*^9, 
   3.665942083336964*^9}, {3.665942467859557*^9, 3.6659424932845974`*^9}, {
   3.6659425268666477`*^9, 3.665942551983183*^9}, 3.6659428401281276`*^9, {
   3.6659429682003317`*^9, 3.6659429684748297`*^9}, {3.6659430404989347`*^9, 
   3.665943223013216*^9}, {3.6659432940683265`*^9, 3.665943328234376*^9}, {
   3.6659433711369495`*^9, 3.665943514896163*^9}, {3.6659438831442327`*^9, 
   3.66594402625695*^9}, {3.6659443209784026`*^9, 3.665944333778923*^9}, 
   3.665944735612044*^9, {3.665944773810605*^9, 3.6659448408971987`*^9}, {
   3.6659449004442916`*^9, 3.665944922126829*^9}, {3.665945079041068*^9, 
   3.665945151636178*^9}, {3.665945260173848*^9, 3.6659453418044715`*^9}, {
   3.665945702651531*^9, 3.665945703765526*^9}, {3.6659460987631397`*^9, 
   3.665946113100154*^9}, {3.6659462114498067`*^9, 3.665946215681816*^9}, {
   3.665946450818673*^9, 3.6659464685977015`*^9}, {3.6659465028407593`*^9, 
   3.6659465358398037`*^9}, {3.6659653874562483`*^9, 
   3.6659656920869884`*^9}, {3.665965723165963*^9, 3.665965821115878*^9}, {
   3.665965884777829*^9, 3.665965904972808*^9}, 3.6659660751306677`*^9, {
   3.665966118741625*^9, 3.6659662253645353`*^9}, {3.6659663117624607`*^9, 
   3.6659664937743063`*^9}, {3.6659667255631084`*^9, 3.665966738772097*^9}, {
   3.6659668570779953`*^9, 3.6659669034559555`*^9}, 3.66596695877591*^9, {
   3.665967001318877*^9, 3.6659670225698557`*^9}, {3.665967062505821*^9, 
   3.6659670931578016`*^9}, {3.6659672797116346`*^9, 
   3.6659673275685945`*^9}, {3.6659674438144956`*^9, 3.665967467153475*^9}, {
   3.6659675678963895`*^9, 3.66596759009837*^9}, {3.666137217586472*^9, 
   3.666137297082962*^9}, {3.6661373407629585`*^9, 3.6661373586246004`*^9}, {
   3.6661380718018312`*^9, 3.666138076596239*^9}, 3.6749106360898986`*^9, {
   3.6749107098166113`*^9, 3.6749107464026427`*^9}, {3.674910778372506*^9, 
   3.674910785508359*^9}, {3.674911991582205*^9, 3.6749120764795465`*^9}, {
   3.674912194467597*^9, 3.674912356904434*^9}, {3.674912892873287*^9, 
   3.6749129465132465`*^9}, {3.674916743075821*^9, 3.6749168007046804`*^9}, {
   3.6749173482450995`*^9, 3.674917457325212*^9}, {3.6749175129224644`*^9, 
   3.6749175137120256`*^9}, {3.6749175931953993`*^9, 
   3.6749177252068496`*^9}, {3.674917777990267*^9, 3.674917915583211*^9}, {
   3.6749180279417996`*^9, 3.674918038251342*^9}, 3.6749181044989953`*^9, {
   3.6749185708770533`*^9, 3.6749185750380044`*^9}, {3.6749191605853043`*^9, 
   3.674919163355906*^9}, {3.674919233894359*^9, 3.674919247932014*^9}, {
   3.674919303340539*^9, 3.6749193400648003`*^9}, {3.6749195121467924`*^9, 
   3.67491951593184*^9}, {3.6749195833623996`*^9, 3.6749195876984153`*^9}, {
   3.67492049503698*^9, 3.674920501743664*^9}, {3.674920770332322*^9, 
   3.6749208015439434`*^9}, {3.674920844888709*^9, 3.674920874720009*^9}, {
   3.6749210539786773`*^9, 3.674921055281505*^9}, {3.674921088659441*^9, 
   3.6749210893446274`*^9}, {3.6749211851514997`*^9, 3.6749212050539937`*^9}, 
   3.6749213445511465`*^9, {3.674990248393358*^9, 3.6749902776786795`*^9}, {
   3.674990357311639*^9, 3.6749903875583587`*^9}, {3.674990532264888*^9, 
   3.674990595666664*^9}, {3.6749906651855145`*^9, 3.6749906659745064`*^9}, {
   3.674990739218642*^9, 3.6749907458514137`*^9}, {3.6750028528664756`*^9, 
   3.6750029028319945`*^9}, {3.6750029332499943`*^9, 3.6750029709689817`*^9}, 
   3.6750030175483475`*^9, {3.6750030968630724`*^9, 3.675003155107236*^9}, {
   3.675003187337203*^9, 3.6750031884097667`*^9}, {3.675170039968014*^9, 
   3.675170046576682*^9}, {3.6752567458761463`*^9, 3.6752567520140905`*^9}, {
   3.675256947033267*^9, 3.675256950186184*^9}, {3.675257001776146*^9, 
   3.675257005856325*^9}, {3.675257271256127*^9, 3.675257277396611*^9}, {
   3.675257312424458*^9, 3.6752573147358446`*^9}, {3.675257696802707*^9, 
   3.675257708903404*^9}, {3.675257749659619*^9, 3.675257766126279*^9}, {
   3.6752578339873533`*^9, 3.675257890143595*^9}}],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"z", "-", "range"}], "=", 
   RowBox[{
    RowBox[{"0.641", "m", "\n", "zmin"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "0.211983"}], "\n", "zmax"}], "=", "0.429554"}]}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.675404858233428*^9, 3.675404890383256*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"inp", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"z", "\[Rule]", " ", "inp1"}], ",", 
         RowBox[{"\[Alpha]", "\[Rule]", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Pi]", "/", "180"}], ")"}], "*", "inp2"}]}], ",", 
         RowBox[{"\[Phi]", "\[Rule]", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Pi]", "/", "180"}], ")"}], "*", "inp3"}]}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"p1e", "=", 
       RowBox[{"p1d", "/.", "inp"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2e", "=", 
       RowBox[{"p2d", "/.", "inp"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p3e", "=", 
       RowBox[{"p3d", "/.", "inp"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sol\[Theta]1", "=", 
       RowBox[{
        RowBox[{"solveRRdyad", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rb", "/.", "lendata"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1e", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"p1e", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"lcr", "/.", "lendata"}], ",", 
          RowBox[{"lst", "/.", "lendata"}], ",", "\[Theta]1", ",", 
          "\[Phi]1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol\[Theta]2", "=", 
       RowBox[{
        RowBox[{"solveRRdyad", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rb", "/.", "lendata"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p2e", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"p2e", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"lcr", "/.", "lendata"}], ",", 
          RowBox[{"lst", "/.", "lendata"}], ",", "\[Theta]2", ",", 
          "\[Phi]2"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol\[Theta]3", "=", 
       RowBox[{
        RowBox[{"solveRRdyad", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"rb", "/.", "lendata"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p3e", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"p3e", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"lcr", "/.", "lendata"}], ",", 
          RowBox[{"lst", "/.", "lendata"}], ",", "\[Theta]3", ",", 
          "\[Phi]3"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c1d", "=", 
       RowBox[{"c1c", "/.", "sol\[Theta]1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c2d", "=", 
       RowBox[{"c2c", "/.", "sol\[Theta]2"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"c3d", "=", 
       RowBox[{"c3c", "/.", "sol\[Theta]3"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"s2flag", "=", 
       RowBox[{"0.5", "*", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Sign", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"s2sub", "/.", "sol\[Theta]1"}], "/.", "sol\[Theta]2"}],
              "/.", "sol\[Theta]3"}], "/.", "inp"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"topPlatform", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{"s2flag", "*", 
             RowBox[{"{", 
              RowBox[{"p1c", ",", "p2c", ",", "p3c", ",", "p1c"}], "}"}]}], "/.",
             "inp"}], "]"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"strut", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.010", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p1c", ",", "c1d"}], "}"}], "/.", "inp"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p2c", ",", "c2d"}], "}"}], "/.", "inp"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p3c", ",", "c3d"}], "}"}], "/.", "inp"}], "]"}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"crank", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b1", "/.", "lendata"}], ",", "c1d"}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b2", "/.", "lendata"}], ",", "c2d"}], "}"}], "]"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"b3", "/.", "lendata"}], ",", "c3d"}], "}"}], "]"}]}], 
         "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"base", "=", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"Triangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"b1", ",", "b2", ",", "b3"}], "}"}], "/.", "lendata"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"axis1", "=", " ", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
          RowBox[{"xaxis", "/.", "inp"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"axis2", "=", " ", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
          RowBox[{"yaxis", "/.", "inp"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"axis3", "=", " ", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
          RowBox[{"Arrowheads", "[", "Medium", "]"}], ",", 
          RowBox[{"zaxis", "/.", "inp"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"topPlatform", ",", "crank", ",", "strut", ",", "base"}], 
         RowBox[{"(*", 
          RowBox[{",", "axis1", ",", "axis2", ",", "axis3"}], "*)"}], "}"}], 
        ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", "1200"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1200"}], ",", "1200"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1500"}], ",", "1200"}], "}"}]}], "}"}]}]}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"inp1", ",", "530", ",", "\"\<heave\>\""}], "}"}], ",", 
       RowBox[{"(*", 
        RowBox[{"-", "211"}], "*)"}], "372", ",", "621"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"inp2", ",", "90", ",", "\"\<\[Alpha]\>\""}], "}"}], ",", "0",
        ",", "360"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"inp3", ",", "15", ",", "\"\<\[Phi]\>\""}], "}"}], ",", 
       RowBox[{"-", "20"}], ",", "20"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6653242284736876`*^9, 3.6653242326226916`*^9}, {
   3.665324299810627*^9, 3.6653243402365932`*^9}, {3.6653243813935623`*^9, 
   3.6653244808104734`*^9}, {3.66532451798244*^9, 3.665324556566409*^9}, {
   3.6653246142273607`*^9, 3.6653246280783477`*^9}, {3.665324690264295*^9, 
   3.6653247063612795`*^9}, {3.6653247437952523`*^9, 
   3.6653248230061827`*^9}, {3.665324855690154*^9, 3.6653249092831087`*^9}, {
   3.665324956781066*^9, 3.6653249992440357`*^9}, {3.665325033790003*^9, 
   3.665325066381973*^9}, {3.665325104090942*^9, 3.6653251056399393`*^9}, {
   3.6653251362189136`*^9, 3.6653251538959007`*^9}, {3.665325218271844*^9, 
   3.66532523519783*^9}, {3.665325300506773*^9, 3.665325368822715*^9}, {
   3.6653255015106087`*^9, 3.6653256204415016`*^9}, {3.665326887067423*^9, 
   3.665326892561422*^9}, {3.665327381754998*^9, 3.665327384918994*^9}, {
   3.665410339857134*^9, 3.6654103884110904`*^9}, {3.665410422066063*^9, 
   3.6654104790520134`*^9}, {3.6654108860646744`*^9, 
   3.6654109503016186`*^9}, {3.665411133460455*^9, 3.665411167767426*^9}, {
   3.665507412599758*^9, 3.665507473306747*^9}, {3.665507748468198*^9, 
   3.6655077585301943`*^9}, {3.665507802459687*^9, 3.6655078569846783`*^9}, {
   3.6655111076516285`*^9, 3.6655111230706253`*^9}, {3.665511233153603*^9, 
   3.6655112654125986`*^9}, {3.665511318761589*^9, 3.665511319014593*^9}, {
   3.6655113590315866`*^9, 3.6655114378645744`*^9}, {3.6655115044865556`*^9, 
   3.6655115418505507`*^9}, {3.6655116850865326`*^9, 
   3.6655116870185256`*^9}, {3.665512952444309*^9, 3.665512992110303*^9}, 
   3.66551305689229*^9, {3.665513125631287*^9, 3.6655131259952803`*^9}, {
   3.6655132120292664`*^9, 3.66551323992426*^9}, {3.6655132817242527`*^9, 
   3.6655132832572575`*^9}, 3.6655134087442307`*^9, {3.6655134693622203`*^9, 
   3.665513496716214*^9}, 3.6655347538632097`*^9, {3.665534915995179*^9, 
   3.66553491621918*^9}, {3.6655373419177732`*^9, 3.665537344754764*^9}, {
   3.665629993941908*^9, 3.6656299944039087`*^9}, {3.6656301185441046`*^9, 
   3.6656301368981285`*^9}, {3.6656315770673404`*^9, 
   3.6656315777833405`*^9}, {3.665631676252493*^9, 3.665631696149522*^9}, 
   3.6656322970384464`*^9, {3.665634315277053*^9, 3.665634318964052*^9}, {
   3.6656344406042433`*^9, 3.665634444415245*^9}, {3.665634639204543*^9, 
   3.665634649553559*^9}, {3.6656346863036213`*^9, 3.6656347103886557`*^9}, {
   3.6656347870757756`*^9, 3.6656347955767913`*^9}, {3.665634861358885*^9, 
   3.6656349367310085`*^9}, {3.6656351760763702`*^9, 
   3.6656351894483943`*^9}, {3.6656353415686283`*^9, 3.665635342303624*^9}, {
   3.665644222681265*^9, 3.665644224015272*^9}, 3.665646453409691*^9, {
   3.665656420111004*^9, 3.6656564389470277`*^9}, {3.6656571672521477`*^9, 
   3.665657167636155*^9}, {3.66565723137225*^9, 3.665657232334253*^9}, {
   3.665675481039277*^9, 3.6656754875472913`*^9}, {3.665675527514349*^9, 
   3.6656755311243534`*^9}, {3.665675571701421*^9, 3.6656756444875355`*^9}, {
   3.6656757266716585`*^9, 3.6656757309626603`*^9}, {3.6656771602748604`*^9, 
   3.665677164432867*^9}, {3.665677369825184*^9, 3.665677381259201*^9}, {
   3.665678528002963*^9, 3.665678529390958*^9}, {3.6656786392751336`*^9, 
   3.6656786570731606`*^9}, {3.66567893009558*^9, 3.6656789550356183`*^9}, {
   3.6656790124487066`*^9, 3.6656790327327337`*^9}, {3.6656791587579308`*^9, 
   3.6656791662659426`*^9}, {3.665679200011994*^9, 3.6656792142040157`*^9}, {
   3.6656811702375164`*^9, 3.6656812313231077`*^9}, {3.6656817066518393`*^9, 
   3.665681722941865*^9}, {3.6656817721449385`*^9, 3.665681808348996*^9}, {
   3.6656830973304763`*^9, 3.665683128148029*^9}, {3.665683172868596*^9, 
   3.665683175737095*^9}, {3.665683214584155*^9, 3.6656832316196814`*^9}, {
   3.66568342563548*^9, 3.665683435529498*^9}, {3.6656834918450804`*^9, 
   3.665683534050152*^9}, {3.665683711474924*^9, 3.6656838041400633`*^9}, {
   3.665683870856663*^9, 3.665684008059375*^9}, {3.665684043338428*^9, 
   3.6656840636794643`*^9}, 3.6656841676861205`*^9, {3.665684199838669*^9, 
   3.665684235990223*^9}, {3.6656842822103014`*^9, 3.665684335412381*^9}, {
   3.6656843694599295`*^9, 3.6656845037731347`*^9}, {3.665684594001774*^9, 
   3.665684601458786*^9}, {3.6656888844843693`*^9, 3.665688917033914*^9}, {
   3.6656889731064997`*^9, 3.665688989627026*^9}, {3.6656890434411077`*^9, 
   3.665689124904239*^9}, {3.665689156736288*^9, 3.6656891794193196`*^9}, {
   3.665689234766907*^9, 3.665689270594467*^9}, {3.665689315285533*^9, 
   3.6656893154275274`*^9}, {3.6656894953248014`*^9, 
   3.6656894972158103`*^9}, {3.6657054145797596`*^9, 3.665705425591777*^9}, {
   3.665705470156847*^9, 3.6657054735828447`*^9}, {3.665939942942177*^9, 
   3.6659399585122104`*^9}, 3.6659407090473657`*^9, {3.665940754776436*^9, 
   3.6659407595094395`*^9}, {3.6659410489223757`*^9, 
   3.6659410521823792`*^9}, {3.6659411246104913`*^9, 
   3.6659411266004953`*^9}, {3.665941255739193*^9, 3.6659414063859262`*^9}, {
   3.6659414514595013`*^9, 3.6659414521505003`*^9}, 3.665941612712249*^9, {
   3.665942028562389*^9, 3.6659420520964165`*^9}, {3.6659420827499633`*^9, 
   3.665942083336964*^9}, {3.665942467859557*^9, 3.6659424932845974`*^9}, {
   3.6659425268666477`*^9, 3.665942551983183*^9}, 3.6659428401281276`*^9, {
   3.6659429682003317`*^9, 3.6659429684748297`*^9}, {3.6659430404989347`*^9, 
   3.665943223013216*^9}, {3.6659432940683265`*^9, 3.665943328234376*^9}, {
   3.6659433711369495`*^9, 3.665943514896163*^9}, {3.6659438831442327`*^9, 
   3.66594402625695*^9}, {3.6659443209784026`*^9, 3.665944333778923*^9}, 
   3.665944735612044*^9, {3.665944773810605*^9, 3.6659448408971987`*^9}, {
   3.6659449004442916`*^9, 3.665944922126829*^9}, {3.665945079041068*^9, 
   3.665945151636178*^9}, {3.665945260173848*^9, 3.6659453418044715`*^9}, {
   3.665945702651531*^9, 3.665945703765526*^9}, {3.6659460987631397`*^9, 
   3.665946113100154*^9}, {3.6659462114498067`*^9, 3.665946215681816*^9}, {
   3.665946450818673*^9, 3.6659464685977015`*^9}, {3.6659465028407593`*^9, 
   3.6659465358398037`*^9}, {3.6659653874562483`*^9, 
   3.6659656920869884`*^9}, {3.665965723165963*^9, 3.665965821115878*^9}, {
   3.665965884777829*^9, 3.665965904972808*^9}, 3.6659660751306677`*^9, {
   3.665966118741625*^9, 3.6659662253645353`*^9}, {3.6659663117624607`*^9, 
   3.6659664937743063`*^9}, {3.6659667255631084`*^9, 3.665966738772097*^9}, {
   3.6659668570779953`*^9, 3.6659669034559555`*^9}, 3.66596695877591*^9, {
   3.665967001318877*^9, 3.6659670225698557`*^9}, {3.665967062505821*^9, 
   3.6659670931578016`*^9}, {3.6659672797116346`*^9, 
   3.6659673275685945`*^9}, {3.6659674438144956`*^9, 3.665967467153475*^9}, {
   3.6659675678963895`*^9, 3.66596759009837*^9}, {3.666137217586472*^9, 
   3.666137297082962*^9}, {3.6661373407629585`*^9, 3.6661373586246004`*^9}, {
   3.6661380718018312`*^9, 3.666138076596239*^9}, 3.6749106360898986`*^9, {
   3.6749107098166113`*^9, 3.6749107464026427`*^9}, {3.674910778372506*^9, 
   3.674910785508359*^9}, {3.674911991582205*^9, 3.6749120764795465`*^9}, {
   3.674912194467597*^9, 3.674912356904434*^9}, {3.674912892873287*^9, 
   3.6749129465132465`*^9}, {3.674916743075821*^9, 3.6749168007046804`*^9}, {
   3.6749173482450995`*^9, 3.674917457325212*^9}, {3.6749175129224644`*^9, 
   3.6749175137120256`*^9}, {3.6749175931953993`*^9, 
   3.6749177252068496`*^9}, {3.674917777990267*^9, 3.674917915583211*^9}, {
   3.6749180279417996`*^9, 3.674918038251342*^9}, 3.6749181044989953`*^9, {
   3.6749185708770533`*^9, 3.6749185750380044`*^9}, {3.6749191605853043`*^9, 
   3.674919163355906*^9}, {3.674919233894359*^9, 3.674919247932014*^9}, {
   3.674919303340539*^9, 3.6749193400648003`*^9}, {3.6749195121467924`*^9, 
   3.67491951593184*^9}, {3.6749195833623996`*^9, 3.6749195876984153`*^9}, {
   3.67492049503698*^9, 3.674920501743664*^9}, {3.674920770332322*^9, 
   3.6749208015439434`*^9}, {3.674920844888709*^9, 3.674920874720009*^9}, {
   3.6749210539786773`*^9, 3.674921055281505*^9}, {3.674921088659441*^9, 
   3.6749210893446274`*^9}, {3.6749211851514997`*^9, 3.6749212050539937`*^9}, 
   3.6749213445511465`*^9, {3.674990248393358*^9, 3.6749902776786795`*^9}, {
   3.674990357311639*^9, 3.6749903875583587`*^9}, {3.674990532264888*^9, 
   3.674990595666664*^9}, {3.6749906651855145`*^9, 3.6749906659745064`*^9}, {
   3.674990739218642*^9, 3.6749907458514137`*^9}, {3.6750028528664756`*^9, 
   3.6750029028319945`*^9}, {3.6750029332499943`*^9, 3.6750029709689817`*^9}, 
   3.6750030175483475`*^9, {3.6750030968630724`*^9, 3.675003155107236*^9}, {
   3.675003187337203*^9, 3.6750031884097667`*^9}, {3.675170039968014*^9, 
   3.675170046576682*^9}, {3.6752567458761463`*^9, 3.6752567520140905`*^9}, {
   3.675256947033267*^9, 3.675256950186184*^9}, {3.675257001776146*^9, 
   3.675257005856325*^9}, {3.675257271256127*^9, 3.675257277396611*^9}, {
   3.675257312424458*^9, 3.6752573147358446`*^9}, {3.675257696802707*^9, 
   3.675257708903404*^9}, {3.675257749659619*^9, 3.675257766126279*^9}, {
   3.6752578339873533`*^9, 3.675257905310648*^9}, {3.6752579673460526`*^9, 
   3.6752579959714556`*^9}, {3.675258080650681*^9, 3.6752580846098256`*^9}, {
   3.6752581297125607`*^9, 3.6752581373046484`*^9}, {3.675258827367996*^9, 
   3.675258827702131*^9}, {3.6752634224554305`*^9, 3.6752634406940575`*^9}, {
   3.6752636361777024`*^9, 3.6752636535120564`*^9}, {3.675263815749897*^9, 
   3.675263855116008*^9}, {3.675339805751154*^9, 3.675339859151081*^9}, {
   3.6753406185352173`*^9, 3.675340687449712*^9}, {3.6753416510471926`*^9, 
   3.67534170809674*^9}, {3.6753417757052803`*^9, 3.6753417787754393`*^9}, 
   3.675342004510768*^9, {3.675342071488362*^9, 3.6753421379667616`*^9}, {
   3.6753421856696215`*^9, 3.675342212760885*^9}, {3.67534241670825*^9, 
   3.675342419352128*^9}, {3.67534346381378*^9, 3.675343466292553*^9}, {
   3.6753434986361628`*^9, 3.6753435135687685`*^9}, 3.6754043462265053`*^9, 
   3.6754044821865735`*^9, {3.675404804091961*^9, 3.675404819830151*^9}, 
   3.6793552991805716`*^9, {3.6793553778944707`*^9, 3.6793553824827075`*^9}, {
   3.690946845924252*^9, 3.690946861676415*^9}, {3.69094690634762*^9, 
   3.690946909352323*^9}, {3.6917410573773737`*^9, 3.6917410734252033`*^9}, {
   3.691741119335292*^9, 3.691741119515073*^9}, {3.691741227178014*^9, 
   3.691741227382419*^9}, {3.6917412729461727`*^9, 3.6917413182513742`*^9}, {
   3.691741664136271*^9, 3.691741688759465*^9}, {3.691741727168687*^9, 
   3.6917417623660383`*^9}, {3.69174179272281*^9, 3.6917418271885147`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`inp1$$ = 552.5, $CellContext`inp2$$ = 
    143., $CellContext`inp3$$ = -11., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`inp1$$], 530, "heave"}, 372, 621}, {{
       Hold[$CellContext`inp2$$], 90, "\[Alpha]"}, 0, 360}, {{
       Hold[$CellContext`inp3$$], 15, "\[Phi]"}, -20, 20}}, Typeset`size$$ = {
    432., {245., 252.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`inp1$116168$$ = 
    0, $CellContext`inp2$116169$$ = 0, $CellContext`inp3$116170$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`inp1$$ = 530, $CellContext`inp2$$ = 
        90, $CellContext`inp3$$ = 15}, "ControllerVariables" :> {
        Hold[$CellContext`inp1$$, $CellContext`inp1$116168$$, 0], 
        Hold[$CellContext`inp2$$, $CellContext`inp2$116169$$, 0], 
        Hold[$CellContext`inp3$$, $CellContext`inp3$116170$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> ($CellContext`inp = {$CellContext`z -> $CellContext`inp1$$, \
$CellContext`\[Alpha] -> (Pi/
            180) $CellContext`inp2$$, $CellContext`\[Phi] -> (Pi/
            180) $CellContext`inp3$$}; $CellContext`p1e = 
        ReplaceAll[$CellContext`p1d, $CellContext`inp]; $CellContext`p2e = 
        ReplaceAll[$CellContext`p2d, $CellContext`inp]; $CellContext`p3e = 
        ReplaceAll[$CellContext`p3d, $CellContext`inp]; $CellContext`sol\
\[Theta]1 = Part[
          $CellContext`solveRRdyad[{
            ReplaceAll[$CellContext`rb, $CellContext`lendata], 0}, {
            Part[$CellContext`p1e, 1], 
            Part[$CellContext`p1e, 3]}, 
           ReplaceAll[$CellContext`lcr, $CellContext`lendata], 
           
           ReplaceAll[$CellContext`lst, $CellContext`lendata], $CellContext`\
\[Theta]1, $CellContext`\[Phi]1], 1]; $CellContext`sol\[Theta]2 = Part[
          $CellContext`solveRRdyad[{
            ReplaceAll[$CellContext`rb, $CellContext`lendata], 0}, {
            Part[$CellContext`p2e, 1], 
            Part[$CellContext`p2e, 3]}, 
           ReplaceAll[$CellContext`lcr, $CellContext`lendata], 
           
           ReplaceAll[$CellContext`lst, $CellContext`lendata], $CellContext`\
\[Theta]2, $CellContext`\[Phi]2], 1]; $CellContext`sol\[Theta]3 = Part[
          $CellContext`solveRRdyad[{
            ReplaceAll[$CellContext`rb, $CellContext`lendata], 0}, {
            Part[$CellContext`p3e, 1], 
            Part[$CellContext`p3e, 3]}, 
           ReplaceAll[$CellContext`lcr, $CellContext`lendata], 
           
           ReplaceAll[$CellContext`lst, $CellContext`lendata], $CellContext`\
\[Theta]3, $CellContext`\[Phi]3], 1]; $CellContext`c1d = 
        ReplaceAll[$CellContext`c1c, $CellContext`sol\[Theta]1]; \
$CellContext`c2d = 
        ReplaceAll[$CellContext`c2c, $CellContext`sol\[Theta]2]; \
$CellContext`c3d = 
        ReplaceAll[$CellContext`c3c, $CellContext`sol\[Theta]3]; \
$CellContext`s2flag = 0.5 (1 + Sign[
            ReplaceAll[
             ReplaceAll[
              ReplaceAll[
               
               ReplaceAll[$CellContext`s2sub, $CellContext`sol\[Theta]1], \
$CellContext`sol\[Theta]2], $CellContext`sol\[Theta]3], $CellContext`inp]]); \
$CellContext`topPlatform = Graphics3D[{
           Thickness[0.015], 
           RGBColor[0, 0, 0], 
           Line[
            
            ReplaceAll[$CellContext`s2flag {$CellContext`p1c, \
$CellContext`p2c, $CellContext`p3c, $CellContext`p1c}, $CellContext`inp]]}]; \
$CellContext`strut = Graphics3D[{
           Thickness[0.01], 
           RGBColor[0, 1, 0], 
           Line[
            
            ReplaceAll[{$CellContext`p1c, $CellContext`c1d}, \
$CellContext`inp]], 
           Line[
            
            ReplaceAll[{$CellContext`p2c, $CellContext`c2d}, \
$CellContext`inp]], 
           Line[
            
            ReplaceAll[{$CellContext`p3c, $CellContext`c3d}, \
$CellContext`inp]]}]; $CellContext`crank = Graphics3D[{
           Thickness[0.015], 
           RGBColor[1, 0, 0], 
           Line[{
             
             ReplaceAll[$CellContext`b1, $CellContext`lendata], \
$CellContext`c1d}], 
           Line[{
             
             ReplaceAll[$CellContext`b2, $CellContext`lendata], \
$CellContext`c2d}], 
           Line[{
             
             ReplaceAll[$CellContext`b3, $CellContext`lendata], \
$CellContext`c3d}]}]; $CellContext`base = Graphics3D[
          Triangle[
           
           ReplaceAll[{$CellContext`b1, $CellContext`b2, $CellContext`b3}, \
$CellContext`lendata]]]; $CellContext`axis1 = Graphics3D[{
           Thickness[0.004], 
           RGBColor[1, 0, 0], 
           Arrowheads[Medium], 
           
           ReplaceAll[$CellContext`xaxis, $CellContext`inp]}]; \
$CellContext`axis2 = Graphics3D[{
           Thickness[0.004], 
           RGBColor[0, 1, 0], 
           Arrowheads[Medium], 
           
           ReplaceAll[$CellContext`yaxis, $CellContext`inp]}]; \
$CellContext`axis3 = Graphics3D[{
           Thickness[0.004], 
           RGBColor[0, 0, 1], 
           Arrowheads[Medium], 
           ReplaceAll[$CellContext`zaxis, $CellContext`inp]}]; 
       Show[{$CellContext`topPlatform, $CellContext`crank, \
$CellContext`strut, $CellContext`base}, 
         PlotRange -> {{-1200, 1200}, {-1200, 1200}, {-1500, 1200}}]), 
      "Specifications" :> {{{$CellContext`inp1$$, 530, "heave"}, 372, 
         621}, {{$CellContext`inp2$$, 90, "\[Alpha]"}, 0, 
         360}, {{$CellContext`inp3$$, 15, "\[Phi]"}, -20, 20}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{485., {337., 344.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.691741657944491*^9, 3.691741689125746*^9}, {
   3.691741727750936*^9, 3.691741763013104*^9}, {3.6917417935728483`*^9, 
   3.691741827718545*^9}, 3.7005577809978952`*^9, 3.700557925723076*^9, 
   3.700558581134783*^9, 3.7086545146027117`*^9, 3.708658075939006*^9, 
   3.708658110478072*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s2", "/.", "lendata"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1b", "/.", "k\[Phi]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2b", "/.", "k\[Phi]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3b", "/.", "k\[Phi]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6752641628990145`*^9, 3.675264163182556*^9}, {
   3.6752641940929155`*^9, 3.67526420980657*^9}, {3.675264408938985*^9, 
   3.675264425839888*^9}, 3.67526453469201*^9, 3.6752645724744797`*^9, {
   3.675264780122739*^9, 3.675264817267196*^9}, {3.6752648908851986`*^9, 
   3.6752648923795366`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"solveS2", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lcr_", ",", "lst_", ",", "rb_", ",", "ra_"}], "}"}], ",", 
     "\[Alpha]_", ",", "\[Phi]_", ",", "z_"}], "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "p1", ",", "p2", ",", "p3", ",", "\[Theta]1", ",", "\[Theta]2", ",", 
       "\[Theta]3", ",", "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "c1",
        ",", "c2", ",", "s2", ",", "sol\[Theta]1", ",", "sol\[Theta]2", ",", 
       "sol\[Theta]3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p1", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ra", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}], "-", 
              RowBox[{"2", " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}], ",", "0",
          ",", 
         RowBox[{"z", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", "ra", " ", 
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
             RowBox[{"Tan", "[", 
              FractionBox["\[Phi]", "2"], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tan", "[", 
                FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tan", "[", 
                FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}]}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"ra", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", 
                   FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
                RowBox[{"2", " ", 
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}], " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", 
                   FractionBox["\[Phi]", "2"], "]"}], "2"]}], "-", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", 
                   FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}], 
             ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}], 
           ")"}]}], ",", "0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "+", 
            RowBox[{
             SqrtBox["3"], " ", "ra", " ", 
             RowBox[{"Cos", "[", "\[Alpha]", "]"}], " ", 
             RowBox[{"Tan", "[", 
              FractionBox["\[Phi]", "2"], "]"}]}], "+", 
            RowBox[{"ra", " ", 
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
             RowBox[{"Tan", "[", 
              FractionBox["\[Phi]", "2"], "]"}]}], "+", 
            RowBox[{"z", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
            RowBox[{"z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"ra", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
              RowBox[{"2", " ", 
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", "\[Alpha]", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", 
                 FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}], ",", "0",
          ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"z", "-", 
            RowBox[{
             SqrtBox["3"], " ", "ra", " ", 
             RowBox[{"Cos", "[", "\[Alpha]", "]"}], " ", 
             RowBox[{"Tan", "[", 
              FractionBox["\[Phi]", "2"], "]"}]}], "+", 
            RowBox[{"ra", " ", 
             RowBox[{"Sin", "[", "\[Alpha]", "]"}], " ", 
             RowBox[{"Tan", "[", 
              FractionBox["\[Phi]", "2"], "]"}]}], "+", 
            RowBox[{"z", " ", 
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
            RowBox[{"z", " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", 
               FractionBox["\[Phi]", "2"], "]"}], "2"]}]}], ")"}]}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"sol\[Theta]1", "=", 
       RowBox[{
        RowBox[{"solveRRdyad", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rb", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p1", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"p1", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "lcr", ",", "lst", 
          ",", "\[Theta]1", ",", "\[Phi]1"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol\[Theta]2", "=", 
       RowBox[{
        RowBox[{"solveRRdyad", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rb", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p2", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"p2", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "lcr", ",", "lst", 
          ",", "\[Theta]2", ",", "\[Phi]2"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sol\[Theta]3", "=", 
       RowBox[{
        RowBox[{"solveRRdyad", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"rb", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p3", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"p3", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", "lcr", ",", "lst", 
          ",", "\[Theta]3", ",", "\[Phi]3"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"s2", "=", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"]}], ")"}], "7"]], "720000", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"c1", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "401"}], "-", 
                    RowBox[{"101", " ", 
                    SuperscriptBox["c1", "2"]}], "-", 
                    RowBox[{"4105", " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"5204", " ", 
                    SuperscriptBox["c2", "4"]}], "+", 
                    RowBox[{"2", " ", "c2", " ", "z"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"], " ", "c2", " ", "z"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["c2", "2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
                    RowBox[{"1100", " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1102", " ", 
                    SqrtBox["3"], " ", "c1"}], "+", 
                    RowBox[{"3104", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "3"]}], "+", 
                    RowBox[{"2002", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "5"]}], "+", 
                    RowBox[{"300", " ", "c2"}], "+", 
                    RowBox[{"496", " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "-", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "4"], " ", "c2"}], "-", 
                    RowBox[{"900", " ", 
                    SqrtBox["3"], " ", "c1", " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"3600", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "3"], " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"300", " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"5204", " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"802", " ", 
                    SqrtBox["3"], " ", "c1", " ", 
                    SuperscriptBox["c2", "4"]}], "+", "z", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c1", "4"], " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", "c2", " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "3"], " ", "c2", " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", 
                    SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                    RowBox[{
                    SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                    RowBox[{"1100", " ", "c1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"]}], "-", 
                    RowBox[{"2", " ", "c1", " ", "c2"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", "c2"}], "-", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}]}], "+", 
                  
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1803", " ", "c2"}], "+", 
                    RowBox[{"2507", " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "4"], " ", "c2"}], "+", 
                    RowBox[{"3303", " ", 
                    SuperscriptBox["c2", "3"]}], "+", 
                    RowBox[{"5204", " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", "z", "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"], " ", "z"}], "-", 
                    RowBox[{
                    SuperscriptBox["c1", "4"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["c1", "2"]}]}], ")"}], " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"]}], "+", 
                    SuperscriptBox["c1", "4"], "-", 
                    SuperscriptBox["c2", "4"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2504"}], " ", "c1"}], "-", 
                    RowBox[{"3104", " ", 
                    SuperscriptBox["c1", "3"]}], "-", 
                    RowBox[{"1102", " ", 
                    SqrtBox["3"], " ", "c2"}], "-", 
                    RowBox[{"2700", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                    RowBox[{"2002", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "4"], " ", "c2"}], "-", 
                    RowBox[{"7108", " ", "c1", " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "3"], " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"1904", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"3600", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"5204", " ", "c1", " ", 
                    SuperscriptBox["c2", "4"]}], "-", 
                    RowBox[{"802", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "5"]}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", "z"}], "+", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "4"], " ", "z"}], "+", 
                    RowBox[{"2", " ", "c1", " ", "c2", " ", "z"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "3"], " ", "c2", " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "2"], " ", "z"}], "+", 
                    RowBox[{"2", " ", "c1", " ", 
                    SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                    RowBox[{"1100", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "-", 
                    RowBox[{"2", " ", "c1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"]}], "+", 
                    RowBox[{"2", " ", "c1", " ", "c2"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}]}]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "300"}], " ", 
                   SqrtBox["3"], " ", "c1"}], "+", 
                  RowBox[{"300", " ", "c2"}], "+", "z", "+", 
                  RowBox[{
                   SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                  RowBox[{
                   SuperscriptBox["c2", "2"], " ", "z"}], "-", 
                  RowBox[{"550", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", "c1", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "401"}], "-", 
                    RowBox[{"101", " ", 
                    SuperscriptBox["c1", "2"]}], "-", 
                    RowBox[{"4105", " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"5204", " ", 
                    SuperscriptBox["c2", "4"]}], "+", 
                    RowBox[{"2", " ", "c2", " ", "z"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"], " ", "c2", " ", "z"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["c2", "2"]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "-", 
                    RowBox[{"1100", " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"300", " ", 
                    SqrtBox["3"], " ", "c1"}], "+", 
                    RowBox[{"300", " ", "c2"}], "+", "z", "+", 
                    RowBox[{
                    SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c2", "2"], " ", "z"}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}]}], "+", 
                  
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "600"}], " ", "c2"}], "+", "z", "+", 
                    RowBox[{
                    SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c2", "2"], " ", "z"}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2504"}], " ", "c1"}], "-", 
                    RowBox[{"3104", " ", 
                    SuperscriptBox["c1", "3"]}], "-", 
                    RowBox[{"1102", " ", 
                    SqrtBox["3"], " ", "c2"}], "-", 
                    RowBox[{"2700", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                    RowBox[{"2002", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "4"], " ", "c2"}], "-", 
                    RowBox[{"7108", " ", "c1", " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "3"], " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"1904", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"3600", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"5204", " ", "c1", " ", 
                    SuperscriptBox["c2", "4"]}], "-", 
                    RowBox[{"802", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "5"]}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", "z"}], "+", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "4"], " ", "z"}], "+", 
                    RowBox[{"2", " ", "c1", " ", "c2", " ", "z"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "3"], " ", "c2", " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "2"], " ", "z"}], "+", 
                    RowBox[{"2", " ", "c1", " ", 
                    SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                    RowBox[{"1100", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "-", 
                    RowBox[{"2", " ", "c1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"]}], "+", 
                    RowBox[{"2", " ", "c1", " ", "c2"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}]}]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1102", " ", 
                   SqrtBox["3"], " ", "c1"}], "+", 
                  RowBox[{"3104", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "3"]}], "+", 
                  RowBox[{"2002", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "5"]}], "-", 
                  RowBox[{"300", " ", "c2"}], "-", 
                  RowBox[{"496", " ", 
                   SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                  RowBox[{"404", " ", 
                   SuperscriptBox["c1", "4"], " ", "c2"}], "-", 
                  RowBox[{"900", " ", 
                   SqrtBox["3"], " ", "c1", " ", 
                   SuperscriptBox["c2", "2"]}], "-", 
                  RowBox[{"3600", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "3"], " ", 
                   SuperscriptBox["c2", "2"]}], "+", 
                  RowBox[{"300", " ", 
                   SuperscriptBox["c2", "3"]}], "+", 
                  RowBox[{"5204", " ", 
                   SuperscriptBox["c1", "2"], " ", 
                   SuperscriptBox["c2", "3"]}], "-", 
                  RowBox[{"802", " ", 
                   SqrtBox["3"], " ", "c1", " ", 
                   SuperscriptBox["c2", "4"]}], "-", "z", "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["c1", "2"], " ", "z"}], "-", 
                  RowBox[{
                   SuperscriptBox["c1", "4"], " ", "z"}], "-", 
                  RowBox[{"2", " ", 
                   SqrtBox["3"], " ", "c1", " ", "c2", " ", "z"}], "-", 
                  RowBox[{"2", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "3"], " ", "c2", " ", "z"}], "-", 
                  RowBox[{"2", " ", 
                   SqrtBox["3"], " ", "c1", " ", 
                   SuperscriptBox["c2", "3"], " ", "z"}], "+", 
                  RowBox[{
                   SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                  RowBox[{"1100", " ", "c1", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"]}], "+", 
                    RowBox[{"2", " ", "c1", " ", "c2"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "+", 
                  RowBox[{"550", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", "c2"}], "-", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1803", " ", "c2"}], "+", 
                    RowBox[{"2507", " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "4"], " ", "c2"}], "+", 
                    RowBox[{"3303", " ", 
                    SuperscriptBox["c2", "3"]}], "+", 
                    RowBox[{"5204", " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", "z", "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"], " ", "z"}], "-", 
                    RowBox[{
                    SuperscriptBox["c1", "4"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"3", "+", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["c1", "2"]}]}], ")"}], " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "+", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"]}], "+", 
                    SuperscriptBox["c1", "4"], "-", 
                    SuperscriptBox["c2", "4"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"300", " ", 
                    SqrtBox["3"], " ", "c1"}], "+", 
                    RowBox[{"300", " ", "c2"}], "+", "z", "+", 
                    RowBox[{
                    SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c2", "2"], " ", "z"}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}]}], "-", 
                  
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "600"}], " ", "c2"}], "+", "z", "+", 
                    RowBox[{
                    SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c2", "2"], " ", "z"}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1102", " ", 
                    SqrtBox["3"], " ", "c1"}], "+", 
                    RowBox[{"3104", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "3"]}], "+", 
                    RowBox[{"2002", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "5"]}], "+", 
                    RowBox[{"300", " ", "c2"}], "+", 
                    RowBox[{"496", " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "-", 
                    RowBox[{"404", " ", 
                    SuperscriptBox["c1", "4"], " ", "c2"}], "-", 
                    RowBox[{"900", " ", 
                    SqrtBox["3"], " ", "c1", " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"3600", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "3"], " ", 
                    SuperscriptBox["c2", "2"]}], "-", 
                    RowBox[{"300", " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"5204", " ", 
                    SuperscriptBox["c1", "2"], " ", 
                    SuperscriptBox["c2", "3"]}], "-", 
                    RowBox[{"802", " ", 
                    SqrtBox["3"], " ", "c1", " ", 
                    SuperscriptBox["c2", "4"]}], "+", "z", "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["c1", "2"], " ", "z"}], "+", 
                    RowBox[{
                    SuperscriptBox["c1", "4"], " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", "c2", " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "3"], " ", "c2", " ", "z"}], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", 
                    SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                    RowBox[{
                    SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                    RowBox[{"1100", " ", "c1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"]}], "-", 
                    RowBox[{"2", " ", "c1", " ", "c2"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]2", "]"}]}], "-", 
                    RowBox[{"550", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "-", 
                    RowBox[{"2", " ", 
                    SqrtBox["3"], " ", "c1", " ", "c2"}], "-", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]}], ")"}]}]}], 
                 ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2504", " ", "c1"}], "+", 
                  RowBox[{"3104", " ", 
                   SuperscriptBox["c1", "3"]}], "-", 
                  RowBox[{"1102", " ", 
                   SqrtBox["3"], " ", "c2"}], "-", 
                  RowBox[{"2700", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                  RowBox[{"2002", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "4"], " ", "c2"}], "+", 
                  RowBox[{"7108", " ", "c1", " ", 
                   SuperscriptBox["c2", "2"]}], "+", 
                  RowBox[{"404", " ", 
                   SuperscriptBox["c1", "3"], " ", 
                   SuperscriptBox["c2", "2"]}], "-", 
                  RowBox[{"1904", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c2", "3"]}], "-", 
                  RowBox[{"3600", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "2"], " ", 
                   SuperscriptBox["c2", "3"]}], "+", 
                  RowBox[{"5204", " ", "c1", " ", 
                   SuperscriptBox["c2", "4"]}], "-", 
                  RowBox[{"802", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c2", "5"]}], "-", 
                  RowBox[{
                   SqrtBox["3"], " ", "z"}], "+", 
                  RowBox[{
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c1", "4"], " ", "z"}], "-", 
                  RowBox[{"2", " ", "c1", " ", "c2", " ", "z"}], "-", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["c1", "3"], " ", "c2", " ", "z"}], "-", 
                  RowBox[{"2", " ", 
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c2", "2"], " ", "z"}], "-", 
                  RowBox[{"2", " ", "c1", " ", 
                   SuperscriptBox["c2", "3"], " ", "z"}], "-", 
                  RowBox[{
                   SqrtBox["3"], " ", 
                   SuperscriptBox["c2", "4"], " ", "z"}], "+", 
                  RowBox[{"1100", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"], " ", "c2"}], "+", 
                    RowBox[{"2", " ", "c1", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", "c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                   RowBox[{"Cos", "[", "\[Theta]3", "]"}]}], "-", 
                  RowBox[{"550", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c1", "2"], "+", 
                    SuperscriptBox["c2", "2"]}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SqrtBox["3"], " ", 
                    SuperscriptBox["c1", "2"]}], "-", 
                    RowBox[{"2", " ", "c1", " ", "c2"}], "-", 
                    RowBox[{
                    SqrtBox["3"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["c2", "2"]}], ")"}]}]}], ")"}], " ", 
                   RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ")"}]}]}], 
              ")"}]}], ")"}], "/.", "sol\[Theta]1"}], "/.", "sol\[Theta]2"}], 
         "/.", "sol\[Theta]3"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"c1", " ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
            RowBox[{"Tan", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}]}]}], ",", " ", 
          RowBox[{"c2", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
            RowBox[{"Tan", "[", 
             RowBox[{"\[Phi]", "/", "2"}], "]"}]}]}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "s2", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.674918176568286*^9, 3.6749181864618163`*^9}, {
   3.6751689915331273`*^9, 3.6751690989025545`*^9}, {3.6751692021068535`*^9, 
   3.675169242126253*^9}, {3.675169274611325*^9, 3.675169303684002*^9}, {
   3.675169337717146*^9, 3.6751694490472193`*^9}, {3.67516949324127*^9, 
   3.675169576602482*^9}, {3.6751696110219245`*^9, 3.675169620016319*^9}, {
   3.6752644626311774`*^9, 3.675264468332328*^9}, {3.6752645011928644`*^9, 
   3.67526450256452*^9}, {3.6752645500736957`*^9, 3.6752645506514645`*^9}, 
   3.675264594718602*^9, {3.6752646330819216`*^9, 3.6752647208856697`*^9}, {
   3.675264829778742*^9, 3.6752648440482116`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"solveS2", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lcr", ",", "lst", ",", "rb", ",", "ra"}], "}"}], "/.", 
      "lendata"}], ",", "\[Alpha]", ",", "\[Phi]", ",", "600"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]", ",", "0", ",", 
     RowBox[{"360", "*", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "/", "180"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{
      RowBox[{"-", "30"}], "*", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "/", "180"}], ")"}]}], ",", 
     RowBox[{"30", "*", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "/", "180"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Phi]"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<s2\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6751695888972116`*^9, 3.6751696022016883`*^9}, {
  3.6751696378579903`*^9, 3.6751698115743823`*^9}, {3.6751698885301976`*^9, 
  3.6751698900473022`*^9}, {3.675169941416761*^9, 3.675169964405434*^9}, {
  3.6752237474018917`*^9, 3.675223768187656*^9}, {3.6752238463168726`*^9, 
  3.6752238962046804`*^9}, {3.675264915323637*^9, 3.6752649368422365`*^9}, {
  3.6752650872894516`*^9, 3.6752651283642993`*^9}, {3.6752652998377256`*^9, 
  3.675265404826161*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxknXmcz9X3x2cxzIzB7IuSUAilJJTlXkuKkIQiiRIhIr5JC1EhuxZLJFmz
RjFk+9gi+zqY1diXxhjLWIf5+Xm/n+f9uHf8M4+Xcz/3fc+95557lruUefej
Vu8H+Pn5NS7t5/f/f/Vva2qX/jtNvd/vyVqtNmb6hlw/P6PPnizBbZtPGdEr
21+Dc1bt+vDIyCDB/zZq8+1fVyMEp90LH/iiL0qwn/vP/Y6P75k4S7BTn78G
8z1w/JONWt8pE6LN8hGC+b5ZPkEw7Ul86+EiP186Iu0xcZZg5/u5Fj1PMO01
ywcJpr3m78MELx85ZUKZiuHarC9CMPyY9ccILtRvRKfubeOs7yUIht8qsV8e
iC5/UPg1cZZg+DXpeYLh1ywfJBh+zd+HCYZfs74IwfBr1h8jGH7N7yUIht+G
D767S/g1cZZg+DXpeYLh1ywfJBh+zd+HCYZfs74IwfBr1h8jGH7N7yUIht+n
HvC/Wfg1cZZg+DXpeYLh1ywfJBh+zd+HCYZfs74IwfBr1h8jGH7N7yUIht9q
D/Bfwq+JswTDr0nPEwy/ZvkgwfBr/j5MMPya9UUIhl+z/hjB8Gt+L0Gwn/Fv
xlr4NXGWYPg16XmC4dcsHyQYfs3fhwmGX7O+CMHwa9YfIxh+ze8lCIbTsg7/
rAvKxFmC4dek5wmGX7N8kGD4NX8fJhh+zfoiBMOvWX+MYPg1v5cgGH7LO/It
/Jo4SzD8mvQ8wfBrlg8SDL/m78MEw69ZX4Rg+DXrjxEMv+b3EgTDb21Hfwm/
Js4SDL8mPU8w/JrlgwTDr/n7MMHwa9YXIRh+zfpjBMOv+b0EwfBb0VmfhF8T
ZwmGX5OeJxh+zfJBguHX/H2YYPg164sQDL9m/TGC4df8XoJg+P3TsT+EXxNn
CYZfk54nGH7N8kGC4df8fZhg+DXrixAMv2b9MYLh1/xegmD4rePyCT9g+AHT
XpMeJpj2mvXFCKY9Zn0J2v6+a3/L900chn2ueg+7MW5LpXDBNdb17l19RIxg
vmf+fpcKalT08PFSx3zruw0YdaFYhAafSc3+uPicaMEOP37683s9f+vQOsU3
4akSee0+L64Pn7p+el+nFPk99D9yts4L6Rqrczo/2mRKnxRf8ZZd21erEy90
vj/AwSojqMqvn71/Wh1w6lN8Dzr1g53xv6wCnfZJeTDfA/M90/85LfxTH+2j
vvWRoyqHBKe763+g9IfTn0UKYOqvcjb/pTEXQ4Vf2o//cqDMs4O/SI4s0N+U
Z/zN/soTvOGlKX1X/Bqmyw3/od5n1VLEfjF/HyP4n1+nvPjIe3FSnv544cF8
nyW4pINlPkCnv2xMefoPOhi6I9+3hA6GTn9DB0On/6GDodP/0MHQGQ/oYOit
3xpQddk3xYUOhs74QQdDZzyhg6EzvtDB0G//tKDrjD6xQgdDR56hg+3xMvs7
QehPJf1+Yd/FVFXaGX8ZL3s+oX/Q19AZD1N/FbHmozc/4c/Ga5z5JPLA/GQ8
wPS/TUd/QQfTX/b8h468mvGOy8qe33Z8hPnJeEKHHzP+scuy309b9vplwfBv
2uN+lv0daNnbRQTTH2D6A4x8gmk/mPaD6T/bnrflDTrrP+PbJ/JSjfqzgzTy
xXoMHX7t9Yvx4vvQnfb765S9P2SvG5aqWryR+834ERH6WoWI8R9OTVUnGlYt
8sPK+/J/tuv+vs9mqmPNX3gx6ufV6iEH++b6LWtSd164PtxxgL64I91X5Y3a
dRe+f0/ddH7ve37giOKFp4brDKd+39k3y8d8keunDznlVaHA5j1fybgq5ee3
L7m6UvNgTf38nvHvuSP90pW4GKmP/uv//H9/fVc7w9VnOQp+wPZ8g858/tj5
vRqe3yt75/UQ4Zf+p7zTf4W1U2+mtIf2sT7QPtYHsFNurWr6YLx/8P1Qr82R
2D/itY1DHSz6Bcx4wU+NLen12x4sqv9y2iP8mfaGv5758ckRX/2XLu0x1+ss
ZdofOYry8EN5+J3h0BX80D7GC3rTQVOeOze9mLTPmQ+FpP/4vT0f6A/sYdN+
OK74PeNhx1cp3/zZRgGTu0bK95gv0DtfzM99olq00Pk+6znjwfgtWVr4+9/v
z4fbfU40eXGmF5811+skZbef9QE6/QW2/Xnz91nWen5e2XRzPTqvTPk5XyDe
Ya7vV6U+6KY9cFXqA5v6KU+Z6/1tq315yrQPbkt9YFN/+1vrv7/IA3TTXvAv
MD9MfoMse6CQNvkNsuyHQlIf2JTPEEtfB0t90E17IljqA5v9Fyb1MZ/N/guT
+qBTH9hc38Klvo612jzxWY8SUh906oNOfWBzPDx7rGHbrsF7v4qwxsOzz6BT
H9hcb6OkvjfCy+Z1ahYl9UGnPujUBzbHN0bqQz+Z4xsj9UGnPrC5/sdJfYO/
mXLym5OxUh906oNOfWDqQ3/Y8w99ynxCP4Jtf9S0z25LebD4o6482P4ov6d9
/B5MeeyHy45eEv+B/Ejv2R/1LVUoR5n+2A33d8liv1109RoY/x99HO2Ul/EE
b93/xVeP/BSuKz6dFVSu+DHRj+hnMPoe+YIOhj59Su583The/1W0Z8mLPVN9
g0bXPhg98IYafLHJAlU3RfQV7Uf/Mp5g7CvWK+yBZSXfGbf0x9XqurMeqBof
HWjSZsBO9YfzPbX4Vk5Gg48i9efO91x7+p6MH5j+Z70Ef9d5QHrz7XEyXmDo
6Cf4pT/pD7C5Ph5X5vw9LvoYbOqTHGXqjxwpDzbnzw1lzpcbUh5MefinPJjy
YMo78hQg8xFMebBpbxeW8mDKgylfNrRsiy1FQqU8mPJgyjNelAdTHkx57CPK
g237ifLMF8qDKQ+mPPYM5cGUB1P+f/PWnF9z19OXYMqDKY/8UR5MeTDlbzT5
X+nEhlEi/4w/8gy242V2/MqO55j24y6FvgGb8ckkhX7BX6Q82Ix3Hpfy+IeU
B1Oe+Ud5/EfKgymPvFEe/9L030IEYy+gbyiP/Y88Ym/jP5q/j5fyrEeUp330
N5j+5nusB2DWA/xh6GDo+JvQwdBpH3SwvR+A9sGv6V8lib+CvYt8IO/Qwaxf
9C/jAaY8mO+xvrJeYC+BWU/B9DcYeaN9xCPgn/Xe7O/bqvXIa3/XWndY7EHo
tAc66z102gMd/wY67YNO+8z5l6bMeGeSMvv/tLUf5biMB/OV34Nt+WK+gJkv
jDfjQ7yF9mPPghkP+KE9tJf10PRv/Sx5vif9jT1K+/k99dEefo/+5vf3GqxY
vqZojMRHuvxee9C9N3MU8Q/6F3mgvazX+Hem/RMk+g/5tPf3QGd9sPcb2fPD
/F6a9Bf2jykPWSIPyKc9X+35Yu/X4ffIp70fx4yX5Ml4MN62PJvzI030O+03
9X2QyBvtNdePNNH//B79y++h83sTJxTQ57ldD4/5pHaG0E18XuYL9iu4V35I
QNp/8frIzSsBT77lxU/pP8qjX1j/mA/MTzDxUTD1gdH/YOYrmHimqa92qW4P
5GeffA/M98D4E2DmH5j2gGkPGP0AZr0BMx/BtB9M+8GsR2DWHzD8rXogn9uE
PzD8geEPDH9g+APDHxj+wPAHhj8w/IHhDwx/YPgDw99Ljl8j/IHhDwx/YPgD
wx8Y/sDwB4Y/MPyB4Q8Mf2D4A8MfGP5qun4b/IHhDwx/YPgDwx8Y/sDwB4Y/
MPyB4Q8Mf2D4A8MfGP6WOuMp/IHhDwx/YPgDwx8Y/sDwB4Y/MPyB4Q8Mf2D4
A8MfGP7ec+aj8AeGPzD8geEPDH9g+APDHxj+wPAHhj8w/IHhDwx/Jj9JqqWz
fgk/5vp0SzD8gPE/+D32AJj2U572m7+PFkx7wbTXbg/rm7P++OtRqyr8lF06
Tb4HnfrA2Jusp9hrdjyE9Qz/GYx9BcY/BeN/muvhWmWuz+cFEy8w/b2rCv+I
9oCp38x/7BL7jPrs/ATrOfIGvfGydqGTaoXoUbsXfD4nJEPsOfwT7F/4Yfyo
D/sI+p+7myUd33Fb4lu037TfwqQ+7Cnbn6E8/Wv6h17/Iq/0B/zb+WzokUnZ
T47pUUT3mdlp+MmeqRKvhM78Qx74Phj5sfPP0Blf7Fn6n/585Nspn3VPDtX9
ne/LemL7j3Y+lfoZDzN/Fibfhx/otJ/4RsXXuy77KuO+/fTdqydebZXuO9Yo
cX65tP1q6NrVN389n+Lyf0FVfPA3RbXclj559v/i9fIqv34RufKYanfjz25/
/xCis5fMbrOtZbrvi5z8Zp8eCpf6TpZvNLdjegnt1JPiu+4fse+HzuF6nDM/
fdWebrSwyZYYoTv+QYDmex+P/zP1m48WqQtO/a6+uKyynfrd+JSfBh95N0nX
XRqsKb+kfpun3n8tRr4n/qbbPkcesxX6Avua+hx/oLAOG3zy1N/9M135C9KJ
Dv++NX/uWv9C4zDpj2VJ2Vv6dipKeZXZfvTUrNJe/pP4P+OT3eXayuKNYnTo
Y81WzUrx8p92vtPUR9lq7BcfjfBFefFnOx9p5k8zFe3FPoceunbX5sefjBT+
8Mf4Pv4l5a816ZfXok+0HvjWsz/f/SzT98gnI1auvBkl/UH/2vEG5uvhFbti
vjsXL+NdfW6J8fOHxOunuzZ/43h+quT77PwD8uvMj2uK/h47uuE7y7ZeUW57
JD9h629+j76w49fQmV92/sDU18nSn05/71f037Dd6Y3rr46Q/qhwPHbK4gYR
OqX8kn037/eXM19vq//tvHO6ZrkU1x+9o3bEHL1deY0X7+d7rBdmvH+RzMdP
0sYPqxW6RVVx+s+N796V/tlSdUVWjS/zlft91fhC/vTUcXEir7uOZj+0ISBe
5PXn4VNeOPhtlMgD2NRf1+FXgc146Vpl+su7lL3fAHsAuo3t/i43/9mudV9P
kXioaZ8ct+Krp6146Un1XqOli3eMOMq6qE6P/j51dkKK2F+Ud/JvQRo6+prv
gc39pUWEDqY+9AffR3/AD/ob+wP/HMz6y/hT3rRfgkVfvlY6decbx4to5IHy
xFtZz1jf5t0M3/n7Z6GiP3956Nn9x34M0a0ezJsMWc8oz/yFDr/oC+q37SXi
IWA7Xkt5MOWx12x7CjrYjt9SHkx5+gN9dOyFxWnT3w0V/QP/6CfWP+YD/e20
M8P9fhFZT6Cz3rAeML9ZLyo44y/0bo58+JKbdF30043iUr5OsbJzIhfE6lEv
77n9do0U36Y74WVvPBynzzvyKXR+z/rM77Ef7Piouf/mtNCJz4HRf2D6D3kH
Mx/ov63O90Wf0F/Yi7Y9THvYT2Hbr+gf5g/jwXpG+y49Hp0e0cbb/4S8Mh7o
FzP+d7nAeUBz/66/FS8PKpCf4PfXHvl9/0dVPPuGeCbtw76zzy/a8Sv7PJxJ
zyoQT7PP/5nxNX9tlg/SdrzNPv9nx9/s84BmPDvCqi/K+l6MVV9cgfgo8S34
NeNdWVY8L1eZ9DwrvuevzfJB2oz3hVjxtDBtxv/CtVlfhBUPjLLqj7Hig3HW
9xKs76VJPA5+zfhXlhXfy1UmPc+K9/lrs3yQNuN/IVZ8LUyb8cBwbdYXYcUH
o6z6Y6x4YZz1vQTre2kSn4NfMx6WZcX7cpVJz7Pif/7aLB+kzXhgiBVvC9Nm
fDBcm/VFWPHCKKv+GCt+GGd9L8H6XprE6+DXjI9lWfG/XGXS86x4oL82ywdp
Mz4YYsXfwrQZLwzXZn0RVvwwyqo/xoonxlnfS7C+lybxO/g142VZVjwwV5n0
PCs+6K/N8kHajBeGWPG4MG3GD8O1WV+EFU+MsuqPseKLcdb3EqzvpUk8D37B
8GvG03KVSc+z4oX+VvwtSJvxwxBt/j6sQHzQPh9mxwvt82Jm/DHK+n6MFY+M
KxA/tM+P2fFE8/xZUoHzY2b+K1cw67F9nsyk+2s7/mjvf7DPk5nlw7VZX0SB
eKR9vgw6/jD2D9g+f2bHM+3zaGb8MqFAfNM8/5Zj7RfJFX8Q/xh/AWyfXzPP
U/mLf0J/mv5mmBUvC9dmfDXC+r2HsXfM9sbI79nfSHvB9vk4Oz5r7i+/I/4n
9jSYeCH+KPYN9mCO0e/e/gfzvoarQud72NfUT3nsYzD82PEPM598S5n3KfiJ
fcV8BjN/wcgnmPkIRn5Me+68+MvEA23MeMCv7c8T/5ndZUD1aT2jxZ53vndT
4he0D3uX+Dj28qaa+Rvr58Xp4uMqv1knLUXiJ/gL+OvDHX9H4jfmfouC55NM
+Suk+T3fh4782ucLoY9fsEaHzogU/yV6yoJ12ZFR2m4f/CMv5vnBHJEf2mv6
UwHiL+M/Ei8C499si9vzae9eRaW/mp7qu7DG6xF60cZBRb9dlinxVvwN2kt9
yCPtQx/RHuarOR9ypf2bFunsvLRrav22UZcOR+K/XJPxZn6b8fucAvrJ1BeX
RV85/XFF4q/Ed8Hkc4hvyPlpFyMf1Ac2z+P6iXwTj2E86W9w9warq444XFiH
Ov2t1tf/83SdfyP0aod/1X5d0p3kCxH63pdtk68mpSjiffweDP/IH98H0z7k
DzrjYetL+o/xozzxe/prZLWnzxx/L1pXqjc+fGT1NFW9XJNZkbXzlSsvEu8h
/od+oT3EZ4j3oO/seJEZ/4uV35NfoDz7acDlm45ND0iL1yOLtZiw6Kdjsr4h
j8iH6S8XKrBfDn2OPkL+6Q8w8XLk5Yz/8vi1F6JkPOGX+C/5BMojf/Q38xm6
37Hs7R1eihBcMqJGfNyrEdL/yB/8XPmoVs74V/LVUw5d8iHEm+pdeHXV+zev
CH1FqVZlzr7tnTcjn0F5+LPPl52Z1Kl11Snpqm6D5v/FdwnQDz+fu7f716mq
QcOn60xIzZL51XVh6qzvblxQ0J35/I/Eu9ptnB+SeHG9Snx2yobrH3jnyy44
9fuqTd3TuG+3XBUw6MF88PVe/NLqW13vir6Q+4Lc9l6Nq70u/VgJ/ajzPe9+
IJe+YOW/pUM3xwideBbyFjms1BeN5t5fT532iD5APhgf+ov+QV+D7fNllEf/
EM/bNG32Q2W7+uviTn5G2os8Mx7ET5E/Oz9FfT1Hf9vh12l+2s7vUB/6nN+f
6Oo/d+FBj74prcubzY9FC/5n3IJVgVWKyXxuX//LSytDL0s8jfkDv8S3WR+I
ZzPexP/4PZjfY88wv7AfGB/mO/OJeCXtY3+1uV/uljL3i95QY8/OLv3Jm4cE
m/Hdmyrowf8fkXwKmPHs9eSikZ/lZEi+AvsNzPqF/Ya/Ar8jne+LfQ+Gjv0E
xl6nPujk14j/g017wjtvQryU8mDKoy+Iv5MfYfywb8HoJ8YbTHwV/Sn5u9Ld
Bv48x8PQKc98ZL6C0W+M18h7jzwxoiH5/UWib8Cmf7JW6Ogf9CkY/UZ/D3Pq
F/sB+bpXs3/Pry9fFgydfJ+znuULHQyd/BjyTH4BjDzwfW3GQSR+y/zBnqQ/
xV9wMeXN+17WKuSN8QRjLyMf+C+mf39cymP/m/WdFn8A/4jfY59SHv0Bhm7/
Hoz9TfuIH1M/+ob6yG+B0Sf2eQTGn/GADjbzZd5+HuQTfcr3TXktIhi6mW8q
IvqOfAf6ivbZ+SX0F/kd9BP2BnTsJTvfBYZOefI91Af/0OlP2k/8yMyHBYs/
gDyxPpLPZ71i/tvnk5Ff6kP/0V+MP/ksOz8Fxl6n/ezfBhO/sOnmeYM7auZv
naKCHzss65H5+zDBxAvoP8pTH3TqYz0z1yOvv1nfqI/y1Aed+lg/+T35KX5P
/4CZz2a+LM2KX8g+cRlP5BV9acYzisp8Q36Zv2DmF/Y+44n/QvvxD8DYMzad
/mA/EP0Bf+Z9BZnSfvxtMPa07V8zX5Anvoe+pjzrLRh5Zj5At89n0D78a9pD
PIHv0z/YK6zXjCf+HuWx96ATT77h7McX/mgf9iTrL/4J85X8qH0e1c6Hmv3t
J+3he7Sf34OxR+AffQFe+tj6Kt8Ni7HyrVni/2995NT7FUf4W/df3VJm/O+G
7N8jHmHux7utzP2OeYKZv8Sv6H/0P/F1e38d8oB8op/oLzD9g3zTP2DiuWDk
y1wvvfgx/envjL/s38HegD8z3pmnaj2Qg0yxj9DH2DPIB/IFRn6wJ7EHwdhn
rAej1bet9v42T5n34VxRdn2MN/pf7g9264eO/Nv+OvURXzLXp8tW/O+yxAvB
ZnzIix8RL+H3rGf8HizxAbc8v0cezf2dN8V+RD+a99dcFn2Fv0V/Ur89P/h+
02HjA0r/GyXxJeYX7QUTH3L6118PSW0y9fEXPP+f+hx5uKSgN3/+q79f6ZYt
8+2lh2sFxf3n7ZemP8zzRf/I/tV76//u/G1anvj7rFf2/T32/kow85H5Cjbj
L958nbyu2aVmg8L1Sw/mRbrkG5i/+HOMBxj/CH1B/fiLlMd+0PtqbZ17+ZD4
k6xP6Cf0M+1Z8OrGoU32e/4X/SPxd1eexb53xwP/wjxPX0TKY3+in4lXIi/Y
q2D0He3H3qT92KPob+QVfljvweg/6sN+oz7sGejYo9CxV/neqkeerfhUTc9e
xb4Fs18K+wL9R/1g6ke/mfbenQLxANM+9+IDDv+31aJB9YrtDyEfkyzzFX1G
eewJvoc9QHn0m7m+e/ttqI/fs15A5/fQWS+wp5nv9A/+GPYJ/peZjwoQ+4b2
2v2xw7ETxR4EY6+BsWfB2K9g5sOtrk+mxdfKkPlk29O2/Wfbx2DG2z4PbJ7n
vifxIMrT/7TfPs+BvuP76BfklfJgyrM/nfL0P/OT/qU99C/5N/oXTHvA9C8Y
fsHUT34YfolXOPG/uyrzm3prerXIlPiTHX9g/QGznm+pEDF64aBoXSv7k3mv
DPPyq/Dj6JM7qmO3A3/5zzri2Y/u/GQ+mv7tXZl/tJ/1HHsHfQe282M2Nu9b
CLDyWYUs+z5QMPVPd+aX8Gfrf/oT+4r+fLf/z9sPLI3W1355+k52Nc9+pH3Y
2+gD9LcZL7gt8UewqY9vS/9iHxAvQR/gr4GRB/wRxpfxN/OTgSIPYNO/CZT2
glmv4cc8fxMk4wemPtYrez0DE/+0z3fb9pCZD/Lyp6z/pv6LKnC+w8bIJxj9
xffpX/wv7HPGGzrfAyNf9n3C2FOyv8bV38gX6z/+sumfePqGfCLjMaBv8HMN
ghL05J+Cxq0MShf/H38DeU5/8N2DMj/s+Ad09CEYfQym/q1uXAF/CUz9YOJB
YPQdGH0AJp8ERv+BWU8ZD9ZPMOXN+MVtiRfvfKZ0z+Or/HXW8H6bl/VIk/wE
dPjHv9r74Yg/d0UUl/3W+E/kC7BnwJyfMPPh/4h/4thrZwUzv8D4U9ir6FMw
9YPx15Fv5hvzHfuO9jzT9cY7m9dGaqfeY5Lfh469SP34L2Y86bI1P73zTleG
Jqx6+/t47chdqsTHoDu/36iqOXTvfKs7H2gv9jHzk/UFfpm/zvjcU3ce6JXD
vps7336oZPco+b7cZ+2WZ37jHzOfwe3fudZq0zvRsp+C+WueV8lS9v4G+74J
9Df6ifLIK+Wxl9H/yCPtZX2175vAPoQf5J32mvH9IJkPxH/N8zVpyvb37fsk
oDMecj+pa68ib8gz+h068kU+w7zPJUnZ96GY+cDzBejoL/aTQMceAKOPzHh6
YcHoJ5tO/cRLoaOfzP3qa8V+pr1g4gVg7FUw+gxM+8G0D4z/BiZ/AMZfBiNv
YOxZMPkCc/1bK/qc/gbTPjD9BaZ9YPoPjL0Cpj1g5hPyiT9sxsOKyXrLeICZ
P2D4s7F5PuuGyDv1gxdsrLDuxPIcNS0ra07bJhliz2K/gZFv9DV08vGcz2E9
gU68g9/jX0BnfQETL+C8EOsBdOJl2Au0D3y98IftaqwP1z87/CjO15If5rwO
9aGPwXK+wsXoO/K7yDfzX/xJlz/6t2Ohz/Jrl0oR/2dg88AqFUJSRT7BjCfl
RV6N9TVJ9Bfy2t4pL/L6P6c+8d9Y3znPhf3J/KU8+oP6RN4NfXhL/Afqx56r
9uPy6SNfDNc5jr3h9t809ZNjr6mP/1j2Tu9eMUKvfvGH2d1mX1TYJxJPcP0z
ib+76xX2PnTx7119TDzOvi+Y8cHesO/7tPPh5n3s94Qu52Pff/Gzj+O9+7Oi
HSzxQvt+StZ31hv7PBb9S/6H+U++2twv4dlP+B+Ux76AjnxjjxPvQp6Yr2a8
xzt/R7wKzHykPPE+6H8UnTnwvzfjtaMXU2R+0T7sE9texL535n9h7cb35Twx
4ze2Y3rv0S/E6OuHSzz/XoznD2D/VL89/vrenfH63KK+54Z96PWvuZ5eFnsG
/8q8z8LPal+Q0OlfG1P/2pDzm9OKhev+B3zrduxKlfwQ7T/3/JcvPDwnRuj4
u3Z+k/UY+8a0H4K0Tbf9OdYXsWcM/yVEMP6ZWT7GKp8gGHvQPH/s+SfYf2Dm
K/EHMPLA/AXzPfP+lHjr/pRsmQ/Y8/b+f/P9hWvW/MsrsF/Wvj+F+oPGf/Jd
qdf99TVH3uR8gLnfsOD+Vvt9CDvfYu5fKXgegN+zv472ky+yzwvw+09rt/nq
37AwbebHThfY7488sR6xvqHP7PP/lOf7zA/aB0bfUh/YjD/cUma+8JbYh/g7
Zj7dT+w19Je5H8KzD9Ff0EWfGfanl68UfeTS0XfQRf8Z9mm8td/EiwfjL9v7
/+kfMPoAexj5YL1jvJFnO98NntV26uOPhATrfmXn+hr9mukrtaj2h89cDhd9
iDxRHkx7GE9zP/w1dejKimvXZlA+V6HPsVft/CPy57Tvsvi7jv728nPYZ2Z+
Ll/ylaciZlYY8UuE3ud8X1X4LqHr7cMR+hHn+5Iv4/f0N7/H3oY+fFKl77dt
jNannPVA9nub87+45OPGBF4cevSFUPpT9neb7014+7nRR/Qv+7+wR/g+4+Hw
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
cO+9pK91xzcf2h2uI4aVmlW8b4b4x8QH8F9t/xb/X+6ncP1xOd/m4pR5Oas+
yclRJZz6RR/b51vt9yHxfysn77zhm++n+T3xdvO9zSIyvvTX3vrNB/vapAo9
/bHr1TsfS5X4E/Fa9J/9XiD3DyA/tBdMfJj5bp8Ptt9zM9+HvCD7PeU8pLHf
NETyFZnfLyjRak+I5CuIb5jvYYXqgw6/Qj/u8Cv5TOonn2PHk+hvfm/v/zLP
O++T/aHFh7f43yulDqmnqm+YPmNpijpQY3Dh5w6fVSfnLA6/tilF4v+UH5x8
84WMFn76g4Dnio14zXufU+7Lnb3m+15vhch5euK7dWoO3lD2sxRf1uPdq8Y1
yVMd78ycH/arl38jPkQ+gf2v5A/AzE/0BfkO2kc8u5bzPfXLye4jVpSI1O2d
70l8hvgl8439xU5+Icg63+2dd3v6wi9Jrd703pskHwFmferp3Jcr5zHon1fv
jm/+SO8YyS/AP7/v3+7finPbe+9TMl8pT7zN1D/HBXf3mzD7w/BIOe/E/mIw
8VnmP+dZ4I/9TWDo9vuR0InvUz/7rYk/sn/Ejuej/4nPs5+Y/dbER9kPSv1g
8/2yXPk9mPh+jmH3e/fnmufh/imAWU/B5n0IKYr8CPFOyjMe9nk7876hU4r9
4+Q/+T2Y8ugXMPqQ8uhLMHRzPQ+S9Rb5pv3MB3P/QLDkE6mP+cb6g75Gv9j5
BPLR0Jlv6Gf7PWD7fVj0G+cJicdib5j3F3j3aWHfgjlfaGP7PDD7nbAHoaP/
+T3rh42JD6N/7fyAKX9ZEv9HvyLfjKcd/2c9cdoTLPqV8SP/wPix3vTuOGBY
fvmicn7yWrOugaemePjeE43uLhrs5QsYH3l/zy3P/q+JB7J7lVtfXH7/8Mb0
C0WeKSF46mtnvm03JlbqA/N74tX0h5wfs85vwC/6HP7IH9j5FnO/vne/KusR
+1nQL3wPfWDezx4g9lrzJ8ZearXYXy996ZEZYW9kCh37TfYHGPtJdxW438I+
Lwom/429Rf6Z/cJg+/1Dvif2gbG/dFeB/avkT7AXzHxAlnV+7rz13uFxqY/x
svMD9v5YMPagje33Eu37Gsz2hBS4j9nM7xW29q8WKbDf1b4Pjt+zXpvtjylw
PzG/xx804/9pguk/k54lmP4C019g/Cvz93mC8Q/N/I2H8RfN+oME039me0ME
Ey8wvx8mGH/BzBd5+Rn8S7N9HsbfN/vDw4yH2X4P4z+a+ScvH4M9b/4+SZn5
jDTBjJdJzxLMeIEZLzDjZf4+TzDjZeaHPMx4mfUHCWa8zPaGCGa8zO+HCWa8
zHyUlx9ivMz2eZjxMvvDw4yX2X4PM15m/svLLzFe5u+TlJmfSRPMeJn0LMGM
F5jxAjNe5u/zBDNeZr7Lw4yXWX+QYMbLbG+IYMbL/H6YYMbLzK95+S7Gy2yf
hxkvsz88zHiZ7fcw42Xm87x8GeMF5nwA+Qow8WEw8TTGy4yPXrXOB+YKZrzM
84V5yr7PzLxvx8PYl2Y814tPYk/amP292JPQ6X/zexHWfT7e+QfsSRtTP/6z
yX+SFc/KLXAewn7f0b6vzY4v2pjfg833Ef0KvD+BPwO234eEjjzze+TZjkfa
mPqIN9v3e5v+kfceJPEQvs9+UTDybMYz4wrcd2e/F4m/xH5e/BP63zxf4b1v
yfk48zycd/4jbFhCiUXVY2T/B+cF7f0g5ve8+ySJN5r3K1wRjH6EH+Kd9B/2
t3l/Z1HhH/sfOvuLwNDt92Wwp8HsV5H7ylz67tsnfxoRV0KfdeJLvnqN+/9V
vUKs4N8bXZpWPjNOV3PiUa7+OqhM+/2kMsfnhPjj+Ndg9IX9niHY2X8VKP7w
e+/MjuxdJVAT/0JfmPelRxS47x36kjq3Z2+6Fi33Q7FfkXgS/gD2O/qL8XXi
t34FzgvSf7fuXtw0e05R6Z8aUQFLMt6IkHgI+8ns+6zM83O5BbD5Ht41Kz5+
Re43R1/IfVjueVjiBc5+s8Lib9Xs8PPp16YX1sQX137/06SDad59FMS3kCcw
30M/QCe+bd/XYN635+Ub2A8MP+gL+356+z4U6hvZLXjKxxXzJZ5EvI54KvE/
8JSyv65YecWLL7N/l/gd8XJzP52HobN/kPgd/n5sg7EThn4VIvUTX6Z+5If9
scgXGHm13+uEf+J5xFPxP9l/XKb/ruHrHk1U7E/nfDT5CuKb9vln9rMhzyNv
p1f8/qtUdei94G/+98/9/lmywK9FaKbsRzfvl7qgKF8y/nZs/83Bcl6A/XTM
L/Qp7eG+EeLHjaqXHnjsdq7En9fm7F7xRtVc6X/2E1Nezss735f952D62+aP
+A2Y+ALlic/w3gCY+zbM91lyBBMvgH/sHeIVtI/4GuNBfJvv0z9g2ge//J7x
hT8wdPKPtMeZb178HH3A/kviSezHZv86/jXvQdjvBYDJR5rv896U897UR3yQ
8uZ9+ddF/xIvJl5F/Ml+39u+HyTZXZewtynPfQnQiV+xfoLt/fdm/tGjkz/n
98T3Wa+Ih4NZL+lv9AfYsYeuC7/cB8J4VCr1V17hM3EyPtyHYK6ni6z32dbK
/njyS8gX7Uce5L06d7869q7Z3/sV/Uc8y8y/HrfO52VKeewD8/dZBd5v4/fY
R5QnvmWelwiw5MHfes8wUMYbe9i8b7yQ0NEH5nmAwALYjv9TH/F86iNeDsbf
tM9Hsx5i7yFv2HNmfiGuwHlofk883C7Peg0d/c38x56BH/O+3sIF9t+b7094
72kQX0cf4N+Bodv7tc33L4rJ/mHyB+gP9Cf1sR8BjH9nv89BfZSnPvoHOv1j
0osU4N9+X471ifNv3O8Ats9Dgpn/nC8i/gmGbr8/h/5x8iNF9FrnfIDiPiLO
C8h9pcZ7DPmijzl/CSafAyb/wP0WYO7/ID9D+fdWNqu/9Hnv/huJT7vxc/bj
0J/oV+j4M8wX5Mf0jwq+z2ben+2dD4Bf+/5a+/5H5JHzVLQP/xYMnd8znuZ9
YNHW/SFePoTzWLRP7kd22yf3t7j6Wu7DcfW5vKdi0WmfvH9qvWcGHXuD+Y49
vqBJ6qa/otKETnvxN7Cf8UfA0LE3kCfoYOjYq9g76Hfah31D/874Y1e3rFkl
RJ4ZX8qzHwE69jyY9cB8v8y/wHse5AOxt/CP3in314JZlSJkff0xqH29zreW
iL8IHfsQf8E8j50j/rHcD+PS0Q/Uz3zHvj+3dF/Xxw9Hif3P+VL0N/cDYQ/3
7776yvTou2IvY6/a973Y70nhr/T6sVLtgaW9+81Yf5gf5Cu5T4fxMM/7+Gnu
36F/0B/yXrVbHvlkPuDfoD9Y35Fn1nN7ftrv/XR74A/u884vdtiYMbS99/4P
dDmf5dLlfkyXLvLo0olXQef9COhyH6ZLl/0cLp3vwR+/B/N9/D/OczP+tAeM
/GP/sz5CZ38OdPwn7Ecw+0eYr9Cxl5gf2EvoK/wL8zx+UAF7Aiz3Nbr2EvEQ
9D361Ma2/UW8xdHHgVI/9heY8LboS/effR+wne/FngEjf+Srme/Yx6yv1I++
of+gs35QP/zb72Ha+Ukzv5tr3Sfk3WfKfDDLxxS4L4h8DtjO55jnG7Ks8zW5
Fj3POk/jnWch/2Kenwmxzk+EafO8jHdeBP7M8zFRVv0x1nmYOOt7Cdb30pS5
Pz7LOp+Ra9HzrPMY3nkI+DPPX4RY++/DtHnewjtvAH/m+Yooq/4Y6zxFnPW9
BOt7acrO55j7pXMtep61n9/f2l8dpM39/yHa/H2YNvf3e/vP4c88DxBl1R9j
7a+Ps76XYO2nT1Hc/0f8yfbfwLQHfwt70/Qnvfun+J59n5SZf8mRfAzrK/Yo
7QHT//Z7f2DWQ+pD35j+tL/1nlKYYOKxYNZ38/cexl4Hc56V/AYY+wx9B6Y9
6FPsEeKf8M/6zHiY91F598Xxe/Yfyf3Hrr6U+4xdzPiY+yMSrPx7grbzzeb9
QP6y/sj9y8Z9QXkF8nXm+IcXyJ9Bxz4AM17Ya7TP7m/8c+Ip+HvcD4u9+eaG
bTVG3w7XPZz9vb5mX0/f9uGqaMHYk8T72L9pxkvzBWOvYZ9Wmzex2gtzLyv2
DxOvoT7yN/i35B/M+4KuiD3tjP8V+R7+NPXhv8If9iXl5Ty5a79y3zXrL/Fx
MPdzwg/xevoXOv1P+8z7eT068xF7DHmV+2pceQbjT/A97nOkPfALhm7W58X3
GU8w8RPs9QsfjQh5aHmo5BeIb9j3+5B/In9Cf3J/M/2Hf2LHu+Gf+D/tQb+B
i3TK+1/DWVGynxt9b5YP0/b71bQXDH/Ec7BP4Y/9zfj/+Kvc70P7wfBLfBx9
xe/B5H/Jj6Dvmb/cf418gM18WI68f8LvweyHJ39F/5GfIz9Ce9B/YOx98z5f
P9Ef+K98D30HRn7NeG+W5H8ZX+Y3+o7xwX/nPWAw44X9YZ5/SJb6wcx/4ovI
J/FI+/yGvV/ePJ+TIP5Hn9T2M5v+Eq8n9tw8oMuraeKPPV1rh5o8LE3uu+c+
GuLr7E8Hk0/E/wWTH6E8/iQY+wX5Zr2l/8D2+8z2e8zsf2S/vhlP2y/zmXwC
/YM/AuZ+feKJPU8dWT3mmfvr3VOr5jz3YqavXt/zZ3IrePcDPf/O2IY9h0QL
veuBL+ICR3n9HZARnvxE+Xidt/HkjBYVU+V+lsiFb0Rub5Pqe7jfT/cSu8Tr
DUELqp/4K9U3q+mX3f1bee+78f4n+Q25v9SNh2zvMiqzZsPlqvvwJ8+H30xT
FW9XX9c4eZXMr5vVK9WNnbhBfe+Mr5w3q+KMr7p9onvXqp/tVTed9sl6Wtxp
nxqmjqwY+fs2tdZpn+rdIu3Nuvnb5f6sT2seaaCHXlEu/2pPj1JXM9+6Iv7x
qrLL3k/cmC/0dy/1WBFzLl/oxI+RF/I1yAfxZvs9e/It3N9kn1/AXgOb+x2O
S3n2S3B+Af/cvv+Z3zvrQSGJP3H/N5j8Lflp9rejr8hvc781/LP/APkAE5+j
PPYA8xeM/cB6iT0ARh+SH8A/5z4d+71u5hP73ZlPtM/MZ3r3C3UZMmV0jfqh
Ek+AX9YHed/PeH/2oLrj8Cf3h5Fvoz+J19OfYOj8nvvwmS/Ei7CfJf7kxjO4
f57yxJ/gD0y8g/EgXsd9Q2D4YzzQ3+Z9jmkF4vvEH8HMf+TbvC/+vMQnsVdY
z8n3gVn/Jm8ZmqDqee9r2++5wx/xY+KV2APwh7+Cvc16CIaO/mN9RJ9WKXH0
+98OXFScP4BOee43tO83MvtvkdW/IZI/wP+iv8DIH5j+pX/gl/UZLOd/XH0D
Zn8Z9REvfH56QskbEQmyfuGvMH/BrHfk24l/gZl/5N/t9+wTnby0d/+cFS+F
znoMnfGGTrwUOvMDuty35dKZD9Dl/i2XzvijL5FXUx/vE3lgPmNfgbGn8FfQ
F4yPmd/wk/4mHo+94uirc7K+0x4w+gp/AIy9hr1i3w+KPU3+UN4fcfN9YPbD
mPzcxxMTS32T4913Zd7HlyUYOvYh9iXfpz/gF8z5zPKP9dM1Xw/XI6rdbrV1
vHc/Jv2NfjH90xPW/r5M6z6uTLFHWxv3qh7zsb6Cmc/oZ+xF2s/6Tv8Sr+L3
c57aMrhsvzjpT+w58/zZLmv/2X5lvo+7S/Y/0F7Wa/b3gImHm/GJwtb+28JC
xx/FfsAeB6OfyC9wng37AIw9hb+K/wTGnsN/xT9BXsHYE+gX5BN9hr2APUD8
gHgS+WjWQ9YX+hP9B//E59H/Eq935YP9PMgX+2/A7CdFPvC30A/4f2DofI94
Q/ZLF9avjvLorCfkP8DkwzivCMY/IH8GHX+S9RR/F3+Z/ZhmfOWyxPPAdn6E
9Yv5TD6Z/L95H1yA2Gf4d3Z8D31MvBR5J97GekW8wnxf8Kr427QP/U18FEz8
D32O/419S3/Z74lh77PemPeZFhf7n/ZCZz8c/QnGfnP81ZviHzn5L88+Z38b
7QXDD++hUJ730MGsv/wezO+5v5vyxH9oL/2BvY28mPuVPQwd/pBn9Iec13D9
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
EJjSsZ13XmxNw39GzuoWo1t+Mat7xBuZqnl6oSbhfb3znL/kl4tbXNd73/J8
/ox+bV4Jl/KdB91u9+bwizKfv/7zjRk/54SL/igzoXjHjpu8+4QyPjp8tN+g
y7If6o2unVecq++d39zz1bSJRWZdlv2Kf2bljhjQ0k/8gY01to/z3QoX/cL6
cWFSp9ZVp3jnGc44WIXur3/+8EvR+pN2uzuXOZMq5Xm/c/Rj+d90LOblnxIi
Rk5//gk/4bdtVp+BH1SK1tcqRIz/cKq3v/cP37EnBk5IEX9woYMlvuOrU2hm
+4UpvheXN7kTtyBQZ3V+tMmUPikqbE5CrSVDwnUdJ56veqxsOXxQ5v3+WVvX
5zcyQ84XrnF+L/t9Bsz47vUqn6XIfpXPHSzxFdpD/IX2+PVf+9E3315S5A8S
M/o2vtA7XIc+1mzVrJRjauK630qOmBeh/7z9crl9rVNV8WFbTvYpGi240rR7
G59of00lOthXeP13Z3advyuY88hrIkdVDglOV4Ueqrnn7dR7quTYVpXLn0n1
VVGvpUz+4Krgtl0TM8v1jNCxDlaPPXat07INWeqdTw/8cnFcpu/z3S2S9lz2
1/496p9+fvx9ffBF4h/9fvMXfdg8NCp8cOUA0RfkD/uNW3K+yNhM35C/Wya/
UjpSm/ebROmPXDr24M/vJ07/t0aaL2T+vvPjZnn3M5KPnezShzxRdExvHSz0
5e0/avZorzDBfH9sSN/xxaen+hoVv1C4dLM0ZZ5HDNGr3pkRld3xiPhLyye3
+/DT40d8x9p+nnXoTqTkK4hXQMf/qNw8dsBrnbz7HX8o+sNjtyrskfPR2/K/
O7Dp+wOST9jpYr7/+eUep09WOiDt/Tl76wtlcg5I/4D5HuX53p/Zp6ovCfXu
d8ysUKPdtRWJcv/Qi6nDl1c9lSj3A9ZIWzLhf6979zs+6mLap43yQXqdWx/t
PeJ8T+57utC7XbXyXb37Ha/U2PL00Gre/Y7r2g9qV2drosRL9rqY81bZbnn6
l/rg96DxvTSV2vNmrbiHdsv7VsOc/hB+O85vvrX3/N3CTycXw0+K+3v4+d0Z
L+XrXea5wQvDtBmvDtf7f378Wr2/9gg/v3c/1yGy2W7hZ66L4WevW572z3Xr
p/2h/9Mjb+w/qBr0arexQrsUicfBjyuP0t4Sbnn6+4MnXnypaUXvfYSKw8Jv
jQ88JO150sUTfxo6NKZLTIH75Hu5v39x4byc6su8+w+Rj6wOnxxad+SoyAeY
/hj7U5kbTct59w+ufnLOuE+e8eJha1xMf3zvls9qfXfIys4xYl9QX+JTi4K7
x6WrK/Ne2FU7LFyb7wfH6DUufVbRiJk7dvvrvhd7xiz8L813qlTY2WfH/qcG
D/ffU/f1o76yJZs1vHPtmlJ9tpUdeh/fmZScXK1nnjrVOfjq6HJHfQFbX6z7
U7K//uCP1IhekUd9t8rkBoxZnKberTx9WEDFg757QfdGdsm4qsrW6rA+seEh
X2DaqkfLf3df/us0GNP2Pj2i0ztjDz13XoWVvdVubvheX+LUk5U2huWqMx9f
OVen825f4IcXy9V/PU/VO1eu8BW921fqvxJNe79+X/7G9/9maJc9vjHr6mxp
8Fmw7vS/vWs6fbrH90fqWx1PTQjTfYLWVF9bZrfvZoVSD63wC9dD2v/+V+dR
u31VS0+vW2ZMhC7tO96lctoe3+6H65Vc3jpGt6q5fHpq8m5fdNnEl2vct28m
3tm2umrJ3b7pLU93XHk2Xu86GRp47NJu35EN/Sf063FY7V7o32h4+5W+audn
Dz7zy3nVKDFnQKemK327G5+K21fhmhrbuF7owaOJvgmq+5N9O99R7f95c9a4
1Ym+u7da/9Slhr9OmDPowN9xK3111/h6DVlfSE9aHvfpsW4rfetGdVx5p3Ow
3vJxzsbI8it97wa8FdQzLEwfWJ3UpLIv0fdnvUaJfWeU0PNPfRK3bW+i77lZ
56sMnhCh5++fNWRy3ZW+iBPnK85uF6VbNnnkUNl3V/oOTgvZO++pGN1z0tUS
Xe8m+oq90qJ/mH+cHrSh3oLpyxN9JZ+Iq5m3NV7HT/wzJDEn0Teuav6eiPK5
qu77TbqfOXFAZfx7p3jrvnlqwtN3Q2pdP6CSF14uv7u0v75wbWbr0UUPqBPZ
2ce+uFZCfzJmQLmVCw+oGx+0bHCrfoyuPfGZzlveO6BWZsX/NTopXn/WY/lj
DdsfULd6PD45q1eamtvq64kRJ4+oqM5nZzZ+2V9/OKR6cnDRI6rM4Gk9pg4O
0k3+Htbu18wj6tgjzUO634nXJUd99+P6EUfUd59vL/zS8DtqU7WSm5+/mKq6
JdxJ2F4hTjf8s0Gl7XXSVMfeV85lfJCnEor99PD3czNVw8RtncpGh+uDrTMW
Dpidqb4vM/eLVqfCdeHsunv7nk72Pbww6Y7/Y/H6+lQ1JzUqxRewYdeQsT/u
VG/HTq5zp3aKqltvX7HKvr0qbNoDukoolbgu6uWzqke1R5656ktWpdKP/Hkm
yk8v2dj90/eeT1F7ro6ZEPZqoN5TZmaHNzYkq//dO9Xs+qdX1PhSbeeG/pOh
1r416y2/nfmCT6yfVeU3v9PKr/HvG/ZeypD408EJ1f5YNyrNF3+rU51GqaG6
s9MeX6FFPZKnbI/UlQfteqHey8d8Mybdeeyd85G6kosfDhobePnnaL3CaY+c
753i1/Cr+UnJcr5oqosbLpv8v/Fnvffq716Ysvlpn3ee99qvRxs88fAV9YfL
X87vl6p17eC9V991W4Jvy0bv/kbar4fWKZLSI00990S3WcHli+hibv9tr9/6
k8PdiuiHdIdvHq2boh6t3Gr1qovh+pOJdbvtTU2T95v2OfxL/P7hphfXpUxL
U8PavX1x1umbqkv5OSUfbnxMvTUs6qWFnYrrsIrDcpMvZqhPvkprP2torC7m
4llH/9neb+wZuf+tZasNOuvjy2qg8z25fz7J7e8ZU1br5N+993/eG3EuufcQ
7/7H2eGtvm0d+5/c78j6cXjWwTvtnzymRm/Y3a3UVO8+xufif2xbtU2s6N+S
0/qM21HYX8+Pybxa98tU9fgrG3def8Ff385Nnby4aaq6szu/7MIvIvTmv4+M
/OvzVPVTwLw1g/6I1x1PvxW3qGKmujZm17vn58fraeOOvt2+bqbqu/3s218U
Wq+mO9j3xfD3sgd/E67POPX59mS37nvkmWD9i0t/bG1A+MD7+uCyS5f7nhMu
Lunyabpv0vCiZSOnXVLn3fawfi5w6Ordns/WLB0ZSn3q19+G/LZ+j/d+04YJ
FfIbh/rrV043n9I+J13Of5dZv0Id63BMdTh74naHT739kaeeDN15pdlF2f/F
+lXRLZ9SuWGpVnW8/Sg5U5tNC9+eKuWx/wdu9xtWf12mr+iOHUMPPBSt6xf+
feYboZm+Z0affnFW/DXlYrVv9O/v57zn3VeIP+H+XtbzI+54dn5vcNMe73vn
e/vtuxA/ZfBNtfz6n+fjb/D+9C319ujBDYofOeJbuKNDzsmlkXqhQ5d8SGeH
rgL+Ccj/eluSyCP+1Cdu+6cMnPp5+UkR0n6/PTPffb3yPWn/Lr/W0V//Eyfy
hH/2udv+Kn/2eXvb8K2q2/cvNRl41LsfJ+qVl0aNHnBUjfhldsvCpU+p9+NS
Hi1V6LBaUu7AS7fbnlKmvXJa3Xr7ixc25x9RrasX+rt29ePqzPDlF3d35j2m
QH3TpQc+Gtg161AhDZ33qsPd79Wo9dCOASNDdXenPXKeNMKh+z5t3evc2ieK
6w+d9viaJtY683dN7/wk94dccr4n79VcdjHxcur7sXDJdk/PO6+mJ3eLbFMv
03eoWFivsvHROqnfkofi5qb7Zv1RssyGZsG6+Zv3cs8VTVZ1ik1qm1g0WM8d
lHKrzfGj6ucnT2zN2Rary/cY+sqwnsm+MXPLpfe7E6vPO/z5HvulV9LRifH6
Z6e8r1fDqnXubIrX2fXH9W105bDvbp/2zy6cG6/HLTmTsPjgYd+x1MpFknod
UkWbJreul5gq75ucrttr1t5X0ny7PojNfu5AqN6UuOTUK38kSf+8fOnrbcFf
H1UrQ6s1HHokXA/vub7txluHfPsn15xUqPw9lfd26fySgw6LPzoha+iOXRuO
yP6UxhNVhSob03zPdW/5yeL6XrzpeMoHj41omC37ddkP0KzW9rVDs4+Ifz3l
2oYhYbFHJd+89aOnfvs9+YjvqdTNr79TKEGb9yvlqaSvv/ivTW3vfYtRYZ8W
urTisO/i0I8zXq0abr3nnqayCjUc/PetJNEvzfJaPtv65CGxz8+4dMpX3nNu
a6keyWrJxde+8pv2izLfRwzST7h0/I8vczst/mlhskpMvNvslzXxsl6dvbHr
g8Jfheh96UWfDLydroLPfNWs3o9n1d3qezOj+2T4Pl720NCRb59XG6Z/dbF9
frpvZn3/vikxO9WP/xU+uG1xku/46U6TXiy2T31Rp9jG3ANJvu6bJ4V+3/Gk
eqRTxomGjQ77xvzcvcXN/DOqfCH/VTWLHPZNCg5adG30VfV57UnDFk897Ot+
feuFoqdzVJGUXku7HT7k+3jrfH23c6B+wi1fv870/W2bFtLl3Prah7/5W6tH
i+hB7vfy46sv/qVPEf2T256RK15r0eeHyPur6b4pM1887GvWcF/77d9F64Cy
n1cp3SDJd2jT4BbzPj6hwidX6PDNx3t9i55cvKt9v6tqQfEPIuM27vdNaznw
ueyqN1WJZcubLX13v29YldTUqfvuqfkuvUPPqIj1XxTWxb/cffnpent97Z5/
aVdabKgesrRc+vfH9vu+yJi29k5IcT18S8v92V32+2ZvWjhySf9I/eR/IxYX
6r7XF/jviqzZj8fq2ZNLVGz83X5fjw7RS8tdidOl7haZv2fYfl+rbcv35DTa
prrWnPrr2cLbfB+FFv0zauop9e7ZF5/b9Oo234jlVarOvJGjVuWMPz/0162+
bfk7uzT33VA3tpcv9WfsVl/3pdHjJ1XJVyWSrjZY0WOrL6jyj7MODgrUj3+x
d7ev4TZfz/anfxwbUkSXLhl9bl7Zbb5Xh7ZOePHNUL2hxevPfdN5q+/E4pcv
3zpQTFcf07Tzspitvkl19N/vHAzX53bMaNlp5Vbfvg4nqkSuv6/P/9t0+923
t/nubD7y4b8fR+svn/ntzMCTW32X94d9X7hUrB429cvs1c9s9fk3//LVuefi
9CPXJw4oVG2rr+PrQa9N67JZrXC+p/r5927W8qeDKsahq0aBkf1vbz6h6jnf
V+WTV0fMrXBOjXbqU6Umf1pnRMhltdtpj+oze9kvO9deUZ8731fxCf5FWy2/
qZY67VPx9Yf/MnvcLcEbVhwOrTw8X8oHHy9So+YvfnqfW9+eT5L2RsQH6lHu
915apFbm9Smk67rtOf9hYtPX/iiso9z2Zh55dtyy/4ro1S4/EwdW7dx0Yqj+
xBk/tT5/ZtQHLxTVlZz+Vn9c2qo3vFxcN3fGUz1Z9Vqhcv8U1wnO+KilDS8+
d2ZPuF7jjK/y91d9ktpG6OuHHoynGhzbJnD/V5H6pjPe6vEnI+5UqBYleHaD
CmPLdYjWeW753PxP/408Fa1XuvUVr5L1ebeWsfK93TsDMiaPjZX2/LP5x2tb
YuKlvSnD9uw+2C1e93b5eXlEZ7+q09arzx15V9P+efc3/xkn1WBH3lWnpeWH
bh57Q5V35F1tn9+5/LMrbquqLs5+t8K3LZ4I1L858q/WjTpVtNmmwjrOkX+1
P7v/pFrbijK/1NZSpyrMWV9MX5/0YL6qZT2+qnlrWqR256dafDz+t8dejNZz
nfmpfNX795h7MFb7O/Nb1d618M8Oe+N0qFtf7aCQZ5ZPP6CKTLpXdYQ+rMrs
rPRXxKOX1cFuSzM33D2knpq39/S2TlfUvTIP9IW6/Pn68TtCbipXn6j8P1dt
eupkvspz6cO3LfnsyoT7/on7+6SlsW2mVA7Wl//qGNv+4GH1X6kLh3+9VUw/
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
3Z47wp9+Xp165aSrCuzB8iTJha+bd6ipwPktm7dvmVOKBOHreu6kqxJ7JedY
9MzCWRXW/DULTnfgoX3R3u6TVDnwjVZkvvOaUuRzI4ZRWa4KT3XdunhAtxTN
2/6iqOQWA9pQ8IBnLb8bXo4Vof1xkZNqwqsloTIw/nO1ydJHpUQe9Z7ydyfy
KFoevqPTKU947xBYx9RutzrAR/vLziyFIYNAM5PzOUGeT+yJJYr1Nd/G89DE
Ky9Kl3+RJfGvaH3bkqfz95is4iFnoyzJ8sOKsKnn8m4Tcf7IfTtx+GwPGxb0
UmVa/kS3p+3FRPH44X/kQ4vyVOF/x8sUoeqBo+k27T3KxeD/x+OqBouo8YC1
zocotUwRuIKaH4RfiLzNjWTDy9hfufuVtaRY6S/iL6g1Xj0nYFsToNvT/AQ9
Hm3fR88vm16SG+snQeKB0fKQy9pB12ItK0HTTX2jDyP0Jk2fng80+z3ZXInI
K+l8nYlOFf0rtCrJf7Xpu8i9yoJKdCj18t+EQ6P8Kx0f/CzmT1b+3q14w3Y0
/wit7/hRqJK1xL8MDRa5pPjEj+b7Evty0jS2qJPw03S8tzfU/CR+5XZqfvAw
/uOi+sguop+YHiGx32LfMOlPxyfD6we0PTrd/+zDTBel6CHSP/q6xM3JzzKJ
fy+tT2mm1gtWSKzrm3j3HYmfdWCjpenvqMfgLWvujn2Go/ZvdpGLqifOKAM/
Xj96L9vXQPa/Ylhth+l2UbIf+5Z96rK4Ig7jb+uvFa4tIfL/dbj/kXU6s/2C
pGESNT6R32+g6pEM/9cChy9ycC3lL4+iv0z8YxYiDw236zu78krQdnv3xR8r
Fcj53K3yXKC2WIWUzZJFHmg5qML31PzEXmQ9Ht/DZEV94xIOHEf5a6Puc6n3
Zu2RhiblGV33zpcQ/f+72itrK/TK0Dz/s69a+tKAnULxS1OLcqQytbFYvjkF
zDr+no3aBOjAiTnORnsloMwOk0opVIXuaX+2Z05kQ72L6nHePAHyTy9Kn8xW
g67V73e2PeIj06iASqd0DpzZaXJE7MgofrWTZ1U6vy8m9oVu6t6xk4x5yK7S
KO7N9E4ST++GdXZg1woh2BNktIy5lof2yEdXnxoQJ/QYjW8dPF6p2pyYl6oM
eDwGyIS94qNsvWnrl91kQz9cpvlX1uE17wP1RuMtulDxPwi9mIjj39D02I7/
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
b/+Selq+tAiv7/Ekt9vti4bI/E/KJHzkMofI/Ffkci1s5wnDOXj9w3HX+hKr
hSC9flreCjD+jo1d0ul/XwSGYvxsLJicc5ghCgUYP5K7NlzRqBKDNH73VH/g
6ruJQW2MX1peS+9v7vpp98+ZSEB6/8Lihe42PpKA9P6N0fmpNjjy/6rg/S+f
6jFeX1YK0vtPy3tDKfkv2Jij1/G3WhrqUfcffCqVkgubKgMdk/7df6CbdiDd
ok0Wijz7d7/ApeiSFz0JsvAsdb+IPHMKJV8GPyK/zvU+Iw/NqfcCILBDdX+S
PGxa+++9AKt3Tuv2ClaE96n7DN5v716ivkIR/qbuM5HX9pT8k1+DsS+uS2cG
MKAq9b6AVXfDmwqeM6AO9b6A5ZPHvui4oQQ1qPcDqAivf262Uwlm+f57P0h+
nQ5KPg5mlzdJ3bFQhpuo9wjo7l37M/+0MrxDvUdgn8vRno27mKT+OFeZNcmA
SeppeXclXt+msVarJDksMv9FM0XrBCsWTMPzB4RldxtMZcN5eP329/JYuqJs
aInXT8t7WRh/Axet/Re2smEUxo+5UjP/p5wKHMD4mdEt7LywXYXgN+1+fGcK
VwU2Y/zS8nZ/vL/y1VPH2r5ThVzqfQTV+//qHC9RhfZ4/9w25Z/p/8SBSXj/
bUqcDz2/xYE/8f7T74skpZ8A2qIfIsacegE41P8EIgBvi+qqEqBF/Sfk/ZCg
9BvgkX1kas+karCO+r9AkSprxm6zn4BJ/Ufkfcih9COA2fdtTVJ1K5hI/W/A
L+pVB7enG3yh/jNy/+dT+hUQ88a9z1ypF7hQ/x849UDt5XOjAbAZl+n7nY7H
T3pbnDB+1SB4h8ez3XcZXNglDCfh+ej7K4rXrz1pONDpsgik1+sesal2sEQM
0vDQ9xPrh4COuIWrqakEpPEhsjTE7+ftEf4Q44u+f2Ld//RLADpfMF4bJg3b
KfoC5JSsX2bvJwf1KXqA3K9dlH4KbA0/WvWlXQ4+o+gPwCudton1WxFWUPQE
uT+Q0m8BK5G5gVIODHieok+Ae57H7CkPlKAuRY+Q++FG6ceAIGnm0A1LZdhO
0S8g46yRkKMrE7biMn3+F+PxjT27v+YosMh4GxZNPdi+ng0D8Hz0+abXb7Le
Oq81gU3W2/V7UkjEXFUCD31+afx8WJ9cZuWpSvAhEjZ+m3UTB/7A+KLPpxql
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
sUxWfTAbftq1qH7OpSowryNFzcqPTdvLgr0ifzxfCEbz8dD2FY/CN7lvkqgi
9o8bAw1OtPeWA4+nJR+iVrBh9ZCR2v0LFWAgRcPdczkb6qeMueJeWgkmtkxe
Vv2YTfDXaw5+bD4x8r9h/euuU2Wsy88UyXw0/h7j+QrO3lf+vJcBFw3u5Tbm
VYITlyVvpEoqQ5zvGvWqrH+7cy0LFsjGLpS7W4XMe+X/r6svj6vp+f9v39W9
datrCSGUUEkkzGQrqQiFiKxFylIhCm2WIkK0WLIlUbK0IEZFJaX91m29UZb2
lfZ+fd5nZjy+vz/P45wzZ2bOOTOv5fl8vqLz/1ffG68PJB/lwMTrUUVpQ/WX
ni6gMGOBSv5GAeVzHsb6cxeCI5WOL++m+nNHHud5WezvovpURE/OkMmPgmfa
CsuDt7FhAX7+sNGXGUa+vUBq3u2g/B18FPcuPlXxYS9g2S+QzNzJR6aJF0c9
yU4EJJ9A9En24HzCfeHihdHSwwC3B15Kbcm7ma9E8cxTXmzdNfeJEh2/0dKS
TRfuKUGsr4TyG0OQakU3GIPrgTP7TTfVX/rsaBM3ZkcqOMnsJ+iCWVxc0I8H
4BzGd7XO+bDjweBnUN2o79XiwwMF2vO0NpimUb4t4YePF/R3nrzPA5YzPBdP
n14BsrR7NDYe4wNf3nrpDYtrwGS8X58vK9khlSgAZL/21X6e7by9HmjPzf/p
MFgKnCtNz41pEIdXsX3htvz2JZVREvAOti+K5k5LWbtJAgZjvG+5Jlde3UcS
kv6tfhNZ6z6yXpP+kfWW9I/gWUh+N/aRm/mfFHH4Gfc3MlpPk31MmuJ7mrft
NrSRkoaEH+WZfjV7/llJmj8l7f/G/Pjfnue1O5ZJQcKPJ/lAjE+n67kHkw+k
9ncSk58GMdu2n31wXobi9cn+6Y3zh/WZLnMzpEfBScx8okX3e/d7rR4FNzLz
iYT2Tg1b3D0KfmfsJYp3vDZ8ZqwEh4fmTxyMOv9JnvKJ0vxWtMicUYXYnkMm
hu3t526oQmzPIffnc6UevVOFIRjvbnZ9VpmjpyrV51nRMHy74pIqdMT49083
57BZPapQhslHoz1Ljzj3crjwF9bne+PaEZ58iUvx52T/Gse8HxR3vavqXYoM
zbeS/eIH1kuwqRo6ITYsTflbzdWji72Vm2n+NL5f78Jp4ybASrq5s+jJv/qA
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
dg4F1KD/B4lcB1A=
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwtk0tI1VEQxicTMkXlPvJy9f6vRRZaLTRIF6FmmtLCTEMr6GkPCSJb1bK4
QW2ErKAkaROE0SINgyjomoJRQe3aFRlBrYKyh1Fm/T7mvzjMnDlzvvPNN3NW
9PZ3ncgxs17WYlY2aXYpYtYUM5spNTteYPYOey9ldqzQLJ422x03+5hrlikz
e5ow6yS/itgR1izxw9iH4AQA1oNTzf70ErOzJWZ9+Jfxh/DzwNpIzhwYMwnP
byS/g1WDXxs4ljDrUo6lHOU+4W7NIrMJ7FrytuabbeJ8H/4D5cedk7gVwvM1
ecVFZvs5P8i6SX6auj6DuxzMFu5exe+mxqWqEX6d8PxBfFdYbw3nw9wdwI8S
a+eskruf4DPP/hxv/cW+WOZa3mDfGqUmeK4uN4vgTxJ/H3He4j8GXgy/mQv/
Eo4lzBY4P2K1kzsb8zPlLGDXx51zK/E15V7vBmL9cD4K52L8D3CY4q032N/s
M+D8wVayTpFzhtxp3q6GQ0PU+3MSfcbA6i7y2ju485Wa76DJd2wUnn34o/g5
cLvCbEwSq407B3GRptK2vNT7qv7+xD4PHP9Z4HvFd8A/D5whcLLgrOR+HXym
Oa9OOWdx72adh8/FEud+AJyRXNdU2q7CVgWurTTeHPMZ1iy/AmsbfhKM+4Hf
Hce+RRfNvZX6feG8THhf1d8s/iDvXeC9nrjrKD3HwRwJXKPb2C0x74XmSL1U
Txvh8Djt2tbj3yW+h/zR0KpH2+HUxVkbeg6kfNY1821lfkd31Z91gdfSHPMe
S2fN+F5WNo96Av+Hmk/NqepUvfPUVQCHneAPpRxX+BFivzjLoPkctiH8U/qv
TVHXvwI9hiM+w5rlirAv6k9TqK14aUY1q/lpn1HN6kTC/5I00ZzOhvOjOVoI
Z7iH82/sp+D/BXsr6X9Hf0j9UF+us7+G/oNodYj4f4jSnaY=
           "]], 
          PolygonBox[CompressedData["
1:eJwlk0tIVHEUxk8qacqM3RmZXs5YO6uNbnJROIpoCJlZadkDrSgrqumlQZtK
oRYJWUFOtSt6UvkMV00qpbawNrVoVaugXVhBIFG/j7O43O88/ud857Vqf2rr
iSwzq+fL4RuIm+0Jm20JzJ6Bf0fNmnLNmtE9Qm4pMruC/A3nVnA7ukye2b18
s33g2SVmyQXEQfcBfACfPvzn8D8IvlpstonYLxebLS0xexz32I3oHoDHl5l1
LjQrzTZrIPdbYlQQ7wnxpsEP8dkedl11xOw58u6w56xDXpQgXshsPe/zwPMx
s+PERrS7/L/A4U2u19SKrRoOnejP860h1nfsM9gO8aWw/0XuwXYDuQP8A/6T
cFlJwFr4lSz32pVDuSbIebPArBw+4+AMnHupPY0ub4XZMDna1Et0Q+BfxHsa
8pg/wbPU34OtG/8/xN4W9Vra0c1g68enJeQ13hLGXpPtb/R2Ho7dcLmsmYFf
k78hcE5Z5J8h50nyn8Nehn0KeTDHde/AlfSwDO4p5GnkKvpzmvc11LiBXL3k
3BjyGWqW4iRux4j/Fb41+FzHVo//Wt7nJ3yWO3hTAB5B107sLvKXkj8Z8V6p
J+rNJeRdge+AdkE7qF3UjDVr7Yh2RTugXVAP1UvFHAXfhtPOkO9oH/NoQ1cY
9h3dC/5HzK7Aez6H78WY92IM+2d6NYr9TOA1q/ZMwmennrwCX4g59xH8P+If
oCunvg7iRcAV1DSW4zk/Jbxn6l0cn0rwHeLq3poLze5jLyzyXdPNvYDfCPkn
zTmIi2agWWhGmpVuRrejnI1RvzHd2mb834MHqelwyG+uH67XYr4L2hntjm5I
t9SE/xS4Kuqz0g3oFur4TgVewzq4DfPmKG+P8A2B08U+S/VYvdbN6HYm4Lwa
XJRwX+1kFJyMeu1n8akldjrmt6SYij1Q7L0TZ3FXT9QbzUiz+g/1mqRp
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.2630675684365834, 0.393926426909213, 0.6477616910755305], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFmnmYlMW1xj8GBsdZenp6pae7h6g8AQFFISoQL8aoXI1JXEAFlE0BFRS3
ICDIJouCosn1CkECUZRhc9iMikHZAqjILhiNipoIQowR0CsumPxe38pz//jm
VNd36tQ5VWf/5qTrb7tyaEkURe/zpzHw6uoouoanKeMTklG0tSqKcsUoKjDe
zrjA+F6eNrEoGg0cwJNkfAPwaCGKFoPzOfBTngWM/wlsloqiR5tE0SfA7+JR
dAvzF7HZRdBcyPgzcPaURdH/nRBFLzaKor6JKHoV+NtMFM2piaJSeFmTi6IN
7DELOkXo3MyaMbxrwfgqmG3L+va8a5+NooHIcmkzyyF5jkH3G/a9kr06se8J
dR4/Co0/sfYo7x9mfixyjOFZA51bgUuBX0OrmI6i4ZVR9GE+imazX5zxZMa3
wF8FfJ4Gv/PKo6iKNdOhs7k2iv6btfuR7xJwB1VE0RSEeID9LmTfqcB72DPb
1OsHMHcDzwbGl7GmK+NmzaPobvCGgTeGfRYVjLcYWM9zPeMFwKvg56/s9Q3w
K9beyPgDxt3D/IG0z3tIlc/0Os5wMry8Co/9GcfhuR9wCTxWBv67s187cM9F
rrNYF4v5fQk0h0PzKt7fxN53wNvIjNfFw9qb+f0Y99KGtY+D04v1s4FnpHye
r7BXPU8fxl8kfQ9X8KzSfYN3gPmZwBk8f2P8MPSGZKw/0qMzoZsCv0eg3ZNn
NWu3gJMCduD9n+HrdZ7x8DGTvSawtpK1o+DxHp7V4bfmjwKvS1jvPkd3evN+
PvMfcu8V8DcdGvcAT+F+d7HXN8w3oGu7GU8Erzn0GyH3GeDsrDLOCSdG0cnM
72V8EnAbd9AB+gfRuxE8J6OTI4Ep1kyCfl/ev8GzFX1IMLe7qdc2aexzuhKe
PiqxzhwMerMTebcy3gFcxdML+uXAuZzLdaydA9zM773YzviMbUn33wdZJyPn
z3UX6PC1VcbXGW7FRl6Pe7824HSHt4uxo2sTvp/p0FjHs5hxx7D/n8M538g5
fg7N48AG1veFZjX894WPPON+wHmcxWxwfgDOC6Ver7UdA81u7PM0eP3Af0o6
Dt5h8P+Rtr7351nfyLT7hfGSmGU4jb0GBR6O6rw5xzLm5uM3WqV8pyvZfxdw
JPsuZ22nhM94IHt9G7d+JpgfwdzH3NF+znwc5zCU+67GXlaxzws8N/H+GPhr
wLm83Pa6lnE9a2ezX2vmzsN+t7JmMvKl4eVx4GH5IWQdz9p14M9vZNs6XG0b
ms8+87CzBvgYLnx8x0buLwO92/m9k/EA4KQK8zCC8QzWbor8vkO5cSrLvV5r
1yHzU+DXcte5vOk3A94Z9/xZ8PAveJ7Cmnno5LOMf8p4Zc7ySa5u/N4Eb6uD
L90HfJ9nUGND/R7AWW3I+Tw2Ax+E9rQK20bvouXrW7TtPBjmdwA3BPrPyieA
sxw4XLGDMxhRsJyS9yvo387vJ5m/o+C5yWFeNnsAOuPRqWkF38eDwMac+wHe
Nyua95d4+iDvtgqPJZPkWxPu7kDSflv+exznsz7cr3y3fLjeCfflgK/3G8I9
/or9fsXZ3Mv9ns/dN4fvn0BvD/qzhHX38P5U+HgP3loDb6jxuekMT0Y/54Dz
B+YvQ5YeNbbbtswvYn47+rwAXmdXWJ6HoHUJdA4VHU+Px+3f9f7xgLMSOu+x
5gvW/zrneHsx917Pnr8D50JwJjKfRb7O8LsMmkfBXQpcUfC6mchyJ+O7kGs0
44HsMSjEKfkC+YRe2NCymN+dzx5/RN45nFf/gu3sLt49C62Ggtc+A/wSvR6J
jDuQcU+d9f8cZB2KHI/CW3voLmPuMcYXweciaOwtczyQTunsdG6Da3w3imfn
ctYFnTmybITmYt2X/DrrhoK3CthTuUSIudcyPrGxbbwybvw8vxtVm65oLiqa
n8acWwU8H620rR2ptO1pPBe6s8B5Gt4q8h6XAych53nIewAaLZHtKd7vyDqv
OFht33SkYLuT/cmvyLal77cH2xxb43NKlPus5DvkQ5qjn5mkfYt8zBboN4Vm
L+Tul/J9xBnfWzCN0cD98JGFdnt4u4C9fh2zz/y46PFPWXeQcS1zHcD5OGtb
uTzhc9f5K0bKblYH2/ll8Au/5AwXxOzP5ddbwP8D7PsM4zTx4wg46+FhNDj3
xpwfiN6eQHMY53m3fB3jBni4n/2q4ecvWd/bO8AXOaOu2g+5fgZPLzG/T3GM
8VrGH2adP4rmH6FzUt53Kl0QP+LreeYzdc6HVhY8p/ij+bHBz1fVOlbU8253
5Fh9DvsuKLU9vVtmPjNBLsn3HDr1RMyx5Qh8T4TmfmBLaM3iPKdzVw3w3wU6
V7LvB+z/Ps861h+Km+YmaNbHfI7iS/b3XthLcWlhqWNTm2bOL1oDW1R7jc45
zh5T2Pe+rHOfDU0tm/IR5S5aU5K0vo+SfwZvGPQfAv4mYf9dwtlXyHagWQ78
pmi5vgbeyPMbZJkCjfKQF5Uh3xUJ+79P8VFL4aeB50no9gCnt3KmnP30E2X2
1dcwf630mfkR0B4Zs6+Tf9U6+diSvMdr4C2GXpxf5bxwa9H4nVPOo6XH/dn7
ffjoDs1XoLmlyr5SPrBbzLlMn5DPDw05vWgrVmivu5kbFnPuuKVof/UacHPR
+F2Qbzt3tI2nJ7+nlpreW/A8gv16M+7CnZ4CT3MZD2L8w5TjlOJVo5AzlwKf
4WyWVPssVtb5viYg41z5NGgvBK9J3n5vMfuvCDHxPHg4jXN7GPxDtb4z3V0u
6XxN8oqPtgnblnJw2ZD4/bLE/kbyq5Yphf4M6DfNO6f5XuehE8s7LjyvmiBv
nmry9h3yIe3g/+S864BTgJuz3ndj1rFXMVg5s/zHxcr9GnmuT8inVxUt4wvA
1inHd8X5jO4amtm81ymuKRf8A2d7IXf6HHB71nnDVuCurH3tTuCbBedqZ2AL
XdC/m9i/E7IMYY88e90C7B38pPzlJ6qdoP934JG0bas3Z3Z+wroyH/wnY45b
suXn+D2TtacSU/pxXy2Zb5dxfnGoynnLhoJjUTN4GAh+ivWDpD8hd3kE/jem
necr31d9rJr34hLD+jAeWVDBjf1lnMcrn78MvsZAqy00xwJHgVMOTor3naF5
LjbeCXh2qENVj+5P26eqpunK00v+oWjblo0vg591nHU31vZI2z/sDHVNbcL5
42dp+863qhwTS7LO+w4C3+PdHtXbsuOU8+9KzqZ3yPtjjJN1zj9SwIlp56F/
A5bVOZafWGfdka1KbxX7lFurbi8k7A9UuxSL1tkW7PVSne3nZeDaOvuadcCz
U47fXbmjTNE6eBwa7RPBpjOm/WKgf03GNbJqZeWF8hNNko4h+6qctw2H7rvI
2Jn5m8B5h3FHxm9X+UwUkx7gHGu5/6k5x0Cdj+KgYn6XKsda+ffOVfbPU8DL
gX85d/hW1v58HLw0g26K+Qm8/4C9pnE+7ysHjnm8PtTz4vkYuF1CnqN851Zo
PQWdz1LeU3tLb7S3fstHqU6V7Sjflj9QzSqf8JrsSH2ArPNh+VjF+x1Fx+hz
U/aduh/Vnr9IOt6vzXmN1h4GZ4bqK+Z/Ai+jOIP7WLOWNW8WPd4LPD34rkHA
NkWf8wWyx7Tzmhx31Qpf9DbnfBbzZyddO/4Y+B74U6GzD9ikzvGuFPhtsNXj
Rd/J20FXO6Ts019X3V10zb8d+Ib6AIz3AH9W7his+2nNHtPg7Ymca+tRob5+
I+scYKxqZ96dyppZwNeZn4d8dymflzzM/475N7Ou2/YCdxbdS9pV9B6K9dKv
0hAL1EeZULBu/ALZv4rbRyrfUGxQbqhYWY2O/513sWr7APW51ONSvq96VfmA
+ifqbamHotimedmMYpLu7r+AnZDv67h7X6ckQ0+r6Br2y7jrGa0XjngQ/Cbg
a/xVmN+Uc6xXzL8g7/dNuYsf15gn1RiD4z6TqTXOmWdWux7W++8CzqUJ1wTj
Cu4FqCcwIO0a5niQS75JPqo/9HcWfP66h75NrG/HkeFRfl/KPi2TPiud0xr4
HMN8FThlzA9gfZz5dxW/kj7X6bw/k3W3xW17McVR9trNns2Tto9p4IznSfI+
y9zhtHsL6jFcH3oa6m20511TZJpY57sSH2PQm5nBLmQffZVzMrc95ffx/+BU
u37X+QyJO/62Cb0DzbVKuh4pUd1a6txOOYNyB+UjsmvZ86aQqyhnUW77XagH
5Rf3hNpmU4jXitvKh/8RcmLZk8byUYppqskV19Q7VN6vWKK6UfeWZt/xoRb6
UXPnZsrLPgo6KT2Q/nWu8VhrJJNqzgVN/v+d9O9U6CzjXau8a2jtK916g3u4
X/2LoHvSXelfxxqPpXOq6bRWfTzlfMr9unFWpUX7+SZF9zJUW82qMS2NFWdF
o2OgqVit/q96v9Id5eLKwyWbZByXt33ITtQHkI1qnWKM+gDHgu2oT6p+6fqi
6yP5U/lS3e3M0J/ZCp89oHF10r1s9bTnhhxaubR6jdpfOiTdEN3vbTNyTSMZ
Vde8G2oG4UhHtIdsTftUhPq0T/DZ8v/KJVVLKx9dHvJJ5ZWal+6rvu7JWZWC
81rKfWflN+qjKC9IhdygLG/f9HLWfku1h3TmR0nX0f+DTAtyrpXqc+7VLY25
J9Ax5d7lhIz7KmtCz0d6Lf1Wra08RfFJeWtVyEvVe5tU5974woJrX92X+swN
WdfyzbHLnhnn5fvY55bQQ9C3geo689An5XpMddlgcP+Zdl9R/cUm1ZZddcS2
jGun7Rnfoeog6fd9de4zzyq4xtQ96P5kN/WhXouSPvNOnF/PlG3iauDg8J3i
5tCzUY6rHFk1mGqxRqz7ItSuEfDmtHtB6gkNDfFdcV79F/Vhbiu4D7FXeVel
7WZFzL0b1caqkS9JuA+lftQWaCbqjFNT5z20V6Ose/fq4Q+B5m2Kc+x1MOXc
WXmmalf1HpKh/6BeZWX4FqCekXpHxaRjp2Lo73Pu4dwat/+t5d0u7ugvaev1
oRDLGkK9oBqsUOv713cJxX7lAAsZXwOvjfX9BpjWNwb1muH5wZx93lUFr5sS
6jjl5crPxzB/rNa2Jpt7pdb7tCtYvu97C9zfD5OOHYohqo1PCT5nYOg53wDc
kbLflv+WXxKObKFd0vmUev/iQ/x0By4NNb5qffUX5IufLfi7WSb0ZqWv0tvf
svYF9eWYfx64Iu6es+qZd1KOY3HucXTOc6p11LO9I+5zV89EvkB+QN/o1PNV
nn1/yDOVbypnVe66BNtdV3C+qrz1ktC7UA9DvnZKkF35rvLeE8G/u4npfFHi
7xHqCSvvPAecBLBt1vbbOMQm9Z9kS6rBVF83hH6svl3pG9burHVVvW/5+SWh
JlWuMz3YhvqaG0MPWb3krjH3DtTr1f2fjcyDSx1bOodYo36g6i/dx1tNzat6
+ucVnCs8lrU+Si/VV9S3Q31DXMT8wznvr28FS4r2QUv1bTP0XWdn3acXz7Iv
xVJ9D1M8lY+5JdBcnDdvi/LOG5Q/1CWdCw0J+dCneZ9T9zrroHCkh8rpLi53
3aHvioqp8h3bc/4G+3t9f8rZx8rXtqqxPcou+4a6Mpl0PvVIjb9rqKfdNdSn
skPJL/1QnT2vzP1o5cDKTeXDP0o73uubofavrnT8koxDgy3rW5G+GU2ocz67
L+S06neo73Fjwfn1wArn//KFqkMUg/SdVXnq/xYcQ5aE/qfsSXYl3VO/886g
25ND71Q91KeLrs0XAJfnrHvSQen+sNAzlD+sDLFP9iE6+q6hb7bCkY1sS1l3
Fob+R32Z8/jLCtb1+lDj6nux6rj7s87rlN+pz6+4pfOclPf5PJ5yHBsXcoM5
Oeuh+gGKq8otFVsl1+2Bny9Df0T3rppGfcPv67u8+5+FtL8PSCekD+rly/ZV
o0q+qqAby0N/fkXosevude+PZByv9B1VvWb1nIcVXNvFwp2+GnJF5Yzi8czQ
X64Kfl2xVfiKf6Klc5YvVV6ke9gavg8qzumO/5VwLKoKdyB6rQLN/+Rtypf0
vwC6Z+VgMzK2J31zUD9LtaFqxJ055zt/yrl/LB2Vfr6Us42sBrZk37Ph5eqM
a5SvQ+2jPFO2pu8a20K/SH0j2bBsWd9SZMfyQdr7pFp/s/9Bre1+e+jvzQ/6
Jr17JvgE+Qb5Aa1TbPg2YZnUb5Cskll3rr657vehwL/ybPWWHwvfsvVNW7nu
+pD/DM85n1Utpfgkf3k68Ar1tdTzhffJSfdd1X+VbUi/FUvUG5Ovk0+W3IOD
7Orvy+5G5pyftAi5ve5MvULVhOoNr6zw/zmoFlJNdFLS9Y30SjZ1X953Oivl
c1G9oTinb9j6lv2k6uucbUb9oVwz97vU92oV7kh3pXxN5yy9+iT8H0gWeHre
PJyWt54r/knX/w1WlNjS
           "]], 
          PolygonBox[CompressedData["
1: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
m7LVu4i7FtUacpPuOeg+qaaqxtz/AYkhopo=
           "]], 
          
          PolygonBox[{{5172, 3703, 3701, 4475, 8002}, {6554, 2601, 4445, 765, 
           6549}, {5180, 3709, 3708, 4477, 8004}, {5178, 3705, 3704, 4476, 
           8003}, {4927, 4446, 4435, 2237, 6112}, {6538, 2586, 4444, 757, 
           6534}, {7890, 4074, 885, 4463, 6183}, {8003, 4476, 3704, 3706, 
           5179}, {8004, 4477, 3708, 3710, 5181}, {8002, 4475, 3701, 3702, 
           5171}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.42094789387692894`, 0.45164302979700377`, 0.5716152956122846], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnHeYVFX2tatz0XQ13RW7ugKiIkmCgI5xxlFHiUbAMQsGMIxZB1QwoYOK
Yh5z+OkYMGICQceEipgwxzEnxAAK5vCtl7V9/P64z9l17rnnnrDPDmvvWz0m
HLrjIbWJRGKXxkSiTuWm5URiRkMisYnKUvdEYn5bIlFReVExkejVnEj8onJr
3WtIJRKHVBOJU/W7Q/WfqDwgl0hMVD/XVBKJnfOJxHZNiUSmlEi8XEgk7k4m
EgXR/xJ9mOjTVfbqTCRu0rMHq/2G6vP7lkRiI5Xd1O7KrolEWmX/bCJxc73G
oTY/6Lq6VWNQua7u3ak2L4j+n/paoD7v1RhOi/GcofLCGPOlKj9Tv9drzF+p
PEhjm6CxtaiPXfQ7r/ojNJcF6udK9fOQ6nvpul39P6f+v9K4FqtNnfp6WG2u
U5tHVD6qewdrPAtVXqtrB9HXMUY9O1DPXKfyfq3fA7oyWtxcq39vVJNI/Kk9
kVglul31PXXV6vfIWpd1QQ9OuU1TjcuVQb+u8g1d29V4PaCvavXFvZu1f693
c1+7q82/kn52pfpcqXF9LvpktVmrzfST2rNPtUZHan5/7u53fRtjmxF98q7Z
SY+fuYxX/ZI280q+1XNkfmU9P0X3j8kkEss0hrtU37PBdfeJ7q4xNDebPkB1
zSpf0jVebYak/F7m/bzW/gLRa0bb+dH+9Ra3nyOeuK7guS0VHz0t+lbRjVrz
47QHfTWWE1SOVDlKV6vGf1XFdKd4arb6P0r0PernYV2jRY+p8f6xj/+nsqx2
l+jeb+q/T6v7op961R+r+vPVZojoe0VvoXnvKZ7avNX3Rkd7+rxc7S7V/H5S
P/8WPVX3k3puaDz7ruoWqjxb7ceq/SaqX6DfW3b3+p/e6nb36TpRdP9oOzPa
r6H1Ol/0rTUuLwx6hfq9RPRylR/oOkv0n9X32xXv5/0590H9qzr7F7T6+Xbd
a4/+qX+jm3kSnrpI89hS9SfWm4dYq8tEz4hzfRVnUPShop/WfKdor45Fhmgf
h5TNf/vrrL2nNg+qzfsq39Z1v+h3VG6ZTiSy2udH1KZXh9a6i8646Lld3c8I
ja2o+lVqX6d5/E3t82q/UG0m6Hda49lf5VYa61atHi/PTYlnn28z346Pc8v5
fUTlbGSW6LW1Pj1TppvVb12b27Bn12sMh7ea924QfYToSSpvDPpO1Z8nev9W
y6z7K6YXVMzbB7X6TD1cMT1Q75ocYytpfU5q9f7uwD62mf8XISv07AmiN1A5
VPswTNcQXdsE3dD8x+/XtF9/U7k19zSGxmbX0+ZX9kblZuKrS7R+W6n+11qf
d+QRMmKDdtOM8/ffyI0R7e6XPnPRf1bXUWqzvsoj2zy29eNdfVX20/VXjX98
o8fH2IbG2H+u9TN9o83RQXfUue/c//eufNDMdWj0z1gYf7n2j3fT54aa29cq
C5I/g1XXJ9pnY/y0/1Trf4DGdKD4f4HkxZsa1zUqZyH39J6hGsOSlGVPD12n
qv041S9Xn9N1xu8TT71Xb51Q32y9cHqb67autW6sRz/q9466N0j9DdC1XO/c
kbPC/ERndQ2uMz+iK5Gld+u6S9dNNR47c2hSH4vUdlO1XVbrM78YOaRxn6nn
TtW9ZcgE0V+p/FLXTNGf17v+QJ2NGo3nrzp/a6oczxz1/Gbq9y3RC0UfJ374
WfQE5Jqevb/BazFI/PhKjBtZ9oSuh/TeXnVu+5R+H6T+z1b798XPx7R539lP
eGNwrD97NTz47VzVnxO8jZw/N+gN1edM0fNqfJ/67+q9B+fBZ7q/VZ1p2s+K
fhgnz50Vzz6jPs8Mmr3hXo94lmfYX56bFf2whzxLW/acs8c7j1c5NeQG+3tG
7DHl6dH/tDafzbvqPX7q4QF08bSo59xCV+ssx+jzyXpfvGO9eo/3jOjzuDbX
r5Z1df4NTTvo2liD82P8jP3seJY+6Ov9evP7iDgnE9q9j+P07FMqD9LvcSrH
qvxU5fB61+0Y9WXJ7qu1BmO1t/8seo026e49HBHnkf4OaDdv7KxyqX7vLLpP
jd8zXnXnFr2mm3b3vjBO+hrXbr7jXD2r5ybq94l6pleDz3yl1mU26MeSpjm/
K2v8Pt7FO+mLfg5u99zm65ok+nmV29Z7fnu1+/xQt7foMXV+3wfi5f31e792
j+ME1T1Q43VhTXbTWThM5WbwquTAf6HF589WrKPR1Xtkfdau1fnaO+szeIvo
/arWkUNFj1f9ctV/LR3XRbrpRl0Dgv/vbjWff5rxO0+s2KbDttsu+PmmVu/p
bupnqcorsFurfjan8hRd66rPk1V+q3lcLnpRwvsJzZ7u3OI28zWm1/S7bzfL
m0l6Ji16osqM9OlTeq5eNvJ47Mpu/s2z13SzXr9C5ZW6Fqv+nKR1LXr254r5
fT2NcaD2uL/qF6j+u0Y/Q/tTq66frrJe17tqv1PWF/QSvbep6vk2Vv1exsEY
GAs0479Z9OxYw4TO1wTVb1jjcp82y7g1ox4aO3etsHuxqbqGnTxGa3uvfv+I
fGtxPTZhSmWrrifqbW82h815YtXrdgJj05UQPUblDI0/o/4eL7u/udEnti+/
F6rpiox59vSKeaBZ13CNeUbSv6Fbov4F8fne6rer6OfU9/QWv2u5+HFI1efk
UtU/pWtf0X+v+rmu0Q9r0yXW53DdOw9dqraf6vq32h+nuk+CPlT0s6L/pHfc
Ij34ouiNRd8uem1dt2qNeqrsp/odVf+o6AWSD1tjk2kun2he40Q/qbqpoi/Q
3reKfqPT9tGbKruXbHNfofbL9ftY0StUJlR/rugafC7sbdFdRC8seT8eU7kk
63UZr3F+qecv1np+pXI93q09Hqxyc13foONU9sInFN1b5ZF6pqJnj1LZu7vt
vz4qX1KfKdVPUP3HaneO+vxE5ZZZ28Gfix6oe0tED1K5VL/PE/2Zyg91zRL9
kco3df1L9Fsqfwq+weeaKj4Yitwv2ybEHtyyxnNaq5t578WKbb6XGW/Fdv47
Kifrfe9oaW6Q7DxJz2+kfhpU933WtsFU0Rupn57q5z/q8x9V2xq/aO0H6mpX
+2rFNgXnGrvin2rTA/5RH31SpnOSdQ+p/yn6/YjKHfC9Re+ockPJge6i9xV9
iK6+og9VuZvqdxJ9oei9RP9D9N2iD9S1DjauysFh58/RO4dl7NcXtOZ1on+B
1ti2UJtatd9S5Xa6WkVvr/Ivun5Tm81V/py2771E/VTL9v26ly1/kcNbdbdP
kopzOi/pczpKa3KK6PpWy/jROktNrbZV0Bd/avU5ZA/eSlkvH1Tx/mQlf9ap
uL6nyv66tlX9Mr23u/j6VdW/kPDavJayfn6j4He/pXIz1X2Qsr2BvYTf2Kby
lVrT+I/DxA+9w4+bpP4Lov+V8RiTrbat8Kmpx9eep3OyhZ75pNO6bGCr9cTJ
FdMnqTyz4nmdoXKb6J/z2aR+l+rdU8VLU+A3Pfet+plW8Zh2zXlcfWOc5Yzt
/VPUfmiz7WBsobs0t4s0x7/Dz3p2M7U/V+WBGs8XKdtWR4r+PGU7CL1JG3Tn
hRX7xReonKQ2p7Xa536jYvr1iv0ezsJ81W+fsa03S+96qWJ/6NVOy+YZ4bNz
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
           "]], 
          PolygonBox[CompressedData["
1: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
           "]], 
          
          PolygonBox[{{6562, 6561, 6560, 205, 4630}, {6020, 6019, 7859, 3997, 
           7858}, {4988, 2707, 6669, 6016, 6017}, {6030, 6029, 4889, 755, 
           5474}, {5472, 5471, 4883, 2159, 6021}, {5591, 1743, 4884, 5471, 
           5472}, {4632, 4488, 6028, 6029, 6030}, {6017, 6016, 6671, 2708, 
           4989}, {5470, 752, 4880, 6019, 6020}, {5473, 767, 4906, 6561, 
           6562}}]}]}, {
        EdgeForm[], 
        RGBColor[0.5814745618782603, 0.5080581527367688, 0.4772481808766777], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
hyl9K+NxRwTdjop+zhJ999fZn6F0d9Hdbknz0y+0tuc1lx21z+26Q4N0Xovq
PJ/bG90eGdUndCrk4ZENXiPn1E/PwfA0pZs2mHesaDedwkNuDpq5QPv/iWjl
BO3Rf0uut0nwmaTGnqM+HoQ3aP6HqM6rqrNQz1jlH1Z6k/q8sd384gXN68Z6
81r4MbwbvvBkyvcaWnxZdV/S87Xqn6sz2kfjXF2z3jC7yTrG/HrrM+g112sf
v1Kd32g/Pi1Z9nxWso45Lfg2/BmdD153lNLz6jzvF0Vzb6MvqY9D8pYFhyr9
Ie878r3Sd1TvLT33aNydNa+d2k3z52nO27SZv49HdiNHlE7Je4x/qs/z8267
F3chZX63Wu9e05jvqXwp81DZ7JTpD516StgDH8Q+v6szeEHrP1R84DDtx+ik
79Q4zWdio3U45Prhaeta6FzztBfDNbfzlfbtsNzqp3Rkg2kPXX23bu4TXfpP
Gve+Busc/dXP+er/Fs1/U+VnKf8n5eco/zv0U83lAOXv1vi/1/oe1NpWaqxd
VT5H+WeVH1AzTXWL+Q8QfVSUX6Dyn4Wujs7OXV8X9x19Fz6+LGE9v6fmvJfG
66c2T6vPzWrury76RNeeGrLyU9He7aqTVJ1bUqbRbdS2qt8LVV5T+m3eOvsF
muM19Zb9yP0ftEc3qs6PSmc1eoyn67z/Kxp9Bmehp2qvzlT6UIPzyL7x2u85
6muR5jBSfWyn59Q625zYnpdqn+o03iiVX1m1/EEXQ65wL9ErsT2ubPNdnqfn
joJ5TJvaXV7wHV2DPqgz+jhpu3S3OsuQ5zTu2U3W+dD3ztC7VLN5F3J+y1bb
gsyLefavM99CZ9tL+YurtjcuUfpUo+U1chtexToZBx1oXth56ER/qHfZqWqz
mdqepvQrze8e5Qva51c1n1eafF9O1J5PZY/1Pp+1fnWaysZrXz5VnSbRwOKi
6RAaX6V3bRp3jujlP1XLlOkq66J6y1S/q9Kc2h6v/Pnw8Lxly73iUXfmzfc+
rJi/0Rb+kFabVaqfUfpii+8e924yeILy+1bNC2mDjfw39XuRyv+udKGeBcrf
r7l9VfDaVivdoOct5TcqfUBzvV/nsKXG/71ob27KY0xNWx/YVOOO0/r31v4N
1918Mmud7B7Vv1TtT1bdy5T+s839s2/gH0c324bbNPgANA0vYm8HKN00571i
z8qijbvCnp9TsJ1xmN5/nLUd+3ze/LhvrBG9E/2zO7KjweX0dV/Otv5mer9M
PHSK2izX2ncr2+7+Ru//gAyGTvK+L8viznCeE5o997sCN2A+k1Q2WU+9zukf
Zb9bl7WOiA52hPqf0ux61Fla8x3fXnVuVJ1rVecmpUej12nOf9R5LdUev6dn
mOY3Pel8c7336cOQTZukLe8OyxvXwFbfoPknu1seIAvGwrf0dEfXzNt2+Up1
N+h5TPXv0Hz3yRhbuqBqGYUO+rDOaGHOuvjDOdPd6NADtsxZn12ZN4+FvyLH
F2iOZzZbX5lT9N2fmLEcmx+YALLvFNXprnl0V/v10Kn24Yk614Gep6nNsWrb
s8M6N3rpDepvovLHKr9T1Xoh+uHZyk9S+XEqPw5dK2k6/FFjnZT23eEOXVWz
bLsieO2+2td29IcO14d+wYTAhnp3NZaC/QPOcI7SZQ3W9d7OW8+6UbL9RfU3
VWs5XPU/1NgzsMOyPrt347xKOWNr76DfaT6nqJ+TVXY6j/KzlP5Fc9pbfV1X
s343pNE4GHbzlKCZEWp7PTq96pyo8hlJj8scXmh3PebJHFlzWnyxWWs5UL+v
LJonnwiPLXr/v1A6FB6u8mMy1kWO0bNObb9LuvwQ5Kbq/rnZ8nRFxvQJnTbl
rPN/rvm81GZ8B9t5l1bzX3gvNhkYC7ZbvuR+zlIfvfOWrcjY+aK/gWrza/Vz
bdb2+NbK76/2Vzcbf91GZ9SutQzvsC3VHneZ8/qhyTjeTXGP1udti6Kz9Ml7
fsyzMWeZ96dYy+SM18geXNHsc58ae0H57qKr99Wmq9Y0Ie2+HwlMbF2T9W30
bmxdbN7FFd8N7DD05I/h+epngvp7sMH0vKSrcTb0LnRm9DXuKTb15znT2N2a
7xqNfY02bZ3S07rZTqb+qznbidiL/yma9o5Sfoj28G4R5cdV20LYRGeqn1rO
fAZ+Ay2cWGd6WKF6V6n/lUovTVrngeYXxvp6hV7IPLGlVoLpNZsesiWfS0bp
Wer/71prq+p81GRcblxX09oRDdYBFqufRfDPnPUW9p9zACt7IfCywR3mT4M6
LBc523V541boKFfrjM7LWRc4TemXWd+Fk/KmE2hkGFi35nSK9uErpRemPZft
tMaGgve6Uemeedune+TN1+Bvy8g3eJ7oGLPibt6C7FX7d7RH/ZU+Cs1p/u9w
7nnjmtvlbT+z1gadxcGigyL3E7pTmzna53er1qexdbFzt9XcttAZvVU1Vg5m
/nbFd2ViYB1v58zDFmktiXrjnvAidMaTAh+uhH/hFGxZjfeyGm6p9EvN536t
ZWHeOAm6YKceqL4uVj9dytb7Pgy5O1bz7sc9g+Yrtq/qNf6bOa91bdq6wJKQ
C/gTRiS95wflTNevKV0VfgbKD6h43AOVXqe61yatEw9Tvf3Ak/KW38jxfytN
p32+jXn3RZ+rVfZN3rJ7kMqOyFnGgeXfX7Cf4AF4mMaoqf8jld5dMAZ9j9Ln
wleCTMAXgW0Ajr+l1vmJyraq2kZnPtga4BmHKf9oF585c8ZXAX99vt3ymzvE
XUKnRe/mXDgfeG97YCONwRtPULoya3vwCfR0jTdRbR6t2mcEvxwfvhDGuTxt
+jozaGxSo/HPC+vMF+APn6nP13Smuzdad92r3XYHcnvHDuvcu3QY28LuA7vL
lXzvOpT27rCOfmbZtuBToQ+fnDGv+VH7fbbWfUGzsRr4FXl4AWM+HtgOz9jA
Dw9Neiz2bUCH8agOzfcVze386AfbkTuPjQuGDO4HX7uuYP1+QcF3Dp4OP/qV
2r+Pn0Bpuaf76aL5v5Ezr5qhvXqv6DPZQft5n87+ePV7v9LNJJu/0h71aXWf
Vza7328DX3u+aDnSu4dlyc0tzqtaome7MS/wrgrYS+DsWygdpOfeLsbZtgvM
GV2YcmxlHuphM2ObbhH1Z2jctPp4ImPcvhJ9kvIbn1MtcLbrtD/v1/s3Ojz+
sV6N9pGhq1K/E6dqd318N6S9om0nVhfl2VgD/efavRbK2Bv2CD8O6+4Ta2dN
IwPn586MS1k3Whj85KG87XvsfOrTbmDk0R2OTll/4C5OwD+SdNmEKAcDAAu4
q4vxnNmR767z/av6mFb4XxvsDbD3I1PWJZp6ej7NSv/c7vlzvozPPDjPI5AH
mufh6O0Z24pnq8839e7fKfPc7urzqNT/+iaP/XZ1nX+Tr4994JzxA2TCF4DP
7dpmY03cc+QB93S12n0d9HZg4Mo/+X5I8WvB52hDfeQ9/A3sCd0WGwjclXXR
D1gF+7MkZVxyRtH+t/Vp8wawIPopV22nY7tvnrfPsy1tvRP9E91lRugpsCnK
0E2hRfTHdyP/XpTTbk2b6QPMAR8LOhEysW+r18kamR95bInG8JWAvS9q8fmC
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
/X8Pq3po
           "]], 
          PolygonBox[CompressedData["
1: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
Q56H/n8MrRnL
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.7420012298795917, 0.5644732756765338, 0.38288106614107076`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNm3e41cW1hn+Us0+vu5zdD72LoIhKM8Z2U7GLLYUYa6zYQbAXLKB51KgQ
Y8EYa2LsookFlGIJKnajIogmQbwJRUG538u37mP+2Gdmz55Zs2bN6mtO78kn
7ntC9yRJLuiZJD3UHlhIko/rk+QgtfPak2RLbZLUdibJMfq+XuP3VpPk3x1J
8pYWzdDYdPV3UX95LknObEqSD2qS5DcC1JRKkkZ9dtVv/fL6MJ5JknbBaqhL
klNLSXJca5KMaEuStPY9WeO/1Pg8wd8oWJ9r3y/VPqEfG4Vbl36/TN/P0/il
ar/S2m20tp9+65NNkk80/rnGZwif72rPFwX/5SbPeUntU4LTorkPaO5ynauX
9hoomHcUk2Sh5vTpSpIbtGaw5t6odpFwHa7+zepfrnmnav7ocpKcLfjDNJ7W
/Bc1Z5T6d2rOVJ11iz4HaO8m7bWrxh/S+CM693Th9jft/d1KkvynOUl2U7tc
4ydq/gTNX6v+Y9HPtyRJT82/VjRcK7zeE5yv9P0IwdygtXto7U1qf6PPSM3/
TL9VUoY/puy1raLDvqLPWSn/Nk049xac3UTbi3PG5yK1iT7rwFs0uVf90cLj
Lp1pkuCOVH+Q2mVat0WwJjcmSYfOfFODcBTN+sedcrfTdc56zZuh9j/a60nB
fEYwp+l7ncbPUTtKMLbT5yvBuUFzZmvO5ZpzgPD+WuM5tZdp74xgrix5v280
PlDjz7d5zn7qj1D7pX7TlSTHl9y/Uut2Frynda5ztP5i+EztsKrvbbPWXKjv
dwr3kYJ1vWj7uPZ+SGueUHuh5rdx3qppzpwawXpXuG+n/kes7WFaHdfDY9vH
nJ2FyNkaP1NwDlK7WZ8rNKfa5HH4oU+71zCf+2QtsKdmzTdnq31UnwfVfyxr
3p+rzxB9v1JnfEZ4jxPNpze4f08Pfzbq95PUHq05w0WbYyWPzVo3Rv05Gk/p
Tu8Vnc7Lmg/gh1d1lvNF/32E1yn6/bqSee8LjQ0QXgPbLLPva9540baEfIkn
x0Wfe9ip0ff1tta/rv3eUVuv+dtpvJvW3lv0nHvUPp/23LuLpsGgoGdbyv3r
enz7/ZjulmP6jA8Q3X6mOWv0fYHmlPQp6DMLfhLM7+i+nhH8dvVvE/w++q1v
jXljrtbN0We65GSz5hynOX31w9s9rUPeVHuUeGOU8FysffvmvfalkKEfNloG
X82Zn+HrS7TfDMF7QXOWp43DqE7rvHzKem+lxvfQ+FSNPya++pNgfU/rVmh8
N43/VXg+LJgPafwRte/qs1z9pzTeIRx+Jhjtaj/U+Dsa/0jt2BbjoG238umu
wq2xu3HfLvC/T78P1m891b9Ca/6kue+JfmeJzzqCtn8QHidp/lvtpgf9Xmo/
1D5pzcmrnxOvnKw174vGrcLjIOHTonZSk+k/RHCWqu2lTzU+9IdpvCA8jwq6
rau3DCO/i/V7pcb4r0lb5h9DdsWvj+qOitIrT2vftGD8SnQ+WHM+F53HStfV
d5kHGtQeonVnpMy7v2bPWvNkr7zhnyaYn+nsH2v8H2pvF/1vU/8u9efpc7P6
d6i9usFnaRecZ4Vzp+AP6GmbMF04z+hpeUFW0Kv3Cs5dWnu/1m4fOgy9s0hr
822+kxVF27GVou2JpeDTjHXYltBdwD1H64aqrRO8nOa0CIecCPMTjb+ttb/X
Hr/TbwN0pj8WfS8DRJsNAv5LrRussVdKvtPZus9XNPaiPkv16cgZ5uXat0Hr
69SvV3tkh+Xyce3zlOYciKwKZo8W0wI6vKSzL260fKQ0PqfBuqMoXJ7X+B/V
n9zd4zt19/jCRsvRLiX3J5T8+9yYg5wtijm0z0ef9oWAebvoN0/zN3STfRSu
HwiP9cKzr/Asa30/tbPT1metkqlPy5YdZOgM+BFdKzi7lgxzos7+F7VPNvo+
erdb76NPGHuq0bTa0mI4hwjGeVXzCfwyL2PbN0P0ebnsu+BOemrsE+G2t+Dc
EXP+rvE9uUN9UjrvL0Tnb3SOdwr+HZjYUPQQcNBPL+pzS61l9QIhOFPw0jr3
ao1dlrLuO0FwsvBm1rYcfXSNzj5Jc79IWSZ71Pk8nGWw5vTRnO0lI1cHra7J
2n/h7Ni732YsX8cL9mbJ5gTOIfp8o/FtxZ+XVs07A1PmyTEt1jvI7BzRtlHw
Zwl2v6Ll/BjJ5tctpiM0hKeY8x2tbdYeD2rdm6J9X+G3L/6Jxj8QXY4XPh8W
bKN2bjGuTe3ej70asEU19imxz8jlq+pvbrFdxbf7psV701/c5vWsBQb9nWMu
a96KtV8Hnr8qWfau1FkW68yPiYYHCt+H9dvjjZYlaASt0El8fyzo/FetKWht
L9G7TTQco/6wuFPuE3mhHRJ6GP2AbkBXP5cxjZA/6AitHlL/JN3REbU+4yEa
/6no85roc1DWdGsRLrMqptfbafvM3D3+03x9z2vtM0XbFezLRxp7Umu1XbJU
7e7CfY+w19vovIuF0xC1t2jvOVr7u5xlH7lHNvPCpxa7KFwndfi3z8V7J2MX
tOcpatcLhw36TNT8E7P2Y5eWLNfFsK0n6fvX+n5yybqNNfDCyox195Ml65tS
rffGB18XMP9c69gBXiL+ACfw6d/m8VHwWMoxBr5KRndRxidX29FhP+xw9FvV
OgHdcHPGd9VHsjY34zvaVv2ry777L/EZi5Y75A/aP1Frvm0X3OsbbHewG+jM
/YlrtMfZ2vdjzi7cF7Zaf4EX+HHf+H7oIHydEwW3U+uez/ocTXFGbHd7k3kH
P3VTq+Oaxnb39+npdnP0X66zboVuq9T/sNH66eCS+5PU/jpjm4htPFPfewj+
GWo34j/rc4rWLUvbhi4WD0zVmTbV2b/9cY39lnHC7QdV9/FlHtS8B9T/q/on
9PB85ISzMM69XFG1rcRmjq1xH9/g1px92pkZ63Vwx9/Ax2UcnXO2cHiqwb72
5SX3RxcdkxCbvKOxoYLTD5g58w6+C3Buyzl2IIbYv8Y8BG131PhI9K3wWi3a
/KPeviq8tjH4jbiUWObiiBe+DDovqjHd8HHOCBq+WPbvG2MOsSWxaHvc0Vdx
d4NTli9wIjYgFjhLbUfRvDRDtL+hzbhgm9Er2Ou7Jbf3B+3e1Z5/zDnOO0u8
84bWbK95fy5ZFpuD/4emTEd0NzYKXsAOoQvRj+jDvVPWBeiBVSXjhg7A1zux
yX7aRtFmSpP9E/w3xtFL65pte7A7+G34b58Ll9NqLBvIBXNPivngDf73Zezb
vltrHxm7NyR0JfKPHvhYcz4Qfo3Ce2d9X1I23buLVuekPAb/HJO2b3y8xvul
DBeY7xeM2+S0+QM++UPGcIF/j3TXe+Fj42tP0fxvhPMpBft3tdgmtd/Tve3V
6u/EuMT4lwjuLaLhNhobnjVfjg4feJPWX6h5X6ldoN9fEvxn9ds+Va8lT3CH
1o7QbyO19qYW+x7YbPwG/AN8Dewh8n9wD/ND0mA+6Kg3bbftbh8fPsHPv67N
94uuJx5FbpHZ9zPWHfvlfJ5UyjZghf7M1vdbRYeLROMfCLdZ+n6E8J6q9lPu
SueeVuPv2MiWBtvNPp3OmfRW+3vN205r56k9TGe8VP21Jes79N6XtYYPbGIL
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
H/V/oivjhA==
           "]], 
          PolygonBox[CompressedData["
1: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
3h24KaMKeB3jfmTdxSgA34MxXPEx4rs3nrGH+XsR524rkfcNtMtZfz3yjyDz
TOVv4I+AD7HfF4ucMyp3VM65BvrPGQPg3Qx+l4E7jM774TVfbxprfyt27KjD
+VyHPXYkHGsbMf8aW+ax/wWFtuFt4HfJR3Kco/0IHE7atsqBlAvlwm8ZZ/cV
81LmM9L25Y7IeAPZMb5tAHcGPMay/gbos8B9jr4NoD1ebFzAGKP3PWzcZ4z6
4Gcz36j8mPOvRNejKdt6A/r+lXIMVSx9D3ybhH1OviefPJ/5HniUFbpGGME8
Xu5cQjFoDPttD7499tqlmAbcAnxpoc+oOfArUfuafOQVdJnGfHLIZ66z75T2
2kmcyTTmG/HRq3MdoxWrdWd1d5UjV7L2KcYi4HuwyW/oMx2ei0POsY+Bm1Dq
WkZ3+IaYczTlanrfK2O+o7qreiP1Vp6Ztm8pB1QuGMcmX+U7B89jf1P5VpDj
bwlwL8f9lkXRbw34I0nHqmnQH4bfUnR4Gl1m8e3WYudQyqUUk+6MOIdVLiuf
XIbsC9H/I+aPo8Of8K9ifbOQa5x94L4tcey/Df4/wv82eM7OtwzJagWPzQWO
kU9A3yztXFJ3prlqrzLXQlqzCV0P8K1RoX08O+IaTrWccoDt8OsknvB6XTVQ
1HvQXhpivx7wuhYdfkbfWqzPZb4KmW+EnOM8Bq6OfDZkn5Zv/ztsXvsYB8H9
oPqutnPGlspdkL8r5BymImqflG8+gf7HgGcy2gEPV72K7Wcxb8+8ij3MVX0Z
de34Nfd5IPL2M17O8p3bydmVRWw7vQF6C1ojv11N26wN8B/Qv5flHG9X1DmC
coWOzDsz3xx17NKZbOQsasJvQ8g1wQFwG1UDKheDRyb4MdggJ9s14MNhv/F6
61WjDIu5RlatLB7fsfaDhGufaaxpAK4c/81VbGE+GjiPb8OzXa9ORfZy+LXL
dU2k2uiCtN92vcmdgZtAcyDkO3Zf1G+03mrlVB3KnGMp1/oJ/CHg3xk/hxzj
KhTfosaNhmY082zucEN8tgGjLXCbcsN6M/R2KAYrFtdFn3kJ15SqLZVzKve8
JO3a5xfOqyVrm6D/dei7SD2LEu9Ze6+QDykfx0ZV2OdX1l8V8xnrrGXTYuxx
a8S6dYYmBFyhGhhfO876eup/oNubgWusoqRzDuUeO1XjostBxtmF7oHsjvsN
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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.900403817552863, 0.6210095438821577, 0.2912518344138755], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1mgmUlNWVxz/Q7uqmm67q6urqrvq6q1lcEhVQEVlEQVHPGFDco+IGogYj
4B5j4hgl4wqOIu4mKnFDEERwOZNzZsS44KgoLiAajcjSbDaiZnCN8//xv55D
8b3vfe/dd999d/nf+7r3hKnHTumeJMnEnZJE/5JTq5LkI/2GqrNffZKcrt/J
et9ckyS/7qEx3d13Rr3HXdKeJJ/XJslT5SS5tTpJzlT/avVPzyfJaRr791KS
7NKcJI36tiZNkrmicbPGqJlM0dy/aNG7mpJkQr37a7XOrJ5JslU0+mv+LqL7
iOas0vOhTJJcJTq7q79WND/QmOdE6CiNH65vC7olycFFz7tc618k+r0akuTC
dtOeEOtO0/jDNb6gcatEY6D6z9XzitT9n4ifuXpOUf9n6n9M7clqb1b7E+3n
Nc3rFP3OetPvX5ckb2nueL03NFtO54esBorvv6q9X9myGR/y+Ua/GWqvqTJf
M4K3L/Tf/ZJJj5Yk2Uu0OrTfTvW9UTCPD6eWzbQe3mepI0muUftr8fVi1nJY
tnOSHFH0Gf5NzxVZjynq/XC9j9SYj7THy7TGNNG/Wuu8rzGniIdhGrNvlcfk
1L61kiSH6NvMimWxVL9hVZZNGvK5WDwdovEfi+ZNapfUP0f83tnk8+Wc+9Z6
rdO7W0+u1Rgtu+N5XbSPqfI7c94t+qyvk5wX5pLkD+pfprn/bPB4xt6ob+M4
Q+19aOq9f6g1t+k9r/5f6/uXau+p9nDJf3+NeU36tUX7PqLKPDPuIq1zar11
4dnU68P73prztOT2RbvPnn39XOMf0N766X2IZPJoav15RM9re/pckPM49e2m
39kad4M2N0Nr3Cl+hmvcSp3PUaLRlnN/o/Z+nmSciLfpep8nvv4tYzp3a/xx
orFE42tqbJPY4+56/ix05pt4p/271HNXi/8HtI+bRU/LJh9WmR/kxl6W6DdI
v6dFd6NkOkp7mSE+b9P4P2lCH/HWN/Thlibb7c8ljxvUflTtSZLJYs0dJRq/
1bydxdtMzdWxJdvrTIf2C7EOuvR6wee3j3S2JH3oJfqH6dvVonmDeC2J/j7h
R+7N2+ZKYXf3i58/52y7f04thz/pua5N30XzcPhPrZPztc4AjW2vt2xvVv8I
0Vik/kaNX6r+9/XhRa07SLy+rDWH6kzu0LpqJgs1bq1ojgidhyY6xPl2a/AZ
H93u9lg9Hwx9OFQbvkPt3mrvq7mXqL2T2h1qH1PtdSta51bOXv37qD8nftrV
9zPp5LvSge719kt/yFhPFnWz/PYNGR4iWQ/EJ4nGbXHGR7WK75z70c/rUvuo
S0XzFY0Zqj3O18be0BmtCJqXpV7rUj1XiY83kDM6X+f245LD7/XtbtGfof6e
4rOgubuIZlbtstqL8cEZ6ys+KRUPQ6osq8Oa3Z4nPsdp/hjRWSFbPFc0P9ca
V6t/nuR4p+RyocYv0nOb+hdp3XyL+28VjVNi7lTNfUJ7GKwxc/U8smD5YE95
8fOExj+l8XPFw+M5r7EvsUNz7xGNpOK9j9a8asmhtcrf+rbZ93RKH3pHm77D
CvajQ0R/qdqn4Rt0voeJzgad+yF67qdvs0WjrsU2RP/g7raz/2uwrU0TL9fk
HKPQ/UzW/uvUitvjKl6bdWfreUFq3m7Wml9qD680WC5Dqh0LWsTT57KN7bKf
8ySTYdrjXPFwn/a4Rn3btM63Ot812uP4Hpbd+aL5tWhMF8399dyo9RcQf/X+
o+iNTd2/Sf2TNO+36s+Ih9NSy5vxnD16jD5fqu+XI0e1e1X8o/2bgsdCi/GN
2ndOvxf0foI22Ky+l5uMJZY0OBacojVy6j9Fe3k+55jaT+MHp47nJ+Z9nnP0
26r+9/T9i9CT/9WY79X+T637XZ3b2MhJolUvmiek9kXsHT2eErKdofHbazyH
8fiq7TFmeYPb+C7kj+yx2Vua7R/uFz/lNstvXtnyRs7IfFvwB2/L683v/MS+
Dj93/U7Wi3+GbnSGzuD7Ror+APX9pWC/eEyd58wMe8FuDpac12v8yIpxw+CM
/RZ0GIvuLasyHTDSqowx06bQJ/aODDIZ75M99g8/OTL8EX5pZiFssdp7v117
XKfxp4hmH036EVsXvxXm5jx3TMH2hZ1dpDX+pfm3hJxpY2tddZYLMpne7rh0
meh0ley39i/br+HHbkjtO/Ah09Veq29fSI5nlywj9ng9uCO1P+td9D6f1m9v
/RrarHfvyqauifhyqHjbWut+dBE8RqzB9oYWHSOGypd21Ni/PaX+Lep7Wb/R
VY6JvI+pMk7Ff+G7NtWGvag9uc6xkliMr8QOXgIXaZ35PYztxmQtQ/zXd9XG
RegGYx7SmFlqvxJrgk/2LHvuHmXzD+9vdLfvBxtPVvtiyaS7xh+rha9vMo2d
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
EQ==
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9260470552527562, 0.6851176381318906, 0.3707458712835443], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
+QZZ/gsoTXFk
           "]], 
          PolygonBox[CompressedData["
1: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
fwo5bw==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9516902929526494, 0.7492257323816236, 0.4502399081532132], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFl3m0VXUVx3/yHvdxh8fj3se5757z3r2gBZLVMhNMjUFAlHk0szmnUkAw
rWzuT9dq1dIlOSGgooKiIPBkElBmcFpJSCDDKhpWrcyBySyz+n78/lr9cdbe
53f2b//2bw/fvc+Z18ydPqdHCOEXZ4TQJPpaPoTm5hC2avHXhRC2tIawRh+u
L5nfq7XFSQgP50L4cyOEIWkIr2jPYNFrJfOcZF4oWMcBrW+TntlaHyz5jdIz
TnKHtD5W9DXJbZP8Wq33bPb6dskPyULYpG8310P4bSWEHVqbKPlvliy/T99e
LPisVdp7aeqzRos+I5mN4v+p9bQYQk3P++L7paYtXSGcqIbwRksI5+genfqe
6fmXvp2rfXdo/4om70fPszp7XzmEB+Wbbsn/p8n3fV7rhyum50v3MD37tD5U
tEezeXy4Tvp2i/9A+ybr21Hxk0SzjhDae+l80apooudRndHSbJ47vxDPvbMz
hFnSs0v3Pap73yh+h/jD4v8tvS9K53OS/3jqs84R/VTq9XNF+/X2XvyPHchs
lvxwnX2L6DD5OzTbHu6Ta7ad2JBTDD4r/vpaCH0l31syK2XXkYJteFb6Bsin
l0hmtmQOlH2PtfLVQflno3Q0ZMPV2rc17/eP6n27+I+ILlBetOrbaunpJT2b
tJ5pPU3t/5roXbJvs/iu1HFi7ybpWZSzPc9obUJiX3S3h7BUefmEvj2ltX6K
7YScY7Ij73jgg5fEbyg5nvku6+0v/YfxZck+KHU5HlO0fkzrW7Se13ub3tfo
vbfoevmhp2y4TfZsLjmHyeW+fBPfLvqPJsuvl0x3k+UHyEcP6l4DZd9C0amJ
962X/RvyzmNysNjl2FyQ2mbsJdYv69yXCvbbXvxa8h2xndjlYh5hP/GoKt8n
5by+B1tK9temkmuHej2Y9x2wY1rqvfgATEAOmQ7pmZyzHxZkXlsnm5fLljN6
OZ+G5p0zPyK3ROdp73qdNbbDa9O0770m+2dDD+fOBr3/WPy4xPdeJZ2jO+zX
yzPbSz5j82Kdf5fe14m/MLV/8BPxfCX6iFxmnfrBBs7n7Pu1907JPa33uXXH
4Y7EMSE2t8W8Iqe+18N+pZbx7fIm37E/+a217pLvQW1RY8dK9jHYAo6R28Tn
u+JPq4ZXir+i5n3c/b2oD7347e8N1/dp1VC16Jwhd7AZe2+VzCnp+bn2nxR9
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
8/8CUjqyVw==
           "]], 
          PolygonBox[CompressedData["
1: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
+kfQv8J/U3vTAw==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9773335306525426, 0.8133338266313566, 0.5297339450228821], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFmHmQFdUVxpt5LvMmmPe6X/T17ZmK0UqsyqaoDMO+L7LPgIC4i1lMooCA
GowmJiZRwTXbv4lJTAyLIKsSHZAdhMGYlJIKFalKNFFkFdw1+X5+1/KPV/31
6XPPvfcs3zkzZ82YNWlmQ5IkC7slSUnPf2RJ0lVOkl4hScbVk+QOfZxe6L3R
+FzpXKL3YXofq+9tev5Q8vMknyj5IL2PkryPnndKfr7kE/T+I+Er9H1i3fKr
hHs3Wt5DOuPrtnOZ5OP1G6hvIyUbKzxAeITwxcJDhEcLv9gknWqSDNb7cq07
osM/IDtv5klyWPjD5iTZrrs8rm9vS/a+fke5YEuSTJWdoVo3pu7vyB/Up53S
X6H396TbIL030JcfbqwkyUbhn+jbO7n3+p/s75L+Ssk+lGyudDZLfpfeR8h+
X9kfKvuDdcbvVrxfu95/rO/X6Hub7O6Rn/vqea5+O4QvCNa7Vzp98XPd+MZ4
74XCfSTvL/xT4Z7Ck+ve85vRT+BWyTvqPu+1kk+qW//rxEfnuaVie1/Uflu1
71fZV78XhEfqOUQ68yuO8ejC+w2XjWGF4zpEeEiM32DhflrzvNYOCr43d7xA
Z2jX+0uST9ZzlH5/Fx6r580Vx467TNf6+6Q/V/b6NfrMFyaO/93CvYQf0/OQ
fHuf8LIGx/f+xDEgFm/ljitxfFf4Nf0OgJudB+gfl2xxg+ULsK/9NimHBujZ
s2pMDl+vsz1Vcq5vzLz3Ya3dILxU+HXht2XzaenMFb5B+p0l5+4SvgsvlJ2t
mfPyRO77bmPfBp9hrfxwj3RuknyA9u4d8Vbp3KPv/9GaV4XfaXastpcc+82Z
739M3//NPSVfVkuSRQ3Wx+aximO3s+S821FyDs0R3lRyHswUXl9y7b2vPQ4K
H5K952V/jWSnKkZ/E14r3BRsf5XOfLfsPyf5ar2fJHmX8CrhbsG6b8nOr6RT
DT7LplQ1lDt2HzS7to4JP0TscuNuLa4hau1nifXQP6rvn5KdN4VPlk5DsA51
iV+478u5Y0xM/yv8XrP9f0D4YG6MjDth55eJY8h97xU+khvjg5Nl/7hwSfYb
hU8In9Tiu4J/If158tuWkvPy4rqf31L+TK07tjcIT6s7VrMK22P9z7X2tGAf
pvFO+IvzcCd8yN3Zh7OyF77BL/iKM5KHH525ZM6C6/AT+UBd4APyj9ymDvA1
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
           "]], 
          PolygonBox[CompressedData["
1:eJwllldwVVUUhvcklnshI/eeqJxzdIKO5cEawOSGlBtiQAOIKSjSS7BgIaHZ
GzakyljGN9uDM450SNEICYQYihARnYAjIzzoqIT0kIyOjn7L/2HP/P9Za6+9
9t5r/ftcW1ldUZXinNvIuIhRHjp3cphz4yPOlYx07kXfudZU59bhVOs5lx84
9zZ+J6LOFYDPx50bDc+OOdeV4dwdfNsEP4o9C5zGGGJ+PfN/YH4J/F3sP2Kf
BL6OsQHeDL8ePI1xBvw+3yrAS1h/HPgUOU0jt7PEOBuVTxn2DtbPxJ7F+p2s
/0G6cy34HmAk8R/iWxG2YvYzAz4IHw+/Ez4d/izxm8lvNfntJPawq52rS1NO
llsX8ceCc5jTw9zn8D+A/5v478K/INRa2cRLcl63M+ct/A+TXyb4efxb8F+D
/278V+C/Edw3wrl24r2A/Wvsa/lWg/2mQHfRyvybwR+ynzbiH2OUMDfOtxps
a/GJgcv41o4tB95HrpfxbY2TzwjLn/idxN9K/H3E/zhdZ2l3XBHqju2uk/h/
hv0f/Pvw34X/Efhf8F74Tvgh+BC8B74D3go/zTjO3G8ZCda7O1SuecQsJvYA
/t34b8e/Bd8r8anHdx05XgFOD7QX+3Y52A9ka4AH4AvsKd/pDu0ue4nXRbxt
xGsm3q/wP+CfwxvgU5nzHv6nmX8veBX2w6k68y+wn2Q0YWtkZGB/CftB7Oux
12H7Hd4B3wzfA38Zfgi+AV4Pv8RygtfCj8M7sJ+Hb4E3wqPYB+F18BPwCZxB
PmeRYL1P4anYB7DXYG+DO3g/fDf8KLwY/g6f2/GfYL7sP8+pZq12V7LeHvxf
wX8L/rmBzt56chy4HHtmVD1gvXAp9Vybpj2Pwj4fewH5ZOE/z1fPWO8k+FbI
3c3iWy54DPaZ4Dm+7tJ6YDY4JMZ6p5gRYg9nNKSpBnKs3+FNaerRcvheT2dj
Z3qO+Q+F6jXroYfB1+CzL6qeizJ3sa9atJr+iPzn+jo76wHrhRmmBxFpzgPg
Uub/HNWatnY2vC2qnCy3Jk+1b3fUif90Rk5EmnE/eBE5vJEiDXgQPJfxKrwJ
Pg88n/Ga9Q58AXh2qLNvhM8Bz2SsStGdzAIv96U1dmfLwEt9aU0uvBq8EJ/X
8d+PfyX4nkC1ans440ljTGvsDiZiHxtIS21PP2G/gL0QexH2+0Jprmmv7akI
3gfPi+mOp8D74fnwJHwqfABeAC+El8IfCaVlplGLwd3YEzGdcTG8F54bUw1P
gq9gD3tTtefN5LPfUy+axvRg+9JTL56D/2JaQf1mO+VkufXHdRa2h//3MlK1
ZzX7iScNMy2zHC3XXnjCaQ+2l4xRnD34iGkA9XBVIK2wmrTavDWQdpoG3wK+
MdDbYpp6A/iuQL1lb9BE8JO+7tLufCvrP+PrbqwmdsCf9nX3dmfb4U/5qg2r
iW3wzrh6xc7Mzm5MIO23N3A0eEqgt840aTK4O67eszO1s/3Kk9aYhv1G7MJA
b6tpQNJ625PWmGZcDK8OpVWmSUvBj4d6O+yNfgK8JNRbbZpWZW+TJ+01zewn
/rJQWmaauDzUG2RvkZ3pSvijod4qe5MeAy/0VTt2hwvsrfKk/abpg6atnt4K
eyP+hn/nSftMIyPke8yT1pnGpcAPenpL7A35E/9vPGmfvTn/wr/39K9gGjo8
kEabVptGnMK2yFftWk1Ugqt89YL9I9i/Qpmvt/g2eCn4Pwz4VLQ=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.8795256587277945, 0.6178606101146148], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1mPefVdUVxS9vJJnLG/Mez+TzObwfZj75QxKi0qTYUu2RSDQSW0SJwDgU
KSplYOgdhj4wtBhLNMYSjUG6gCIKIiDRaDQYpZP1nbXnh/fOuvuee+65Z6+9
9j7nh4MfuPH+QpZldfqrUXtznmW1xSzbq4ud+l3qlmXTde/nsl8U3iHbuXrb
z3TPsp/Jfl54u+xnZb8gfFr2+6tZ9l/h+6p+BnuzxhlQzrIvhfvqXb/Qs1nR
7zmjZ8/J/q2ePS18Rvib7h4X+zQ9u1u4Rv1bCh7jqxhnl+xdZJ8h+y81ZqFo
2/l6289qnAc1j6/V/wG1v1Kfy4oe76hsH+v3E40zWPdOCN8Z7Sf6XSX7rbo+
InyL2t9X/e6hav+t9nP9eqtPf33XF8J9hO+tGv9O7a/1OyZ8h9oP1R7W78fq
c3XZY/YU7l12nyuF+5T9bt57VdnP0J/7x6PP7VXP+7aY10cxTq+y7XzLXbp3
Uvg34YdT+vWTfVDZ63CN8Byt1zs1nvPsgn3Ot7ysPh/XZdkVWqPZWqs5+jXK
vla2ucKPZ15r/MZ8WO8useZw57vBn4Xqc1DtCPVZIPyucH/hucL7auy7buqb
Fz2PORr/rtzP1MlWLLrffPU/UOM5V2TrXvRYZbWlou8NLPs7+cYvk+f8SkXv
VTtPvybZr1Of0+ozQPinsp0V3qZnv4F33Tw3ruHeVL3zD1Xfeyi4879Yt2vL
ttN/WcHjsyb76z3+w+pf2yPLNsq+u2K+sjb4FN7VBPdYn6fU5zHZZwnvka2X
8Mzg+tXCm3S/Xb8Jwt/Rc12L7jdPffbX+Hvh2n+Ce/cEL+9WW2jIssuLLJrX
iLXiuUv19tEFxcVQjT1f6/6h7t8oPFv4beEhwnOFDwkPzu0b/FLT4HG6VOxj
xmHuj1S9bsTurbn9h+9uE/5e0XO9Kfc3MH+umRtcyBrMgYvdzQMwfLwlNz+w
MRZ8gLP34FPN5wPZujaYpzWaT7Psi3V/FL6u9beyPlNkXyQ8MjgwsZRlN+j+
Dbnb/uHTCbJfr+traz0v+Pm0+vygaB/hK3wGn+kHL+HDqZLnAMfvyM1R+MnY
2Bj/9tx8xQ+XNZjDBc15cu5xGZNnsHeMW7YficcuDf72S+iq+i7Qtx9W35nC
q+v8vYuE19WZ51OFV9Z5TOJgTZ3jd4Jwq/Anenac8HLhE8JPCq8QPik8WniZ
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
NGZS1BloL+9aGBoOv+Hq/wHEcqVd
           "]], 
          PolygonBox[CompressedData["
1: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
vyZxD6heUDVqT+IeRb2KctxEdP8CmiI2oQ==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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

           "]], 
          PolygonBox[CompressedData["
1:eJwlk1dr1FEQxW/WCJu3/edp2AfFL+OTJdnN1iQqCoIasxpdEwkqmxjXGGPs
HQsWLFiwYMGCBQsWLFiwYPkQmpjmbzgPB86ZmTt3Zu7cGQtLqfZYCGEmqAXf
LYSNdSF0wr/Bf4Mqugv9Cz48LYSGRAipeAjlZAibsDXB5+Dvg+8Hregceh/8
NFjE+Tb0Kfhe0II/i94DPwKWwhcQcxS+GWTwz8VWhR83+Zahj3ltII1/NroX
fsaUezExZ+HjEfWgc9Q4Sa2fsVXwrcH2CX7ClMtrOgmP1YdQQLcQXzs9hBp0
Ht2MnoKeClrh87lziH4Pm7ifOWSK8VjveQD/BWzL8S0h/0X4btCML4Ntl8eT
vxiU03PfwFZCl4i/CZ+MNJsC/hr8MVBMaGb95L9CTDv+NuKvwneCYlw974CH
es3ez/jZg9jmxdXTAfhjUOZsB/qRqWfv3WMGyX8H2wp8HcTchT8xxXahn8Lv
m3wrsd2DPzf5VqGfwUeovwGeJuco839givU7H8LfgNXo9ei38OumXnwG1+Db
QJ5aUuhB+HnT2/pMz8Ffg+465XgF3w4KxKfRQ/C/kXaxkftHuP+96a4ytnfw
rSBHfCN6AP7CVLvnfAnfArJx9dAPHyNHU0K2dUn15L35jnYndYff5TvZiQ7M
M5/Qm/ShxyLVlsU2QewP09/yP/XTtKO+q95DL/GXTbvjb3wJ/sW0u/4nv8L/
RNp9/4P+F2+bdsff7BZ8NNLsMvjH8U9E2j2vyWsbjvS3Uuh/+HtMf3kWtopp
53z3fGerScV4rP/xta4jzc5n4rP5YJqt/7GPpjv9bp/xhqR69t79TSvo/0DZ
oro=
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwNzjdOQ1EUBND7bVgANCCEQFTsh5KMTeigIkdnGydyXgZrA0fMKUaaO0dP
eguZg6X9JCKy8j0RkZuOyMvyVMThTERnLuLHfqQX7EVZYcfuLvtlJ3rJXpZV
durusQ470yv2qqyxc3efddmFXrPfyjq7dA9Yj13pdXtDNti1e8j67EZv2luy
yXLuPzZgeb1tv5MtVnCP2JAV9Xv7g2RYyR3z3rKy/mh/kiyruBM2YlX92f4i
26zmTrGY9Hf91f4mO6zuTrOENfR3+4fssqZ7jKVYS/+0f8kea7vHWZotzkb8
Azn8QKg=
           "]], 
          LineBox[CompressedData["
1:eJwVztdRAmEYhtHPErxzvLMlZ2jAArQVGkDBnAUzBlRMmDEiZq3E812ceXee
3f13B4ZGBod7IqJAszfity/ijy9++OZI/7CfdHnnjUO9Y1954oVnDvQH+8gd
97Rp6Df2lkuuuWJfb9kLTjnnjD392J7kt2jmv7CrN/I7eZ3v57Ps6PVcNtlm
i7q+bjeoscZq3tdXbJVFllnKd/R5u8AMc8zmmfqUnWacSSbyXL1sK5QYY5Ri
f8Q/knFIzw==
           "]]}, "700000000000000"], 
        Annotation[#, 700000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwV0EdOAgAQhtHxCrrQaILhPiqKBTuIDSyAgr1exYYixV5O4llc+lx8meT9
u0nmy+lSV0Rk1OmJSAxG1PojfhIRVXemN+K7O+KyL6Jt32U7muZf/IK3eIWV
leGf/Jw3eYlta4p/8DP+yLfYpib5Oz/lDb7Biprgb/yEP/ACW9c4f+XH/J6v
sVWl+Qs/4nW+wpY1xp/5Ib/jebakUf7ED/gtz7GsUrzD9/kNX2QLGuFtvsev
+Tyb0zBv8Rq/4rP/P9MQb/Iq/x2I+AM2TzT7
           "]], 
          LineBox[CompressedData["
1:eJwNzcs2ggEUhuH9d3JqxITFxC1ZqxtwAbo040jOp4qQO3AOIUKl8gz2etb7
TfbyanFlLYmIglufi7idjyjNRtxwg3fsLUY8cFPfs8xH9u0tbuknVvjMgf2V
2/qFO2zzz/7OXf3GPX5waP/kvu7wgF8c2b95qLs84g/H9h6P9S9P2Gcs+cFT
PWCVQyb2MWt6xDpjISJlT/FMJzxnmml7lg2d4QVzzNgneakneMUpZu0zbOpp
XjPPnP0fMItCiw==
           "]]}, "650000000000000"], 
        Annotation[#, 650000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwNzskyQ1EYReHfI2BAKaXKxFuQvkca0uiJiYkE76MbqDLxZKRPmPoGq+7e
e91T52x3+43eUkR08bUcUV2PqGFvLWJ3wxfPqxF12/tKRMKesA22Ir79n5Sb
XAtJLqUPuR8uLbftHaS4jD7iBlxWPrGfIs3l9DE35PLymf0cGa6gF/HiHRe2
D+/I2ku2iTMjZ8ryJXeFHFfRp9yY25ev7TfIcwf6jJtwh3LXfosCV9Xn3JSr
ya/uvOM+3Vnk67YG3uxHvvdcDyXuWF84O3O2KfftDyhzLf2Xm3Nt+dH+hArX
0f+4BbezGfEPcLY6aw==
           "]], 
          LineBox[CompressedData["
1:eJwNzckuw1EUwOFjpabyrxpaYiYp2lIzRWKeh1rYewCexTM1hpi2JCQ8im/x
5Xfvyc09wzd3tduGiLjmI4mo5SKuuOAvE3Gprf0R5/rrfqJnnPLu/ZEes88h
B7yZ7+oeW+ywzav5hm6yxjpVXsxXdJUlfuxZ1hZ7F/XbfU4XmOfZ+1mtUGKG
Mk/m01qkwBSTPJqP6wQjjDFKs/+bGHL+smNAP3VQG81T5J376CFHLw/+69Ju
MmTppG7eoQlttJPmPh/xDw+QJBE=
           "]]}, "600000000000000"], 
        Annotation[#, 600000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwV0LkuRgEQxfHRSOw++54otDqVaCRCRIUnEEvsEm+hkdg/+y4U1jexE4mS
6MTW+t3inzN35syZe29932T3REZETOMqFdFUGlGM5+qIolo1usoiTooiDvUr
yiOekpn6kRaap9DJc8xzoP+r/4fRioiGmogx2mJvhA7j0p0hekIz7Q6o+zGI
C709Gft4LY7YpW91ETu0XEYZHmSnPN/TfPsF6HD/yP1t/VKeu+Td1Lc01zwP
7TyHPFv6JTznbm2oN7HmVlNVxBTfJGb1Kvk/eL5lfCHPTppvPfHjzCxNV/Gi
38a/L38l+Ye8N3YK1Nc0W2YOWnn2eJb1f/R7ffOu52b+HnU3TuUumi8lyG30
Xot03P5M8h9kvPMc4VNGlt058wWzeVSZ/wMzKkKV
           "]], 
          LineBox[CompressedData["
1:eJwV0Mkuw3EUxfErQVkiCB2kK+Up2JjHPoKVIPUYtmJWLTs1T1XT2sZaEBIe
whP4WHxzzj33/u79t9m55XyhLiLm8dwS0dUZUWmPeGuNKHZEDPHDuGqLOKLv
8pJ8hB/FtXytOyLVFXGYiUjTeTvWZblURL35DT4rX5Av4spcY09EAg36m/q9
+jks6W+p+7xt1Nvmb9w4dutTXXZ7jB9HVX5Cv+T78gl+Eik+iVO+4tYZvTXb
bXcSL37najLilVb1im7U9HfpHZ2SJezcUQ/4pkEUvNtTl3Bv5tzMt5kVd6b5
GTzIL+iP/Ffez8+iSZ1WX/7/j3g0l7IvjQxqsg/fckf37T9AGU/m8rJm7zPe
/wHyRTu4
           "]]}, "550000000000000"], 
        Annotation[#, 550000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwN0EtvjGEYxvFrYqsOpQ5DO1NBhH4Dp71DSWlRh+iUhUQ76Yx21PEDWIll
F6UhETtJDyux0ErYNBFi59SiDjv2/BZX/s91X/f9Pvf7tFeqXYOFJPfoTnPS
uSkZWJss25BMbU7G1iWX+aPqVTyCg1hsS+ZXJ8f4Gt+FdTyOQ3gCh7Gk7wp2
lJIetY98N57cmHxx36X1yQLeLyYPqMw/W5Ocki+q1/gJ9ffmyr5RoufyoVYZ
PZI9pK96B/R+w16zve74ZOY0fsaGHcp4Fc+ojeA5vIZncRTb5W/8Uz9/k6/g
LbyAN3DcWzR5l+V0m9+i/6Lsn3cq2CW0X7aPrtvjrmzWbnP0ghbt/RJn8bwd
l/Q07PxErW52Tn0r3+R7ffIf8irf77xTrYKP3fnWjiv4D84H7RE8hLvddwD3
YifuwcNYkL8zs8Tvakm+Ywf+9T/zsj/4010t3nZSfaVvb3PvK/s8tdsv2Sg/
6TxFr9Vn9P1W3262x3lafYZ26Ftl/j+UQVaK
           "]], 
          LineBox[CompressedData["
1:eJwVz01LFFAUxvHTKjWRfCkjJ0NopUU6Bur0Mr5DCC38CH6ACWpV4t6BCTTH
mZrUplpoKJIu1HUuBcVVhCRGJbr1E/SbxcP/Puc+59xz2yaej2cuRUSJMtci
3rdGtOETTNNGU8TJ9YhvOIa/GyMmWyKKfNJ9ATtvR+TU1pxH9A7Tqewqv44n
el67n+dfYR4f3oxYUE9hHz1qjig3RPQ499JV/lB2zht5unwrooqq6bGZH2Vn
vFMntyi3RFf4A6zBHzK79JSmZPtvmFOZR1vePzNzQG2PzzrvqG3KDun9h9v8
Bh7b8aXMW75Lbhbv+29WbcV5UH6A/sou86v4S88oJsxvoRn1F/Il9aS/PaBu
WrJXo9wivjGj1l9yuMAfq3/ALrl3+jL+XcRtc3aoWm4ff5r9vbI3DdMnvtee
ZezBaZkvzv3yafoj85n/ikfm9bkfrfTgCF54p9Ob5/URdxL+6pyyV8kuz/xl
Ts9dtTzeq+ymnjKriFnzq2SnscDXqc9ju1wH1bi78M5/d95YDg==
           "]]}, 
         "500000000000000"], Annotation[#, 500000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwV0klsjlEUgOFT00ZCWlNrqI4LS0mLUgmRWBFSiQ0rOyltJVWVGGKl1bld
0C6lrWrQRIWEhWGD+ptYUEQRQU0NNSTm4fkWb95z7r3nnP/e78/dUVlWkRYR
73EmPaJoTsT52RGPF0aMYl9GxNq5EbX8MyviFzYvitiE6lkR8xdH/LCWxd85
NzPiK39B6fyIpgUR5/Qb5QEe0OssN2ZHTDLrjhkpDCeznKlFDfYiR68OZ6vF
6fMiMtCmpsnsdm4zf6a1Vl5i1jd+zjfUnFDThU5cl4+be40vcClW612KVbhg
fb9+tSjRbwX61A1b7+FT6E1yHPYOW/z2m/bK+BZf0u8i3rrDG6zTs965v+I6
/s1/8Arr1YzxawyqaZCHucc4jT97t08oV5eyNiHO1u8jf8Ay92vwO04n34j7
+aw+Z1Dn/F/5bev/eIhbuJL3oArN8gpu4t3c55s3m9vNU937oLUDyb633MWN
zpVzA2eY0Wj9pbxAzQvO5y5zC7mFW3HX+ozk+4jbkeeuuchP7m3OSUw4s93e
NqT0Xur/s0G8EcftTVOf4kp+k7wtruAy7mMEh7xRlf334neYIr7HR60fFvfo
+0zey/3czUf0/8Ftfks7OrDcnK1qhuwtE497h2IuwnRxg16d9gu9fb377/T/
KxA/wkM0ymuceeleOfoVqxkxY1D9A+eL3a3E/BLfsdnaoL0xs1bKnzr/BGvl
a9CSzE3q1V3Vu44ny/PFeThqTqZe/wHv1Jmy
           "]], 
          LineBox[CompressedData["
1:eJwV0d1PznEYx/HLQW00Dz0oFXLfrbIafwJb+AdS3Cil6MGBDsQMB8JmM0dO
OcpmIxWZM7NqpgNHGum+5am0ZlbZnHbg9Tt47/O9ru/18Pn+fqnO/qYLGyLi
BT4URnwsjzhZHNFPT9FZ+hmf0CpuoT+LIprpcRzDXXGW5pC3IyIfnXKZyogT
mKyIWNA7QRfpFH1Nq0rt3R5RtDNinL6RS5VFpFGNdfGS2ixfT3ZH/HI+Z8eK
2Rfdr9Ju8Yz8U/c5daVmZZ3/6E1XRTx2NyeeFD9ynqJH7SpTV6B/Dw8Tcu18
XiuJ2Mj7JhTgjFwHWu1oS74H2nEa9/TO06/YonYrtqHLrO/JN8IPLKu7Y8Yl
fi9j0O58OzO7nNWW83STHubxCBrxio9D9LreEm+4r78Hg/LV8jfoPvn9WBB3
J/d2ram/Ykevc4P3PXM3jC++S0US2zWCYUzbOUqb+WnBO/EBcw5i1Yw1ZMxr
FKf4TaNS3UPz6ugDWkufmzGGt+5zfA3J/9ZzloeX8gPeOU5rzavDLC//xN/o
qNoxjKBP/VX3f+0879xrxqL8UvLfccvsvfQ27XP3nt969YXeNWfWZn01PPwH
DLVs7g==
           "]]}, "450000000000000"], 
        Annotation[#, 450000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwV0ttPz3Ecx/E3LiSdz+m0RhIlRnXr0GFzg1xYF5iYFZXObG6MOcvhD3DT
ZjL+ABVXZjNCYQ0pF+mWO4ex8ejiudfnfXp93p/v71faerK5a0lEzKM6N6IC
tzMiduVFdOVHdGJDccSlrIj1tAqVuCg+XhBxgVaI63IiUs21ZEekyXWLO8ye
QJ7cF73vMiNq5N/TrfSBux7iq/4n6gv0hfxb9Q/0I5LNDvFPojfobHrEdfkh
1MnV4pnzczNr6Gq02OMyvYI9PLfx3k2302U8luIzn4LCiEKcLoo4hSke06si
vtNRvd/oLfvdxGZen8xNyrU5v6FzenLcP0uzaefivu4Zdx7DJnEV/0qc4bFg
Zi2PcqzBOb1ltN2+nfrb1dN99wxk4ry4gd5Sr6dNaESveIR3H53mXS13h1cH
jza5Bm85araeNqERrYv7+i12Ou/AH71nkaS/325P1e95+32MYIzvMbW0Ejsh
FYPm+/FbfoDm68nDIL8BvObRbK99mLPPVb416rW45pxrrkptxps30n/6K+kG
pKjtt8+UuVH6COXype5dR1/pXU+3iCtomf7HvnsD73oM858326p2GBP6D7jn
IDLVs5G1iD1/mc2mvd7QhySeKUjGUbUZuSM0wXddjkO8atXqkIBErEC3OxP1
Tfov3XVPj7gE4/qLxMUoQLe9CulhvSvN7bV3jzt+irvpD/qSTuCv+WF7/gek
B3ZU
           "]], 
          LineBox[CompressedData["
1:eJwV0nloz3Ecx/GPZiZWbOww97VIzhg2V/5xlbOMUPKnMEeRWxiZctVGYTNz
JP/4A+XYtAObieIPd9jwxxqj2UYKj+8fz9/r83l/3sfr8/t8+6/KWbiuXQgh
1U9TzxBaeoXQhlZMT40OQnjeI4TaPiGsTAwhq3cIS7uFkEknYxK2il9LDuGj
mg94j9ikEEagOCGEmWpvdw9hBr1DZ9FbdA4tpbPpXfpJXT3qkK3vYkwwfzx2
m5mYFsJIPTeatdfMLdbHU0I4gS5imeq60pdyM8Tq5Dfq/ZmHeuu/+v1DpnsO
68uPmc32M2kb/YWfaEULss3I1e8Ahpp1Tq9inEURCrFPzilagJPIRz+5483/
Yu5j61KUoS76j/BDTQEP98zNp2U0Qfww30X2Nfbp/K7mIU9sibNR6pvoAPqd
5tJW2obh1o3qStWU4a3YO6SJv6GvUcJLe56GiH2Ve06sGF+sP+OQmSX2F/Ab
v5Andp7W+F+rcdDdDuCU+CBvMhjpuCznqfMnGBi9lX67EMv7M2cdaK25vZ2t
dvdF7rVdrBOv8eiM/eId+IvDRV7z1F+h/9QFPdbL76v+kRlr5JaLr6WFvIzl
KQPj8EpelvwX4tf1eElv0HjxNHN7Yo/veTea1c+TOx8r9Eu0j4ve23obtiNX
3Wh6iZdkPvfYJ9FUJPqGUmg3uk3tAvPvmzefPqAd1TVYx0XfLDZE/73+31CK
uxgTfRu0KvJJj+p/ht9K+9N0nvq50Telf7LzKZiK5VgWva38o+50DEfwx75C
z5/ynzuPsa5CJdaJJfC7w3pndCfnF6NvSXySGZMxEVnIxFV3jnHe6r9qQws2
6V+t9iFy1A3wJkW8jqMZ2Cw2Tc1N3svlV6DBmx70bv8ByrGtNg==
           "]]}, 
         "400000000000000"], Annotation[#, 400000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          LineBox[CompressedData["
1:eJwV02tMlnUYx/E/JBpbpQYqgjyPlJhuCnJw0xUFOi0T2HC6Jhg6Nw+gk4Gi
5qpZUO/zXB6C9I36SuZpmadWzNzcDM+Wm/NQKPONRsXBw+d+8X1+93X9r+t3
Xf/72Z21uG7OqoQQwkd+CoaF8MrwEL5+PYTPPXeNAC1PCeEb+crUEB6KD8dC
eECT5AYgRf1RuSP4Ss8iZ9dwFd3O2mmr/NzMEObhxqgQbqLR2RVna+h1cWGa
uWYNSQ+hgSbybuPZrLda3VC57z23YIyegyNDOMUvx14n6RmcRrb4nJqVPKep
q+RzDh+jGsOc1/NtwHw1lajCcT2T1R+jR5Fjn4moj/Z0PsHzJT0f2mOyOen2
zECzeL64CpUoFXebM5t22nsHrziPsowQYnSpXAy3eBXb5W+1JbSZNuEv9fdx
D93y7fqK1O+l+9CCH9CKE5ge3RMlqOVZg3/NLudVhnZUoNjsn3meRRbfE3b9
CT9ioviA9/lmdH/9+z3vUTeYz2vu+Bn9QvwpTeBVTxfYqQodeKzvDN2tJln9
J87zvK98FOCis9+xXn67mkFqBuKZXKbefvOeYhsa1RTFnXnucKcL9hnHo8dz
L/rwPwboT8I69c/t9AxPsZFfovxLmONuFVirZhTPTGQgwVk6zzr5R+Yssccm
mi0+bL8jKOTTJrfG2STvOQ+5uM/vHt7zzu7Qd+ldutrsh867sFX/FmzGP9Fs
uUxkIG73GO4ODWEXutyvQF2//j/sdRO38CfWy8X5H6cxuo4W6l2iZ2nU5/kQ
zafJ5qTy/47XTpy29xvu8G307Tnrob3ow4Xom9TTEr1L8Xn3/A0V0f/sLl9i
IzrFr/JfYPZM3jPwSP0s8TIeWfwX2alX3Up1d+RX0Nt0ofwT+WXi5XjbrHei
/9C9Upz30FTaR3eZtRtx/qOj7wS/4hds0JvtbCzGYBzewhazS/2Hm6Nvi6ZG
vtE3KZ5qzhSM8F9/YIdc9bNoAS3EJOQjL/rf3GMKLdfXrKcJOeL31Q/Xf0l8
GePNSLPLSKywd6ndEuQS8bK7JqNWvpfW0NnO/+PdiBecAsSE
           "]], 
          LineBox[CompressedData["
1:eJwV0mtsz3cUx/EjZGOSJaZaFNsyM5esakvmGrNMTCmxuuzJsLaqwtQWLHFf
ZuYWd+YZiZnswer2gF5QyTbLEjaXSsok6DbVe2vUtXj9H7z7+Z5zPuec7/f3
7+s5C7IK2kTENH+GdInYkRyx+ZWIb5xbUyJa6NTOEbvkZyZF3BPfRRLPA9qF
rudbi2q+K3IVON4j4hjadY2YIV/RLWIT78ieEe+jSK0YeXJX+f/qHnEef6KG
/wL9jD5US+bZpz/beYBcsV0leE9+v/wMc6bjUyzqFbEQye661J2XodH5F7nR
/OfEfyAXs9Bq3ny1AozRPxYZ+Ai33KEKRShBMR6ZcSg14pKZhfQiPUhb6O90
uTnLcFu8gFbRL2iavkr3X+X8NVbivtoK+oCedpcy5IjLxYfNukyP0Md6b9td
jf3ePcHd3pLL4+9LD8j9iJMo1l+KEgxTa9UznJ4QN5j3lZ7FeOrd2/wO2zHO
vPHIRKHv2Ye/iP9n5x/MTOXNcffNzl3VHjlny5WbXUcv0W/NWY3ravmJfWaV
4gO5Udgi9495efyV9KTaKdzgv4lwt5/MnyjXj/eJXH96i7cKazBH78hXfQvn
Mr5yd0zy/zXW/IzEO/CfWj7fv7TVjGo6VzzI7Hk0k2cCxmO+uE69FinmfC6u
SezR95r6IHGuPbMwxF3ekBtMr9CrqMA1/I1U999Du9O9dCBfge98xN7DOISX
1fr7PQcgxY7huNEp4qi4wTdsRD2a0YQX+O/Q9nS3mS/Sa978TK6H81PaRm+g
3l1n27eTbxd2oB3P97QtzVd7B+/iY3GT+zTjDrLF3/E1mbGGrsNaZIk30I1Y
j2Zxiv1z+MfZmYH/9WeJN5q7AWdRk/g/46uni2ktXSTfgZ7SU4ZCfZN913ve
8JL8XdqRttAldi1FqfMJvM2bhuu+VR+9lXSEb9cNb4p7o5PeozzTzPwEX9qX
7jeoM+dDtVo6OvHuxDtQj0Y0YArfUDqVbtW7BZO8dbBcrh0TaYH4V/nfcAbr
zErztnQMxGX1dPtXYCV68iynq/U/B71Y3io=
           "]]}, "350000000000000"], 
        Annotation[#, 350000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          
          LineBox[{4511, 6591, 4510, 5889, 5888, 6133, 6132, 4700, 5606, 5607,
            5204, 5605, 5604, 5508, 7449, 4871, 6525, 4872, 6526, 6915, 7594, 
           5156, 7273, 7274, 7275, 5753, 7272, 7271, 7270, 5155, 7593, 4917, 
           6696, 5006, 6695, 7532, 7531, 5652, 7291, 7290, 6101, 6935, 6934, 
           6080, 5587, 4878, 6858, 4877, 6671, 6016, 6669, 6015}], 
          
          LineBox[{4657, 7256, 6067, 6187, 6186, 4720, 7406, 7407, 7402, 7404,
            7403, 7469, 4683, 7296, 7627, 7626, 5169, 7676, 7677, 7673, 7675, 
           7674, 5564, 7646, 7647, 7645, 7649, 7648, 5172, 8002, 5171, 7628, 
           4658, 5835, 4659, 7585, 5481, 5154, 7605, 7606, 7977, 7976, 7975, 
           5718, 6931, 5719, 5113, 5345, 5112, 6930, 6927, 7609, 7608, 6928, 
           6929}], 
          
          LineBox[{4665, 7269, 7458, 7457, 4896, 6581, 6582, 6109, 6586, 7878,
            4681, 6587, 4682, 6111, 6110, 6584, 6583, 6871, 7636, 7637, 7635, 
           7639, 7638, 5177, 5873, 5176, 5762, 5686, 5740, 4653, 6062, 5407, 
           7577, 7578, 7576, 5132, 5363, 5364, 5362, 5350, 5738, 6924, 5739, 
           5144, 5356, 5143, 7104, 6075, 7265, 7266, 7263, 7264}], 
          LineBox[{4675, 7874, 4921, 5438, 7770, 5323, 7768, 5322, 7769, 5645,
            7306, 7305, 7304, 5186, 7656, 5482, 7692, 5211, 7325, 7326, 7327, 
           5778, 7324, 7323, 7322, 7811, 7810, 7112, 6022, 6860, 4883, 5471, 
           4884, 5573}], 
          
          LineBox[{4677, 7876, 4923, 4918, 7694, 5213, 7331, 7332, 7333, 5780,
            7336, 7335, 7334, 5214, 7695, 5483, 7696, 5216, 7340, 7341, 7342, 
           5782, 7339, 7338, 7337, 7813, 7812, 4914, 6024, 6559, 4885, 6861, 
           4886, 4957}], 
          
          LineBox[{4698, 5774, 4699, 7317, 7316, 7687, 7686, 6979, 6519, 7995,
            4861, 7446, 4860, 7888, 7214, 7215, 6856, 5094, 6855, 5095, 6857, 
           7516, 6684, 7765, 7766, 7767, 7764, 7150}], 
          
          LineBox[{4702, 5785, 4703, 7348, 7347, 7702, 7701, 6984, 6545, 7996,
            4900, 7453, 4899, 7889, 6566, 4915, 6543, 4897, 6542, 4898, 6544, 
           7367, 6169, 7427, 7428, 7429, 6219, 5938}], 
          
          LineBox[{4951, 6608, 6607, 4512, 7844, 6606, 5890, 6121, 7879, 6120,
            4688, 7045, 5275, 7044, 5276, 7046, 5207, 7043, 5274, 7731, 5273, 
           7041, 7988, 7040, 6556, 7999, 4904, 6555, 4905, 6557, 6926, 7607, 
           5162, 7287, 7288, 7289, 5643, 4998, 7527, 4999, 7528, 4920, 7084, 
           5326, 7081, 7083, 7082, 5653, 6104, 6103, 6102, 6937, 6936, 6083, 
           5588, 4882, 6859, 4880, 6019, 7859, 6018}], 
          
          LineBox[{4952, 6610, 6609, 6596, 7986, 6597, 6595, 6599, 7881, 6598,
            4689, 5614, 7880, 5615, 5218, 5613, 5612, 4633, 6529, 4887, 7992, 
           4888, 6530, 6916, 7595, 5158, 7280, 7281, 7282, 5756, 7279, 7278, 
           7277, 5360, 7799, 4922, 6921, 5159, 6096, 7285, 7286, 5758, 6099, 
           6098, 6097, 6923, 6922, 6076, 5598, 4908, 6563, 4906, 6561, 6560}], 
          
          LineBox[{4966, 4910, 6890, 4909, 6891, 6055, 7247, 7248, 6535, 6536,
            6534, 6538, 6537, 7361, 7360, 7362, 6165, 6166, 6217, 6216, 5931, 
           5932, 4919, 6577, 6576, 7426, 4754, 7886, 6168, 7363, 6558, 4912, 
           7455, 4911, 7454, 7252, 7253, 6540, 4894, 6539, 4895, 6541, 6963, 
           7657, 7658, 7309, 7310, 4691, 5688, 5825}], 
          LineBox[{4986, 4875, 6664, 4874, 6878, 6038, 7231, 7232, 6551, 6552,
            6549, 6554, 6553, 7377, 7376, 6183, 7890, 4903, 6548, 4902, 6547, 
           4916, 6522, 4865, 6523, 4866, 6192, 7383, 6524, 4868, 7448, 4867, 
           7447, 7229, 7230, 6520, 4863, 7993, 4864, 6521, 6962, 7654, 7655, 
           7301, 7302, 4687, 5642, 5817}], 
          
          LineBox[{5433, 5434, 4624, 5340, 7779, 5341, 7780, 5339, 7138, 5405,
            7136, 5404, 7137, 4701, 5618, 5619, 5222, 5617, 5616, 4634, 7452, 
           4892, 6531, 4893, 7994, 6532, 6938, 7617, 5167, 7292, 7293, 7294, 
           5679, 7776, 5327, 7775, 5328, 7777, 5464, 7105, 5361, 6089, 6090, 
           6091, 5757, 7284, 7283, 6092, 6918, 6917, 6084, 5595, 4890, 6869, 
           4889, 6029, 6028}], 
          
          LineBox[{6568, 6567, 7800, 7801, 7106, 7107, 5163, 6044, 5164, 5583,
            6933, 5582, 7913, 7586, 7588, 7587, 5152, 5476, 7584, 4636, 5831, 
           5761, 7629, 5178, 8003, 5179, 7630, 7631, 6951, 6953, 6952, 4680, 
           6107, 6108, 6106, 6945, 7877, 4679, 7295, 6946, 6947, 6685, 6689, 
           6688, 4862, 7525, 7526, 7522, 7524, 7523}], 
          
          LineBox[{6575, 6574, 7250, 7249, 6057, 6892, 5121, 5125, 5122, 5717,
            6919, 5716, 4668, 7618, 7620, 7619, 5149, 6058, 4652, 5737, 4651, 
           7632, 5180, 8004, 5181, 7633, 7634, 6956, 6958, 6957, 5577, 5838, 
           5839, 5396, 5841, 5840, 5203, 7684, 7685, 7297, 7298, 4685, 6115, 
           4684, 6114, 6113, 6589, 6588, 5466, 7550, 7551, 7547, 7549, 
           7548}]}, "300000000000000"], 
        Annotation[#, 300000000000000, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5]], 
          
          LineBox[{4509, 5578, 4507, 5883, 6687, 6686, 7521, 7520, 7517, 7519,
            7893, 5175, 7518, 5173, 7978, 5174, 8006}], 
          
          LineBox[{4577, 4625, 7465, 7466, 8001, 4928, 7467, 4931, 7468, 4929,
            6590, 4930}], 
          
          LineBox[{4690, 7308, 7307, 7960, 4943, 7478, 6983, 7697, 7698, 7343,
            7344, 5783, 5219, 5221, 5220, 7223}], 
          LineBox[{4737, 6592, 4941, 6119, 6980, 7690, 7691, 7320, 7321, 5776,
            5206, 5209, 7042, 5208, 7217}], 
          
          LineBox[{4934, 5170, 4932, 7405, 4933, 7408, 7411, 7412, 7409, 7410,
            6655, 7843, 4506, 6656, 5597}], 
          
          LineBox[{5343, 5721, 5109, 7591, 7592, 7589, 7590, 4673, 7972, 7971,
            6085, 6087, 6086, 5161, 6925}], 
          
          LineBox[{5353, 5743, 5135, 7598, 7599, 7596, 7597, 4678, 7974, 7973,
            6093, 6095, 6094, 5145, 6908}], 
          
          LineBox[{5603, 5596, 6579, 6580, 8000, 4924, 4926, 6585, 4925, 6112,
            4927, 8005}], 
          
          LineBox[{6100, 5759, 5160, 7603, 7604, 7601, 7602, 4671, 7600, 7871,
            7872, 7873, 6914, 6079, 5106, 7098}], 
          
          LineBox[{6105, 5760, 5168, 7624, 7625, 7622, 7623, 4670, 7621, 4669,
            7869, 7870, 6920, 6078, 5138, 7579}], 
          
          LineBox[{6565, 5372, 5373, 5223, 5784, 7346, 7345, 7700, 7699, 6143,
            6142, 4950, 6605, 6904, 6903}], 
          
          LineBox[{6879, 6880, 6600, 4947, 6134, 6135, 7688, 7689, 7318, 7319,
            5775, 5205, 5371, 5370, 7216}]}, "250000000000000"], 
        Annotation[#, 250000000000000, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {
       FormBox["\[Alpha]", TraditionalForm], 
       FormBox["\[Phi]", TraditionalForm]}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotLabel -> FormBox["\"s2\"", TraditionalForm], PlotRange -> 
     NCache[{{0, 2 Pi}, {Rational[-1, 6] Pi, Rational[1, 6] Pi}}, {{
        0, 6.283185307179586}, {-0.5235987755982988, 0.5235987755982988}}], 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.2630675684365834, 
              0.393926426909213, 0.6477616910755305}}, {{0.42094789387692894`,
               0.45164302979700377`, 0.5716152956122846}}, {{
              0.5814745618782604, 0.5080581527367688, 
              0.47724818087667764`}}, {{0.7420012298795917, 
              0.5644732756765338, 0.38288106614107076`}}, {{0.900403817552863,
               0.6210095438821577, 0.2912518344138755}}, {{0.9260470552527562,
               0.6851176381318907, 0.3707458712835444}}, {{0.9516902929526494,
               0.7492257323816237, 0.4502399081532133}}, {{0.9773335306525426,
               0.8133338266313566, 0.5297339450228821}}, {{1., 
              0.8795256587277945, 0.6178606101146148}}, {{1., 0.95, 0.75}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.04545454545456}, {
                    Rational[
                    15, 2], -92.04545454545456}}, {{-7.5, \
-92.04545454545456}, {7.5, -92.04545454545456}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.5909090909091}, {
                    Rational[
                    15, 2], -71.5909090909091}}, {{-7.5, -71.5909090909091}, {
                  7.5, -71.5909090909091}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.136363636363626`}, {
                    Rational[
                    15, 2], -51.136363636363626`}}, {{-7.5, \
-51.136363636363626`}, {7.5, -51.136363636363626`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -30.681818181818187`}, {
                    Rational[
                    15, 2], -30.681818181818187`}}, {{-7.5, \
-30.681818181818187`}, {7.5, -30.681818181818187`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.22727272727272}, {
                    Rational[
                    15, 2], -10.22727272727272}}, {{-7.5, \
-10.22727272727272}, {7.5, -10.22727272727272}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.227272727272748`}, {
                    Rational[15, 2], 10.227272727272748`}}, {{-7.5, 
                  10.227272727272748`}, {7.5, 10.227272727272748`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.68181818181816}, {
                    Rational[15, 2], 30.68181818181816}}, {{-7.5, 
                  30.68181818181816}, {7.5, 30.68181818181816}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.136363636363626`}, {
                    Rational[15, 2], 51.136363636363626`}}, {{-7.5, 
                  51.136363636363626`}, {7.5, 51.136363636363626`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.59090909090912}, {
                    Rational[15, 2], 71.59090909090912}}, {{-7.5, 
                  71.59090909090912}, {7.5, 71.59090909090912}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 92.0454545454545}, {
                    Rational[15, 2], 92.0454545454545}}, {{-7.5, 
                  92.0454545454545}, {7.5, 92.0454545454545}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.500000000000001, -71.59090909090887}, 
                    
                    Offset[{4., 0}, {
                    7.500000000000001, -71.59090909090887}]}, {{
                    7.500000000000001, -30.681818181817942`}, 
                    Offset[{4., 0}, {
                    7.500000000000001, -30.681818181817942`}]}, {{
                    7.500000000000001, 10.227272727272965`}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    10.227272727272965`}]}, {{7.500000000000001, 
                    51.13636363636387}, 
                    
                    Offset[{4., 0}, {7.500000000000001, 
                    51.13636363636387}]}, {{7.500000000000001, 
                    92.0454545454547}, 
                    Offset[{4., 0}, {7.500000000000001, 92.0454545454547}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["300000000000000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -71.59090909090887}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["400000000000000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.500000000000001, -30.681818181817942`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["500000000000000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    10.227272727272965`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["600000000000000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    51.13636363636387}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["700000000000000", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.500000000000001, 
                    92.0454545454547}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "2.304836502697445`*^14", ",", "7.179415971284624`*^14"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"2.5`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"3.`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"3.5`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"4.`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"4.5`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"5.`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"5.5`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"6.`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"6.5`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{"7.`*^14", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}]}],
              "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.675404108395117*^9, 3.6754042512265654`*^9, 
  3.6793366294852195`*^9, 3.6793550147249556`*^9, 3.690944036405908*^9, 
  3.6909465344473877`*^9, 3.69094677220646*^9, 3.691740286613071*^9, 
  3.7005579065135202`*^9, 3.708654595776126*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1301, 744},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
CellContext->Notebook,
Magnification:>1.2 Inherited,
FrontEndVersion->"10.0 for Linux x86 (64-bit) (June 27, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 138, 2, 111, "Title"],
Cell[721, 26, 564, 14, 279, "Text"],
Cell[1288, 42, 4244, 99, 303, "Input"],
Cell[5535, 143, 3938, 93, 423, "Input"],
Cell[CellGroupData[{
Cell[9498, 240, 595, 13, 37, "Input"],
Cell[10096, 255, 854, 19, 37, "Output"]
}, Open  ]],
Cell[10965, 277, 4460, 123, 270, "Input"],
Cell[15428, 402, 3419, 97, 254, "Input"],
Cell[CellGroupData[{
Cell[18872, 503, 101, 1, 37, "Input"],
Cell[18976, 506, 668, 21, 64, "Output"]
}, Open  ]],
Cell[19659, 530, 840, 27, 86, "Input"],
Cell[CellGroupData[{
Cell[20524, 561, 132, 1, 53, "Subsection"],
Cell[20659, 564, 457, 10, 86, "Input"],
Cell[21119, 576, 1908, 54, 158, "Input"],
Cell[CellGroupData[{
Cell[23052, 634, 676, 15, 37, "Input"],
Cell[23731, 651, 1164, 21, 177, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[24944, 678, 143, 1, 54, "Subsection"],
Cell[CellGroupData[{
Cell[25112, 683, 567, 17, 86, "Input"],
Cell[25682, 702, 481, 9, 37, "Output"],
Cell[26166, 713, 628, 15, 56, "Output"],
Cell[26797, 730, 649, 16, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27495, 752, 111, 1, 53, "Subsection"],
Cell[27609, 755, 5626, 150, 374, "Input"],
Cell[33238, 907, 1843, 41, 134, "Input"],
Cell[35084, 950, 3362, 86, 254, "Input"],
Cell[38449, 1038, 2262, 55, 201, "Input"],
Cell[40714, 1095, 222, 5, 37, "Input"],
Cell[40939, 1102, 5637, 137, 566, "Input"],
Cell[46579, 1241, 9168, 127, 37, "Input"],
Cell[55750, 1370, 370, 10, 134, "Input"],
Cell[CellGroupData[{
Cell[56145, 1384, 19245, 364, 806, "Input"],
Cell[75393, 1750, 6683, 147, 701, "Output"]
}, Open  ]],
Cell[82091, 1900, 626, 13, 110, "Input"],
Cell[82720, 1915, 46149, 1032, 2405, "Input"],
Cell[CellGroupData[{
Cell[128894, 2951, 1434, 34, 62, "Input"],
Cell[130331, 2987, 248069, 4324, 457, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

